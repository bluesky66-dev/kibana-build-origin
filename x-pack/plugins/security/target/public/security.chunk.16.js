/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window["security_bundle_jsonpfunction"]=window["security_bundle_jsonpfunction"]||[]).push([[16],{293:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"RoleMappingsAPIClient",(function(){return RoleMappingsAPIClient}));class RoleMappingsAPIClient{constructor(http){this.http=http}async checkRoleMappingFeatures(){return this.http.get(`/internal/security/_check_role_mapping_features`)}async getRoleMappings(){return this.http.get(`/internal/security/role_mapping`)}async getRoleMapping(name){return this.http.get(`/internal/security/role_mapping/${encodeURIComponent(name)}`)}async saveRoleMapping(roleMapping){const{name:name,...payload}=roleMapping;return this.http.post(`/internal/security/role_mapping/${encodeURIComponent(name)}`,{body:JSON.stringify(payload)})}async deleteRoleMappings(names){return Promise.all(names.map(name=>this.http.delete(`/internal/security/role_mapping/${encodeURIComponent(name)}`).then(()=>({success:true,name:name})).catch(error=>({success:false,name:name,error:error}))))}}}}]);