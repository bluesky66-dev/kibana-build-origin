(window["tileMap_bundle_jsonpfunction"]=window["tileMap_bundle_jsonpfunction"]||[]).push([[1,4],{18:function(module,exports,__webpack_require__){"use strict";var isOldIE=function isOldIE(){var memo;return function memorize(){if(typeof memo==="undefined"){memo=Boolean(window&&document&&document.all&&!window.atob)}return memo}}();var getTarget=function getTarget(){var memo={};return function memorize(target){if(typeof memo[target]==="undefined"){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement){try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}}memo[target]=styleTarget}return memo[target]}}();var stylesInDom=[];function getIndexByIdentifier(identifier){var result=-1;for(var i=0;i<stylesInDom.length;i++){if(stylesInDom[i].identifier===identifier){result=i;break}}return result}function modulesToDom(list,options){var idCountMap={};var identifiers=[];for(var i=0;i<list.length;i++){var item=list[i];var id=options.base?item[0]+options.base:item[0];var count=idCountMap[id]||0;var identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var index=getIndexByIdentifier(identifier);var obj={css:item[1],media:item[2],sourceMap:item[3]};if(index!==-1){stylesInDom[index].references++;stylesInDom[index].updater(obj)}else{stylesInDom.push({identifier:identifier,updater:addStyle(obj,options),references:1})}identifiers.push(identifier)}return identifiers}function insertStyleElement(options){var style=document.createElement("style");var attributes=options.attributes||{};if(typeof attributes.nonce==="undefined"){var nonce=true?__webpack_require__.nc:undefined;if(nonce){attributes.nonce=nonce}}Object.keys(attributes).forEach((function(key){style.setAttribute(key,attributes[key])}));if(typeof options.insert==="function"){options.insert(style)}else{var target=getTarget(options.insert||"head");if(!target){throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.")}target.appendChild(style)}return style}function removeStyleElement(style){if(style.parentNode===null){return false}style.parentNode.removeChild(style)}var replaceText=function replaceText(){var textStore=[];return function replace(index,replacement){textStore[index]=replacement;return textStore.filter(Boolean).join("\n")}}();function applyToSingletonTag(style,index,remove,obj){var css=remove?"":obj.media?"@media ".concat(obj.media," {").concat(obj.css,"}"):obj.css;if(style.styleSheet){style.styleSheet.cssText=replaceText(index,css)}else{var cssNode=document.createTextNode(css);var childNodes=style.childNodes;if(childNodes[index]){style.removeChild(childNodes[index])}if(childNodes.length){style.insertBefore(cssNode,childNodes[index])}else{style.appendChild(cssNode)}}}function applyToTag(style,options,obj){var css=obj.css;var media=obj.media;var sourceMap=obj.sourceMap;if(media){style.setAttribute("media",media)}else{style.removeAttribute("media")}if(sourceMap&&btoa){css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")}if(style.styleSheet){style.styleSheet.cssText=css}else{while(style.firstChild){style.removeChild(style.firstChild)}style.appendChild(document.createTextNode(css))}}var singleton=null;var singletonCounter=0;function addStyle(obj,options){var style;var update;var remove;if(options.singleton){var styleIndex=singletonCounter++;style=singleton||(singleton=insertStyleElement(options));update=applyToSingletonTag.bind(null,style,styleIndex,false);remove=applyToSingletonTag.bind(null,style,styleIndex,true)}else{style=insertStyleElement(options);update=applyToTag.bind(null,style,options);remove=function remove(){removeStyleElement(style)}}update(obj);return function updateStyle(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap){return}update(obj=newObj)}else{remove()}}}module.exports=function(list,options){options=options||{};if(!options.singleton&&typeof options.singleton!=="boolean"){options.singleton=isOldIE()}list=list||[];var lastIdentifiers=modulesToDom(list,options);return function update(newList){newList=newList||[];if(Object.prototype.toString.call(newList)!=="[object Array]"){return}for(var i=0;i<lastIdentifiers.length;i++){var identifier=lastIdentifiers[i];var index=getIndexByIdentifier(identifier);stylesInDom[index].references--}var newLastIdentifiers=modulesToDom(newList,options);for(var _i=0;_i<lastIdentifiers.length;_i++){var _identifier=lastIdentifiers[_i];var _index=getIndexByIdentifier(_identifier);if(stylesInDom[_index].references===0){stylesInDom[_index].updater();stylesInDom.splice(_index,1)}}lastIdentifiers=newLastIdentifiers}}},19:function(module,exports,__webpack_require__){"use strict";module.exports=function(useSourceMap){var list=[];list.toString=function toString(){return this.map((function(item){var content=cssWithMappingToString(item,useSourceMap);if(item[2]){return"@media ".concat(item[2]," {").concat(content,"}")}return content})).join("")};list.i=function(modules,mediaQuery,dedupe){if(typeof modules==="string"){modules=[[null,modules,""]]}var alreadyImportedModules={};if(dedupe){for(var i=0;i<this.length;i++){var id=this[i][0];if(id!=null){alreadyImportedModules[id]=true}}}for(var _i=0;_i<modules.length;_i++){var item=[].concat(modules[_i]);if(dedupe&&alreadyImportedModules[item[0]]){continue}if(mediaQuery){if(!item[2]){item[2]=mediaQuery}else{item[2]="".concat(mediaQuery," and ").concat(item[2])}}list.push(item)}};return list};function cssWithMappingToString(item,useSourceMap){var content=item[1]||"";var cssMapping=item[3];if(!cssMapping){return content}if(useSourceMap&&typeof btoa==="function"){var sourceMapping=toComment(cssMapping);var sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}function toComment(sourceMap){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));var data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);return"/*# ".concat(data," */")}},22:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"convertToGeoJson",(function(){return convertToGeoJson}));__webpack_require__.d(__webpack_exports__,"geoContains",(function(){return geoContains}));function decodeGeoHash(geohash){const BITS=[16,8,4,2,1];const BASE32="0123456789bcdefghjkmnpqrstuvwxyz";let isEven=true;const lat=[];const lon=[];lat[0]=-90;lat[1]=90;lon[0]=-180;lon[1]=180;let latErr=90;let lonErr=180;[...geohash].forEach(nextChar=>{const cd=BASE32.indexOf(nextChar);for(let j=0;j<5;j++){const mask=BITS[j];if(isEven){lonErr=lonErr/=2;refineInterval(lon,cd,mask)}else{latErr=latErr/=2;refineInterval(lat,cd,mask)}isEven=!isEven}});lat[2]=(lat[0]+lat[1])/2;lon[2]=(lon[0]+lon[1])/2;return{latitude:lat,longitude:lon}}function refineInterval(interval,cd,mask){if(cd&mask){interval[0]=(interval[0]+interval[1])/2}else{interval[1]=(interval[0]+interval[1])/2}}function geoContains(collar,bounds){if(!bounds||!collar)return false;if(bounds.top_left.lat>collar.top_left.lat||bounds.top_left.lon<collar.top_left.lon){return false}if(bounds.bottom_right.lat<collar.bottom_right.lat||bounds.bottom_right.lon>collar.bottom_right.lon){return false}return true}const gridAtEquator={1:[5009400,4992600],2:[1252300,624100],3:[156500,156e3],4:[39100,19500],5:[4900,4900],6:[1200,609.4],7:[152.9,152.4],8:[38.2,19],9:[4.8,4.8],10:[1.2,.595],11:[.149,.149],12:[.037,.019]};function gridDimensions(precision){return gridAtEquator[precision]}function convertToGeoJson(tabifiedResponse,{geohash:geohash,geocentroid:geocentroid,metric:metric}){let features;let min=Infinity;let max=-Infinity;if(tabifiedResponse&&tabifiedResponse.rows){const table=tabifiedResponse;const geohashColumn=geohash?table.columns[geohash.accessor]:null;if(!geohashColumn){features=[]}else{const metricColumn=table.columns[metric.accessor];const geocentroidColumn=geocentroid?table.columns[geocentroid.accessor]:null;features=table.rows.map(row=>{const geohashValue=row[geohashColumn.id];if(!geohashValue)return false;const geohashLocation=decodeGeoHash(geohashValue);let pointCoordinates;if(geocentroidColumn){const location=row[geocentroidColumn.id];pointCoordinates=[location.lon,location.lat]}else{pointCoordinates=[geohashLocation.longitude[2],geohashLocation.latitude[2]]}const rectangle=[[geohashLocation.latitude[0],geohashLocation.longitude[0]],[geohashLocation.latitude[0],geohashLocation.longitude[1]],[geohashLocation.latitude[1],geohashLocation.longitude[1]],[geohashLocation.latitude[1],geohashLocation.longitude[0]]];const centerLatLng=[geohashLocation.latitude[2],geohashLocation.longitude[2]];if(geohash!==null&&geohash!==void 0&&geohash.params.useGeocentroid){pointCoordinates[0]=clampGrid(pointCoordinates[0],geohashLocation.longitude[0],geohashLocation.longitude[1]);pointCoordinates[1]=clampGrid(pointCoordinates[1],geohashLocation.latitude[0],geohashLocation.latitude[1])}const value=row[metricColumn.id];min=Math.min(min,value);max=Math.max(max,value);return{type:"Feature",geometry:{type:"Point",coordinates:pointCoordinates},properties:{geohash:geohashValue,geohash_meta:{center:centerLatLng,rectangle:rectangle},value:value}}}).filter(row=>!!row)}}else{features=[]}const convertedData={featureCollection:{type:"FeatureCollection",features:features},meta:{min:min,max:max,geohashPrecision:geohash===null||geohash===void 0?void 0:geohash.params.precision,geohashGridDimensionsAtEquator:geohash!==null&&geohash!==void 0&&geohash.params.precision?gridDimensions(geohash.params.precision):undefined}};if(geohash&&geohash.accessor){convertedData.meta.geohash=tabifiedResponse.columns[geohash.accessor].meta}return convertedData}function clampGrid(val,min,max){if(val>max)val=max;else if(val<min)val=min;return val}},23:function(module,exports,__webpack_require__){switch(window.__kbnThemeTag__){case"v7dark":return __webpack_require__(24);case"v7light":return __webpack_require__(26);case"v8dark":return __webpack_require__(28);case"v8light":return __webpack_require__(30)}},24:function(module,exports,__webpack_require__){var api=__webpack_require__(18);var content=__webpack_require__(25);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},25:function(module,exports,__webpack_require__){var ___CSS_LOADER_API_IMPORT___=__webpack_require__(19);exports=___CSS_LOADER_API_IMPORT___(false);exports.push([module.i,".tlmChart__wrapper, .tlmChart {\n  flex: 1 1 0;\n  display: flex; }\n",""]);module.exports=exports},26:function(module,exports,__webpack_require__){var api=__webpack_require__(18);var content=__webpack_require__(27);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},27:function(module,exports,__webpack_require__){var ___CSS_LOADER_API_IMPORT___=__webpack_require__(19);exports=___CSS_LOADER_API_IMPORT___(false);exports.push([module.i,".tlmChart__wrapper, .tlmChart {\n  flex: 1 1 0;\n  display: flex; }\n",""]);module.exports=exports},28:function(module,exports,__webpack_require__){var api=__webpack_require__(18);var content=__webpack_require__(29);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},29:function(module,exports,__webpack_require__){var ___CSS_LOADER_API_IMPORT___=__webpack_require__(19);exports=___CSS_LOADER_API_IMPORT___(false);exports.push([module.i,".tlmChart__wrapper, .tlmChart {\n  flex: 1 1 0;\n  display: flex; }\n",""]);module.exports=exports},30:function(module,exports,__webpack_require__){var api=__webpack_require__(18);var content=__webpack_require__(31);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},31:function(module,exports,__webpack_require__){var ___CSS_LOADER_API_IMPORT___=__webpack_require__(19);exports=___CSS_LOADER_API_IMPORT___(false);exports.push([module.i,".tlmChart__wrapper, .tlmChart {\n  flex: 1 1 0;\n  display: flex; }\n",""]);module.exports=exports},33:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",(function(){return TileMapVisualization}));var external_kbnSharedDeps_React_=__webpack_require__(2);var external_kbnSharedDeps_React_default=__webpack_require__.n(external_kbnSharedDeps_React_);var external_kbnSharedDeps_ElasticEui_=__webpack_require__(13);var external_kbnSharedDeps_Lodash_=__webpack_require__(7);var services=__webpack_require__(0);var public_=__webpack_require__(8);var external_kbnSharedDeps_KbnI18n_=__webpack_require__(1);function tooltipFormatter(metricTitle,metricFormat,feature){if(!feature){return""}return[{label:metricTitle,value:metricFormat(feature.properties.value)},{label:external_kbnSharedDeps_KbnI18n_["i18n"].translate("tileMap.tooltipFormatter.latitudeLabel",{defaultMessage:"Latitude"}),value:feature.geometry.coordinates[1]},{label:external_kbnSharedDeps_KbnI18n_["i18n"].translate("tileMap.tooltipFormatter.longitudeLabel",{defaultMessage:"Longitude"}),value:feature.geometry.coordinates[0]}]}var utils=__webpack_require__(22);function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function scaleBounds(bounds){const scale=.5;const topLeft=bounds.top_left;const bottomRight=bounds.bottom_right;let latDiff=Object(external_kbnSharedDeps_Lodash_["round"])(Math.abs(topLeft.lat-bottomRight.lat),5);const lonDiff=Object(external_kbnSharedDeps_Lodash_["round"])(Math.abs(bottomRight.lon-topLeft.lon),5);if(latDiff===0)latDiff=lonDiff;const latDelta=latDiff*scale;let topLeftLat=Object(external_kbnSharedDeps_Lodash_["round"])(topLeft.lat,5)+latDelta;if(topLeftLat>90)topLeftLat=90;let bottomRightLat=Object(external_kbnSharedDeps_Lodash_["round"])(bottomRight.lat,5)-latDelta;if(bottomRightLat<-90)bottomRightLat=-90;const lonDelta=lonDiff*scale;let topLeftLon=Object(external_kbnSharedDeps_Lodash_["round"])(topLeft.lon,5)-lonDelta;if(topLeftLon<-180)topLeftLon=-180;let bottomRightLon=Object(external_kbnSharedDeps_Lodash_["round"])(bottomRight.lon,5)+lonDelta;if(bottomRightLon>180)bottomRightLon=180;return{top_left:{lat:topLeftLat,lon:topLeftLon},bottom_right:{lat:bottomRightLat,lon:bottomRightLon}}}const createTileMapVisualization=dependencies=>{var _temp;const{getZoomPrecision:getZoomPrecision,getPrecision:getPrecision,BaseMapsVisualization:BaseMapsVisualization}=dependencies;return _temp=class CoordinateMapsVisualization extends BaseMapsVisualization{constructor(element,handlers,initialVisParams){super(element,handlers,initialVisParams);_defineProperty(this,"updateGeohashAgg",()=>{const geohashAgg=this._getGeoHashAgg();if(!geohashAgg)return;const updateVarsObject={name:"bounds",data:{}};const bounds=this._kibanaMap.getBounds();const mapCollar=scaleBounds(bounds);if(!Object(utils["geoContains"])(geohashAgg.sourceParams.params.boundingBox,mapCollar)){updateVarsObject.data.boundingBox={top_left:mapCollar.top_left,bottom_right:mapCollar.bottom_right}}else{updateVarsObject.data.boundingBox=geohashAgg.sourceParams.params.boundingBox}const zoomPrecision=getZoomPrecision();updateVarsObject.data.precision=geohashAgg.sourceParams.params.autoPrecision?zoomPrecision[this.handlers.uiState.get("mapZoom")]:getPrecision(geohashAgg.sourceParams.params.precision);this.handlers.event(updateVarsObject)});this._geohashLayer=null;this._tooltipFormatter=Object(public_["mapTooltipProvider"])(element,tooltipFormatter)}async render(esResponse,visParams){Object(services["c"])().loadFontAwesome();await super.render(esResponse,visParams)}async _makeKibanaMap(){await super._makeKibanaMap(this._params);let previousPrecision=this._kibanaMap.getGeohashPrecision();let precisionChange=false;this.handlers.uiState.on("change",prop=>{if(prop==="mapZoom"||prop==="mapCenter"){this.updateGeohashAgg()}});this._kibanaMap.on("zoomchange",()=>{precisionChange=previousPrecision!==this._kibanaMap.getGeohashPrecision();previousPrecision=this._kibanaMap.getGeohashPrecision()});this._kibanaMap.on("zoomend",()=>{const geohashAgg=this._getGeoHashAgg();if(!geohashAgg){return}const isAutoPrecision=typeof geohashAgg.sourceParams.params.autoPrecision==="boolean"?geohashAgg.sourceParams.params.autoPrecision:true;if(!isAutoPrecision){return}if(precisionChange){this.updateGeohashAgg()}else{this._updateData(this._geoJsonFeatureCollectionAndMeta)}});this._kibanaMap.addDrawControl();this._kibanaMap.on("drawCreated:rectangle",event=>{const geohashAgg=this._getGeoHashAgg();this.addSpatialFilter(geohashAgg,"geo_bounding_box",event.bounds)});this._kibanaMap.on("drawCreated:polygon",event=>{const geohashAgg=this._getGeoHashAgg();this.addSpatialFilter(geohashAgg,"geo_polygon",{points:event.points})})}async _updateData(geojsonFeatureCollectionAndMeta){if(this._getMapsParams().mapType!=="Heatmap"&&geojsonFeatureCollectionAndMeta===this._geoJsonFeatureCollectionAndMeta){return}if(this._geohashLayer){this._kibanaMap.removeLayer(this._geohashLayer);this._geohashLayer=null}if(!geojsonFeatureCollectionAndMeta){this._geoJsonFeatureCollectionAndMeta=null;this._kibanaMap.removeLayer(this._geohashLayer);this._geohashLayer=null;return}if(!this._geoJsonFeatureCollectionAndMeta||!geojsonFeatureCollectionAndMeta.featureCollection.features.length){this._geoJsonFeatureCollectionAndMeta=geojsonFeatureCollectionAndMeta;this.updateGeohashAgg()}this._geoJsonFeatureCollectionAndMeta=geojsonFeatureCollectionAndMeta;this._recreateGeohashLayer()}async _recreateGeohashLayer(){const{GeohashLayer:GeohashLayer}=await __webpack_require__.e(2).then(__webpack_require__.bind(null,32));if(this._geohashLayer){this._kibanaMap.removeLayer(this._geohashLayer);this._geohashLayer=null}const geohashOptions=this._getGeohashOptions();this._geohashLayer=new GeohashLayer(this._geoJsonFeatureCollectionAndMeta.featureCollection,this._geoJsonFeatureCollectionAndMeta.meta,geohashOptions,this._kibanaMap.getZoomLevel(),this._kibanaMap,(await Object(public_["lazyLoadMapsLegacyModules"])()).L);this._kibanaMap.addLayer(this._geohashLayer)}async _updateParams(){await super._updateParams();this._kibanaMap.setDesaturateBaseLayer(this._params.isDesaturated);const geohashOptions=this._getGeohashOptions();if(!this._geohashLayer||!this._geohashLayer.isReusable(geohashOptions)){if(this._geoJsonFeatureCollectionAndMeta){this._recreateGeohashLayer()}this._updateData(this._geoJsonFeatureCollectionAndMeta)}}_getGeohashOptions(){const newParams=this._getMapsParams();const metricDimension=this._params.dimensions.metric;const metricLabel=metricDimension?metricDimension.label:"";const metricFormat=Object(services["b"])().deserialize(metricDimension&&metricDimension.format);return{label:metricLabel,valueFormatter:this._geoJsonFeatureCollectionAndMeta?metricFormat.getConverterFor("text"):null,tooltipFormatter:this._geoJsonFeatureCollectionAndMeta?this._tooltipFormatter.bind(null,metricLabel,metricFormat.getConverterFor("text")):null,mapType:newParams.mapType,isFilteredByCollar:this._isFilteredByCollar(),colorRamp:newParams.colorSchema,heatmap:{heatClusterSize:newParams.heatClusterSize}}}addSpatialFilter(agg,filterName,filterData){if(!agg){return}const indexPatternName=agg.indexPatternId;const field=agg.field;const filter={meta:{negate:false,index:indexPatternName}};filter[filterName]={ignore_unmapped:true};filter[filterName][field]=filterData;const{filterManager:filterManager}=Object(services["d"])();filterManager.addFilters([filter])}_getGeoHashAgg(){return this._geoJsonFeatureCollectionAndMeta&&this._geoJsonFeatureCollectionAndMeta.meta.geohash}_isFilteredByCollar(){const DEFAULT=false;const agg=this._getGeoHashAgg();if(agg){return Object(external_kbnSharedDeps_Lodash_["get"])(agg,"sourceParams.params.isFilteredByCollar",DEFAULT)}else{return DEFAULT}}},_temp};var tile_map_visualization=__webpack_require__(23);const TileMapVisualization=({deps:deps,handlers:handlers,visData:visData,visConfig:visConfig})=>{const chartDiv=Object(external_kbnSharedDeps_React_["useRef"])(null);const visController=Object(external_kbnSharedDeps_React_["useRef"])(null);const isFirstRender=Object(external_kbnSharedDeps_React_["useRef"])(true);const uiState=handlers.uiState;Object(external_kbnSharedDeps_React_["useEffect"])(()=>{if(chartDiv.current&&isFirstRender.current){isFirstRender.current=false;const Controller=createTileMapVisualization(deps);visController.current=new Controller(chartDiv.current,handlers,visConfig)}},[deps,handlers,visConfig,visData]);Object(external_kbnSharedDeps_React_["useEffect"])(()=>{var _visController$curren;(_visController$curren=visController.current)===null||_visController$curren===void 0?void 0:_visController$curren.render(visData,visConfig).then(handlers.done)},[visData,visConfig,handlers.done]);Object(external_kbnSharedDeps_React_["useEffect"])(()=>{const onUiStateChange=()=>{var _visController$curren2;(_visController$curren2=visController.current)===null||_visController$curren2===void 0?void 0:_visController$curren2.render().then(handlers.done)};uiState.on("change",onUiStateChange);return()=>{uiState.off("change",onUiStateChange)}},[uiState,handlers.done]);Object(external_kbnSharedDeps_React_["useEffect"])(()=>()=>{var _visController$curren3;(_visController$curren3=visController.current)===null||_visController$curren3===void 0?void 0:_visController$curren3.destroy();visController.current=null},[]);const updateChartSize=Object(external_kbnSharedDeps_React_["useMemo"])(()=>Object(external_kbnSharedDeps_Lodash_["throttle"])(()=>{var _visController$curren4;return(_visController$curren4=visController.current)===null||_visController$curren4===void 0?void 0:_visController$curren4.resize()},300),[]);return external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_["EuiResizeObserver"],{onResize:updateChartSize},resizeRef=>external_kbnSharedDeps_React_default.a.createElement("div",{className:"tlmChart__wrapper",ref:resizeRef},external_kbnSharedDeps_React_default.a.createElement("div",{className:"tlmChart",ref:chartDiv})))}}}]);