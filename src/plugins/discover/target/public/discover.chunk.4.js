(window["discover_bundle_jsonpfunction"]=window["discover_bundle_jsonpfunction"]||[]).push([[4],{215:function(module,exports,__webpack_require__){switch(window.__kbnThemeTag__){case"v7dark":return __webpack_require__(216);case"v7light":return __webpack_require__(218);case"v8dark":return __webpack_require__(220);case"v8light":return __webpack_require__(222)}},216:function(module,exports,__webpack_require__){var api=__webpack_require__(10);var content=__webpack_require__(217);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},217:function(module,exports,__webpack_require__){var ___CSS_LOADER_API_IMPORT___=__webpack_require__(11);exports=___CSS_LOADER_API_IMPORT___(false);exports.push([module.i,"/**\n   * 1. We want the kbnDocTable__container to scroll only when embedded in an embeddable panel\n   * 2. Force a better looking scrollbar\n   */\n.embPanel .kbnDocTable__container {\n  scrollbar-width: thin;\n  /* 2 */\n  flex: 1 1 0;\n  /* 1 */\n  overflow: auto;\n  /* 1 */ }\n  .embPanel .kbnDocTable__container::-webkit-scrollbar {\n    width: 16px;\n    height: 16px; }\n  .embPanel .kbnDocTable__container::-webkit-scrollbar-thumb {\n    background-color: rgba(152, 162, 179, 0.5);\n    border: 6px solid transparent;\n    background-clip: content-box; }\n  .embPanel .kbnDocTable__container::-webkit-scrollbar-corner, .embPanel .kbnDocTable__container::-webkit-scrollbar-track {\n    background-color: transparent; }\n",""]);module.exports=exports},218:function(module,exports,__webpack_require__){var api=__webpack_require__(10);var content=__webpack_require__(219);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},219:function(module,exports,__webpack_require__){var ___CSS_LOADER_API_IMPORT___=__webpack_require__(11);exports=___CSS_LOADER_API_IMPORT___(false);exports.push([module.i,"/**\n   * 1. We want the kbnDocTable__container to scroll only when embedded in an embeddable panel\n   * 2. Force a better looking scrollbar\n   */\n.embPanel .kbnDocTable__container {\n  scrollbar-width: thin;\n  /* 2 */\n  flex: 1 1 0;\n  /* 1 */\n  overflow: auto;\n  /* 1 */ }\n  .embPanel .kbnDocTable__container::-webkit-scrollbar {\n    width: 16px;\n    height: 16px; }\n  .embPanel .kbnDocTable__container::-webkit-scrollbar-thumb {\n    background-color: rgba(105, 112, 125, 0.5);\n    border: 6px solid transparent;\n    background-clip: content-box; }\n  .embPanel .kbnDocTable__container::-webkit-scrollbar-corner, .embPanel .kbnDocTable__container::-webkit-scrollbar-track {\n    background-color: transparent; }\n",""]);module.exports=exports},220:function(module,exports,__webpack_require__){var api=__webpack_require__(10);var content=__webpack_require__(221);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},221:function(module,exports,__webpack_require__){var ___CSS_LOADER_API_IMPORT___=__webpack_require__(11);exports=___CSS_LOADER_API_IMPORT___(false);exports.push([module.i,"/**\n   * 1. We want the kbnDocTable__container to scroll only when embedded in an embeddable panel\n   * 2. Force a better looking scrollbar\n   */\n.embPanel .kbnDocTable__container {\n  scrollbar-width: thin;\n  /* 2 */\n  flex: 1 1 0;\n  /* 1 */\n  overflow: auto;\n  /* 1 */ }\n  .embPanel .kbnDocTable__container::-webkit-scrollbar {\n    width: 16px;\n    height: 16px; }\n  .embPanel .kbnDocTable__container::-webkit-scrollbar-thumb {\n    background-color: rgba(152, 162, 179, 0.5);\n    border: 6px solid transparent;\n    background-clip: content-box; }\n  .embPanel .kbnDocTable__container::-webkit-scrollbar-corner, .embPanel .kbnDocTable__container::-webkit-scrollbar-track {\n    background-color: transparent; }\n",""]);module.exports=exports},222:function(module,exports,__webpack_require__){var api=__webpack_require__(10);var content=__webpack_require__(223);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},223:function(module,exports,__webpack_require__){var ___CSS_LOADER_API_IMPORT___=__webpack_require__(11);exports=___CSS_LOADER_API_IMPORT___(false);exports.push([module.i,"/**\n   * 1. We want the kbnDocTable__container to scroll only when embedded in an embeddable panel\n   * 2. Force a better looking scrollbar\n   */\n.embPanel .kbnDocTable__container {\n  scrollbar-width: thin;\n  /* 2 */\n  flex: 1 1 0;\n  /* 1 */\n  overflow: auto;\n  /* 1 */ }\n  .embPanel .kbnDocTable__container::-webkit-scrollbar {\n    width: 16px;\n    height: 16px; }\n  .embPanel .kbnDocTable__container::-webkit-scrollbar-thumb {\n    background-color: rgba(105, 112, 125, 0.5);\n    border: 6px solid transparent;\n    background-clip: content-box; }\n  .embPanel .kbnDocTable__container::-webkit-scrollbar-corner, .embPanel .kbnDocTable__container::-webkit-scrollbar-track {\n    background-color: transparent; }\n",""]);module.exports=exports},61:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"SearchEmbeddable",(function(){return search_embeddable_SearchEmbeddable}));var search_embeddable=__webpack_require__(215);var external_kbnSharedDeps_Angular_=__webpack_require__(9);var external_kbnSharedDeps_Angular_default=__webpack_require__.n(external_kbnSharedDeps_Angular_);var external_kbnSharedDeps_Lodash_=__webpack_require__(20);var external_kbnSharedDeps_Lodash_default=__webpack_require__.n(external_kbnSharedDeps_Lodash_);var external_kbnSharedDeps_KbnI18n_=__webpack_require__(1);var public_=__webpack_require__(54);var data_public_=__webpack_require__(4);var embeddable_public_=__webpack_require__(17);var actions_columns=__webpack_require__(81);var search_template='<doc-table\n  class="panel-content"\n  columns="columns"\n  data-description="{{description}}"\n  data-shared-item\n  data-test-subj="embeddedSavedSearchDocTable"\n  data-title="{{sharedItemTitle}}"\n  filter="filter"\n  hits="hits"\n  index-pattern="indexPattern"\n  is-loading="isLoading"\n  on-add-column="addColumn"\n  on-change-sort-order="setSortOrder"\n  on-move-column="moveColumn"\n  on-remove-column="removeColumn"\n  render-complete\n  sorting="sort"\n  total-hit-count="totalHitCount"\n  use-new-fields-api="useNewFieldsApi"\n>\n</doc-table>\n';var search_template_datagrid='<discover-grid\n  class="dscDiscoverGrid"\n  columns="columns"\n  data-description="{{description}}"\n  data-shared-item\n  data-title="{{sharedItemTitle}}"\n  index-pattern="indexPattern"\n  on-add-column="addColumn"\n  on-filter="filter"\n  on-remove-column="removeColumn"\n  on-set-columns="setColumns"\n  on-sort="setSortOrder"\n  render-complete\n  rows="hits"\n  sample-size="500"\n  settings="settings"\n  show-time-col="showTimeCol"\n  sort="sort"\n></discover-grid>\n';var doc_table=__webpack_require__(64);var kibana_services=__webpack_require__(3);var constants=__webpack_require__(14);var common=__webpack_require__(62);var get_default_sort=__webpack_require__(79);var helpers=__webpack_require__(66);function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class search_embeddable_SearchEmbeddable extends embeddable_public_["Embeddable"]{constructor({$rootScope:$rootScope,$compile:$compile,savedSearch:savedSearch,editUrl:editUrl,editPath:editPath,indexPatterns:indexPatterns,editable:editable,filterManager:filterManager,services:services},initialInput,executeTriggerActions,parent){super(initialInput,{defaultTitle:savedSearch.title,editUrl:editUrl,editPath:editPath,editApp:"discover",indexPatterns:indexPatterns,editable:editable},parent);this.executeTriggerActions=executeTriggerActions;_defineProperty(this,"savedSearch",void 0);_defineProperty(this,"$rootScope",void 0);_defineProperty(this,"$compile",void 0);_defineProperty(this,"inspectorAdapters",void 0);_defineProperty(this,"searchScope",void 0);_defineProperty(this,"panelTitle","");_defineProperty(this,"filtersSearchSource",void 0);_defineProperty(this,"searchInstance",void 0);_defineProperty(this,"subscription",void 0);_defineProperty(this,"type",constants["a"]);_defineProperty(this,"filterManager",void 0);_defineProperty(this,"abortController",void 0);_defineProperty(this,"services",void 0);_defineProperty(this,"prevTimeRange",void 0);_defineProperty(this,"prevFilters",void 0);_defineProperty(this,"prevQuery",void 0);_defineProperty(this,"prevSearchSessionId",void 0);_defineProperty(this,"fetch",async()=>{const searchSessionId=this.input.searchSessionId;const useNewFieldsApi=!this.services.uiSettings.get(common["i"],false);if(!this.searchScope)return;const{searchSource:searchSource}=this.savedSearch;if(this.abortController)this.abortController.abort();this.abortController=new AbortController;searchSource.setField("size",this.services.uiSettings.get(common["h"]));searchSource.setField("sort",Object(doc_table["c"])(this.searchScope.sort,this.searchScope.indexPattern,this.services.uiSettings.get(common["k"])));if(useNewFieldsApi){searchSource.removeField("fieldsFromSource");const fields={field:"*",include_unmapped:"true"};searchSource.setField("fields",[fields])}else{searchSource.removeField("fields");if(this.searchScope.indexPattern){const fieldNames=this.searchScope.indexPattern.fields.map(field=>field.name);searchSource.setField("fieldsFromSource",fieldNames)}}this.inspectorAdapters.requests.reset();const title=external_kbnSharedDeps_KbnI18n_["i18n"].translate("discover.embeddable.inspectorRequestDataTitle",{defaultMessage:"Data"});const description=external_kbnSharedDeps_KbnI18n_["i18n"].translate("discover.embeddable.inspectorRequestDescription",{defaultMessage:"This request queries Elasticsearch to fetch the data for the search."});const inspectorRequest=this.inspectorAdapters.requests.start(title,{description:description,searchSessionId:searchSessionId});inspectorRequest.stats(Object(kibana_services["e"])(searchSource));searchSource.getSearchRequestBody().then(body=>{inspectorRequest.json(body)});this.updateOutput({loading:true,error:undefined});try{const resp=await searchSource.fetch({abortSignal:this.abortController.signal,sessionId:searchSessionId});this.updateOutput({loading:false,error:undefined});inspectorRequest.stats(Object(kibana_services["f"])(resp,searchSource)).ok({json:resp});this.searchScope.$apply(()=>{this.searchScope.hits=resp.hits.hits;this.searchScope.totalHitCount=resp.hits.total})}catch(error){this.updateOutput({loading:false,error:error})}});this.services=services;this.filterManager=filterManager;this.savedSearch=savedSearch;this.$rootScope=$rootScope;this.$compile=$compile;this.inspectorAdapters={requests:new public_["RequestAdapter"]};this.initializeSearchScope();this.subscription=this.getUpdated$().subscribe(()=>{this.panelTitle=this.output.title||"";if(this.searchScope){this.pushContainerStateParamsToScope(this.searchScope)}})}getInspectorAdapters(){return this.inspectorAdapters}getSavedSearch(){return this.savedSearch}render(domNode){if(!this.searchScope){throw new Error("Search scope not defined")}this.searchInstance=this.$compile(this.services.uiSettings.get("doc_table:legacy",true)?search_template:search_template_datagrid)(this.searchScope);const rootNode=external_kbnSharedDeps_Angular_default.a.element(domNode);rootNode.append(this.searchInstance);this.pushContainerStateParamsToScope(this.searchScope)}destroy(){super.destroy();this.savedSearch.destroy();if(this.searchInstance){this.searchInstance.remove()}if(this.searchScope){this.searchScope.$destroy();delete this.searchScope}if(this.subscription){this.subscription.unsubscribe()}if(this.abortController)this.abortController.abort()}initializeSearchScope(){const searchScope=this.searchScope=this.$rootScope.$new();searchScope.description=this.savedSearch.description;searchScope.inspectorAdapters=this.inspectorAdapters;const{searchSource:searchSource}=this.savedSearch;const indexPattern=searchScope.indexPattern=searchSource.getField("index");if(!this.savedSearch.sort||!this.savedSearch.sort.length){this.savedSearch.sort=Object(get_default_sort["a"])(indexPattern,Object(kibana_services["h"])().uiSettings.get(common["k"],"desc"))}const timeRangeSearchSource=searchSource.create();timeRangeSearchSource.setField("filter",()=>{if(!this.searchScope||!this.input.timeRange)return;return this.services.timefilter.createFilter(indexPattern,this.input.timeRange)});this.filtersSearchSource=searchSource.create();this.filtersSearchSource.setParent(timeRangeSearchSource);searchSource.setParent(this.filtersSearchSource);this.pushContainerStateParamsToScope(searchScope);searchScope.setSortOrder=sort=>{this.updateInput({sort:sort})};const useNewFieldsApi=!Object(kibana_services["h"])().uiSettings.get(common["i"],false);searchScope.useNewFieldsApi=useNewFieldsApi;searchScope.addColumn=columnName=>{if(!searchScope.columns){return}const columns=actions_columns["a"](searchScope.columns,columnName,useNewFieldsApi);this.updateInput({columns:columns})};searchScope.removeColumn=columnName=>{if(!searchScope.columns){return}const columns=actions_columns["d"](searchScope.columns,columnName,useNewFieldsApi);this.updateInput({columns:columns})};searchScope.moveColumn=(columnName,newIndex)=>{if(!searchScope.columns){return}const columns=actions_columns["c"](searchScope.columns,columnName,newIndex);this.updateInput({columns:columns})};searchScope.setColumns=columns=>{this.updateInput({columns:columns})};if(this.savedSearch.grid){searchScope.settings=this.savedSearch.grid}searchScope.showTimeCol=!this.services.uiSettings.get("doc_table:hideTimeColumn",false);searchScope.filter=async(field,value,operator)=>{let filters=data_public_["esFilters"].generateFilters(this.filterManager,field,value,operator,indexPattern.id);filters=filters.map(filter=>({...filter,$state:{store:data_public_["esFilters"].FilterStateStore.APP_STATE}}));await this.executeTriggerActions(data_public_["APPLY_FILTER_TRIGGER"],{embeddable:this,filters:filters})}}reload(){if(this.searchScope)this.pushContainerStateParamsToScope(this.searchScope,{forceFetch:true})}pushContainerStateParamsToScope(searchScope,{forceFetch:forceFetch=false}={forceFetch:false}){var _this$searchScope;const isFetchRequired=!data_public_["esFilters"].onlyDisabledFiltersChanged(this.input.filters,this.prevFilters)||!external_kbnSharedDeps_Lodash_default.a.isEqual(this.prevQuery,this.input.query)||!external_kbnSharedDeps_Lodash_default.a.isEqual(this.prevTimeRange,this.input.timeRange)||!external_kbnSharedDeps_Lodash_default.a.isEqual(searchScope.sort,this.input.sort||this.savedSearch.sort)||this.prevSearchSessionId!==this.input.searchSessionId;searchScope.columns=Object(helpers["d"])({columns:this.input.columns||this.savedSearch.columns},this.services.core.uiSettings).columns;const savedSearchSort=this.savedSearch.sort&&this.savedSearch.sort.length?this.savedSearch.sort:Object(get_default_sort["a"])((_this$searchScope=this.searchScope)===null||_this$searchScope===void 0?void 0:_this$searchScope.indexPattern,Object(kibana_services["h"])().uiSettings.get(common["k"],"desc"));searchScope.sort=this.input.sort||savedSearchSort;searchScope.sharedItemTitle=this.panelTitle;if(forceFetch||isFetchRequired){var _this$input$query,_this$input$filters;this.filtersSearchSource.setField("filter",this.input.filters);this.filtersSearchSource.setField("query",this.input.query);if((_this$input$query=this.input.query)!==null&&_this$input$query!==void 0&&_this$input$query.query||(_this$input$filters=this.input.filters)!==null&&_this$input$filters!==void 0&&_this$input$filters.length){this.filtersSearchSource.setField("highlightAll",true)}else{this.filtersSearchSource.removeField("highlightAll")}this.prevFilters=this.input.filters;this.prevQuery=this.input.query;this.prevTimeRange=this.input.timeRange;this.prevSearchSessionId=this.input.searchSessionId;this.fetch()}else if(this.searchScope){this.searchScope.$applyAsync()}}}},81:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return addColumn}));__webpack_require__.d(__webpack_exports__,"d",(function(){return removeColumn}));__webpack_require__.d(__webpack_exports__,"c",(function(){return moveColumn}));__webpack_require__.d(__webpack_exports__,"b",(function(){return getStateColumnActions}));var _helpers_popularize_field__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(67);var _common__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(62);function buildColumns(columns,useNewFieldsApi=false){if(columns.length>1&&columns.indexOf("_source")!==-1){return columns.filter(col=>col!=="_source")}else if(columns.length!==0){return columns}return useNewFieldsApi?[]:["_source"]}function addColumn(columns,columnName,useNewFieldsApi){if(columns.includes(columnName)){return columns}return buildColumns([...columns,columnName],useNewFieldsApi)}function removeColumn(columns,columnName,useNewFieldsApi){if(!columns.includes(columnName)){return columns}return buildColumns(columns.filter(col=>col!==columnName),useNewFieldsApi)}function moveColumn(columns,columnName,newIndex){if(newIndex<0||newIndex>=columns.length||!columns.includes(columnName)){return columns}const modifiedColumns=[...columns];modifiedColumns.splice(modifiedColumns.indexOf(columnName),1);modifiedColumns.splice(newIndex,0,columnName);return modifiedColumns}function getStateColumnActions({capabilities:capabilities,config:config,indexPattern:indexPattern,indexPatterns:indexPatterns,useNewFieldsApi:useNewFieldsApi,setAppState:setAppState,state:state}){function onAddColumn(columnName){var _state$sort;if(capabilities.discover.save){Object(_helpers_popularize_field__WEBPACK_IMPORTED_MODULE_0__["a"])(indexPattern,columnName,indexPatterns)}const columns=addColumn(state.columns||[],columnName,useNewFieldsApi);const defaultOrder=config.get(_common__WEBPACK_IMPORTED_MODULE_1__["k"]);const sort=columnName==="_score"&&!((_state$sort=state.sort)!==null&&_state$sort!==void 0&&_state$sort.length)?[["_score",defaultOrder]]:state.sort;setAppState({columns:columns,sort:sort})}function onRemoveColumn(columnName){if(capabilities.discover.save){Object(_helpers_popularize_field__WEBPACK_IMPORTED_MODULE_0__["a"])(indexPattern,columnName,indexPatterns)}const columns=removeColumn(state.columns||[],columnName,useNewFieldsApi);const sort=state.sort&&state.sort.length?state.sort.filter(subArr=>subArr[0]!==columnName):[];setAppState({columns:columns,sort:sort})}function onMoveColumn(columnName,newIndex){const columns=moveColumn(state.columns||[],columnName,newIndex);setAppState({columns:columns})}function onSetColumns(columns){const actualColumns=indexPattern.timeFieldName&&indexPattern.timeFieldName===columns[0]?columns.slice(1):columns;setAppState({columns:actualColumns})}return{onAddColumn:onAddColumn,onRemoveColumn:onRemoveColumn,onMoveColumn:onMoveColumn,onSetColumns:onSetColumns}}}}]);