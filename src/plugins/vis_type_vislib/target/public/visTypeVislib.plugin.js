(function(modules){function webpackJsonpCallback(data){var chunkIds=data[0];var moreModules=data[1];var moduleId,chunkId,i=0,resolves=[];for(;i<chunkIds.length;i++){chunkId=chunkIds[i];if(Object.prototype.hasOwnProperty.call(installedChunks,chunkId)&&installedChunks[chunkId]){resolves.push(installedChunks[chunkId][0])}installedChunks[chunkId]=0}for(moduleId in moreModules){if(Object.prototype.hasOwnProperty.call(moreModules,moduleId)){modules[moduleId]=moreModules[moduleId]}}if(parentJsonpFunction)parentJsonpFunction(data);while(resolves.length){resolves.shift()()}}var installedModules={};var installedChunks={0:0};function jsonpScriptSrc(chunkId){return __webpack_require__.p+"visTypeVislib.chunk."+chunkId+".js"}function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.e=function requireEnsure(chunkId){var promises=[];var installedChunkData=installedChunks[chunkId];if(installedChunkData!==0){if(installedChunkData){promises.push(installedChunkData[2])}else{var promise=new Promise((function(resolve,reject){installedChunkData=installedChunks[chunkId]=[resolve,reject]}));promises.push(installedChunkData[2]=promise);var script=document.createElement("script");var onScriptComplete;script.charset="utf-8";script.timeout=120;if(__webpack_require__.nc){script.setAttribute("nonce",__webpack_require__.nc)}script.src=jsonpScriptSrc(chunkId);var error=new Error;onScriptComplete=function(event){script.onerror=script.onload=null;clearTimeout(timeout);var chunk=installedChunks[chunkId];if(chunk!==0){if(chunk){var errorType=event&&(event.type==="load"?"missing":event.type);var realSrc=event&&event.target&&event.target.src;error.message="Loading chunk "+chunkId+" failed.\n("+errorType+": "+realSrc+")";error.name="ChunkLoadError";error.type=errorType;error.request=realSrc;chunk[1](error)}installedChunks[chunkId]=undefined}};var timeout=setTimeout((function(){onScriptComplete({type:"timeout",target:script})}),12e4);script.onerror=script.onload=onScriptComplete;document.head.appendChild(script)}}return Promise.all(promises)};__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";__webpack_require__.oe=function(err){console.error(err);throw err};var jsonpArray=window["visTypeVislib_bundle_jsonpfunction"]=window["visTypeVislib_bundle_jsonpfunction"]||[];var oldJsonpFunction=jsonpArray.push.bind(jsonpArray);jsonpArray.push=webpackJsonpCallback;jsonpArray=jsonpArray.slice();for(var i=0;i<jsonpArray.length;i++)webpackJsonpCallback(jsonpArray[i]);var parentJsonpFunction=oldJsonpFunction;return __webpack_require__(__webpack_require__.s=15)})([function(module,exports){module.exports=__kbnSharedDeps__.KbnI18n},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/visTypeXy/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Alignment}));__webpack_require__.d(__webpack_exports__,"b",(function(){return GaugeType}));__webpack_require__.d(__webpack_exports__,"c",(function(){return VislibChartType}));const Alignment=Object.freeze({Automatic:"automatic",Horizontal:"horizontal",Vertical:"vertical"});const GaugeType=Object.freeze({Arc:"Arc",Circle:"Circle"});const VislibChartType=Object.freeze({Histogram:"histogram",HorizontalBar:"horizontal_bar",Line:"line",Pie:"pie",Area:"area",PointSeries:"point_series",Heatmap:"heatmap",Gauge:"gauge",Goal:"goal",Metric:"metric"})},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/data/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/visualizations/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.React},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/charts/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/expressions/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getDataActions}));__webpack_require__.d(__webpack_exports__,"c",(function(){return setDataActions}));__webpack_require__.d(__webpack_exports__,"b",(function(){return getFormatService}));__webpack_require__.d(__webpack_exports__,"d",(function(){return setFormatService}));var _kibana_utils_public__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(12);var _kibana_utils_public__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_kibana_utils_public__WEBPACK_IMPORTED_MODULE_0__);const[getDataActions,setDataActions]=Object(_kibana_utils_public__WEBPACK_IMPORTED_MODULE_0__["createGetterSetter"])("vislib data.actions");const[getFormatService,setFormatService]=Object(_kibana_utils_public__WEBPACK_IMPORTED_MODULE_0__["createGetterSetter"])("vislib data.fieldFormats")},function(module,exports){module.exports=__kbnSharedDeps__.Lodash},function(module,exports){module.exports=__kbnSharedDeps__.Moment},function(module,exports){module.exports=__kbnSharedDeps__.ElasticCharts},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/kibanaUtils/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.ReactDom},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getGaugeCollections}));__webpack_require__.d(__webpack_exports__,"b",(function(){return getHeatmapCollections}));var _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);var _kbn_i18n__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__);var _charts_public__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(6);var _charts_public__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_charts_public__WEBPACK_IMPORTED_MODULE_1__);var _vis_type_xy_public__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(1);var _vis_type_xy_public__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_vis_type_xy_public__WEBPACK_IMPORTED_MODULE_2__);var _types__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(2);const getGaugeTypes=()=>[{text:_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__["i18n"].translate("visTypeVislib.gauge.gaugeTypes.arcText",{defaultMessage:"Arc"}),value:_types__WEBPACK_IMPORTED_MODULE_3__["b"].Arc},{text:_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__["i18n"].translate("visTypeVislib.gauge.gaugeTypes.circleText",{defaultMessage:"Circle"}),value:_types__WEBPACK_IMPORTED_MODULE_3__["b"].Circle}];const getAlignments=()=>[{text:_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__["i18n"].translate("visTypeVislib.gauge.alignmentAutomaticTitle",{defaultMessage:"Automatic"}),value:_types__WEBPACK_IMPORTED_MODULE_3__["a"].Automatic},{text:_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__["i18n"].translate("visTypeVislib.gauge.alignmentHorizontalTitle",{defaultMessage:"Horizontal"}),value:_types__WEBPACK_IMPORTED_MODULE_3__["a"].Horizontal},{text:_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__["i18n"].translate("visTypeVislib.gauge.alignmentVerticalTitle",{defaultMessage:"Vertical"}),value:_types__WEBPACK_IMPORTED_MODULE_3__["a"].Vertical}];const getGaugeCollections=()=>({gaugeTypes:getGaugeTypes(),alignments:getAlignments(),colorSchemas:_charts_public__WEBPACK_IMPORTED_MODULE_1__["colorSchemas"]});const getHeatmapCollections=()=>({legendPositions:Object(_vis_type_xy_public__WEBPACK_IMPORTED_MODULE_2__["getPositions"])(),scales:Object(_vis_type_xy_public__WEBPACK_IMPORTED_MODULE_2__["getScaleTypes"])(),colorSchemas:_charts_public__WEBPACK_IMPORTED_MODULE_1__["colorSchemas"]})},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_val_loader_dist_cjs_js_key_visTypeVislib_kbn_ui_shared_deps_public_path_module_creator_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(16);var _node_modules_val_loader_dist_cjs_js_key_visTypeVislib_kbn_ui_shared_deps_public_path_module_creator_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_val_loader_dist_cjs_js_key_visTypeVislib_kbn_ui_shared_deps_public_path_module_creator_js__WEBPACK_IMPORTED_MODULE_0__);__kbnBundles__.define("plugin/visTypeVislib/public",__webpack_require__,17)},function(module,exports,__webpack_require__){__webpack_require__.p=window.__kbnPublicPath__["visTypeVislib"]},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"plugin",(function(){return public_plugin}));__webpack_require__.d(__webpack_exports__,"Alignment",(function(){return types["a"]}));__webpack_require__.d(__webpack_exports__,"GaugeType",(function(){return types["b"]}));__webpack_require__.d(__webpack_exports__,"VislibChartType",(function(){return types["c"]}));var public_=__webpack_require__(1);var external_kbnSharedDeps_KbnI18n_=__webpack_require__(0);var services=__webpack_require__(8);var external_kbnSharedDeps_Lodash_=__webpack_require__(9);function getPoint(table,x,series,row,rowIndex,y,z){const xRow=x.accessor===-1?"_all":row[x.accessor];const yRow=row[y.accessor];const zRow=z&&row[z.accessor];const point={x:xRow,y:yRow,z:zRow,extraMetrics:[],seriesRaw:series&&{table:table,column:series[0].column,row:rowIndex,value:row[series[0].accessor]},xRaw:{table:table,column:x.column,row:rowIndex,value:xRow},yRaw:{table:table,column:y.column,row:rowIndex,value:yRow},zRaw:z&&{table:table,column:z.column,row:rowIndex,value:zRow},tableRaw:table.$parent&&{table:table.$parent.table,column:table.$parent.column,row:table.$parent.row,value:table.$parent.formattedKey,title:table.$parent.name},parent:series?series[0]:null};if(point.y==="NaN"){return}if(series){point.series=series.map(s=>{const fieldFormatter=Object(services["b"])().deserialize(s.format);return fieldFormatter.convert(row[s.accessor])}).join(" - ")}else if(y){point.series=y.title}return point}function addToSiri(series,point,id,yLabel,yFormat,zFormat,zLabel){id=id==null?"":id+"";if(series.has(id)){series.get(id).values.push(point);return}series.set(id,{id:Object(public_["getAggId"])(id),rawId:id,label:yLabel==null?id:yLabel,count:0,values:[point],format:yFormat,zLabel:zLabel,zFormat:zFormat})}function getSeries(table,chart){const aspects=chart.aspects;const xAspect=aspects.x[0];const yAspect=aspects.y[0];const zAspect=aspects.z&&aspects.z[0];const multiY=Array.isArray(aspects.y)&&aspects.y.length>1;const partGetPoint=Object(external_kbnSharedDeps_Lodash_["partial"])(getPoint,table,xAspect,aspects.series);const seriesMap=new Map;table.rows.forEach((row,rowIndex)=>{if(!multiY){const point=partGetPoint(row,rowIndex,yAspect,zAspect);if(point){const id=`${point.series}-${yAspect.accessor}`;point.seriesId=id;addToSiri(seriesMap,point,id,point.series,yAspect.format,zAspect&&zAspect.format,zAspect&&zAspect.title)}return}aspects.y.forEach((function(y){const point=partGetPoint(row,rowIndex,y,zAspect);if(!point){return}let seriesId=y.accessor;let seriesLabel=y.title;if(aspects.series){const prefix=point.series?point.series+": ":"";seriesId=prefix+seriesId;seriesLabel=prefix+seriesLabel}point.seriesId=seriesId;addToSiri(seriesMap,point,seriesId,seriesLabel,y.format,zAspect&&zAspect.format,zAspect&&zAspect.title)}))});return[...seriesMap.values()]}function makeFakeXAspect(){return{accessor:-1,title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.aggResponse.allDocsTitle",{defaultMessage:"All docs"}),params:{defaultValue:"_all"},format:{}}}function getAspects(table,dimensions){const aspects={};Object.keys(dimensions).forEach(name=>{const dimension=dimensions[name];const dimensionList=Array.isArray(dimension)?dimension:[dimension];dimensionList.forEach(d=>{if(!d){return}const column=table.columns[d.accessor];if(!column){return}if(!aspects[name]){aspects[name]=[]}aspects[name].push({accessor:column.id,column:d.accessor,title:column.name,format:d.format,params:d.params})})});if(!aspects.x){aspects.x=[makeFakeXAspect()]}return aspects}function initYAxis(chart){const y=chart.aspects.y;if(Array.isArray(y)){chart.yAxisFormat=y[0].format;chart.yAxisLabel=y.length>1?"":y[0].title}const z=chart.aspects.series;if(z){chart.zAxisFormat=z[0].format;chart.zAxisLabel=""}}var external_kbnSharedDeps_Moment_=__webpack_require__(10);var external_kbnSharedDeps_Moment_default=__webpack_require__.n(external_kbnSharedDeps_Moment_);function initXAxis(chart,table){const{format:format,title:title,params:params,accessor:accessor}=chart.aspects.x[0];chart.xAxisOrderedValues=accessor===-1&&"defaultValue"in params?[params.defaultValue]:Object(external_kbnSharedDeps_Lodash_["uniq"])(table.rows.map(r=>r[accessor]));chart.xAxisFormat=format;chart.xAxisLabel=title;if("interval"in params){if("date"in params){const{intervalESUnit:intervalESUnit,intervalESValue:intervalESValue}=params;chart.ordered={interval:external_kbnSharedDeps_Moment_default.a.duration(intervalESValue,intervalESUnit),intervalESUnit:intervalESUnit,intervalESValue:intervalESValue}}else{chart.ordered={interval:params.interval}}}}function orderedDateAxis(chart){const x=chart.aspects.x[0];const bounds="bounds"in x.params?x.params.bounds:undefined;chart.ordered.date=true;if(bounds){chart.ordered.min=typeof bounds.min==="string"?Date.parse(bounds.min):bounds.min;chart.ordered.max=typeof bounds.max==="string"?Date.parse(bounds.max):bounds.max}else{chart.ordered.endzones=false}}const buildPointSeriesData=(table,dimensions)=>{const chart={aspects:getAspects(table,dimensions)};initXAxis(chart,table);initYAxis(chart);if("date"in chart.aspects.x[0].params){orderedDateAxis(chart)}chart.series=getSeries(table,chart);delete chart.aspects;return chart};const buildHierarchicalData=(table,{metric:metric,buckets:buckets=[]})=>{let slices;const names={};const metricColumn=table.columns[metric.accessor];const metricFieldFormatter=metric.format;if(!buckets.length){slices=[{name:metricColumn.name,size:table.rows[0][metricColumn.id]}];names[metricColumn.name]=metricColumn.name}else{slices=[];table.rows.forEach((row,rowIndex)=>{let parent;let dataLevel=slices;buckets.forEach(bucket=>{const bucketColumn=table.columns[bucket.accessor];const bucketValueColumn=table.columns[bucket.accessor+1];const bucketFormatter=Object(services["b"])().deserialize(bucket.format);const name=bucketFormatter.convert(row[bucketColumn.id]);const size=row[bucketValueColumn.id];names[name]=name;let slice=dataLevel.find(dataLevelSlice=>dataLevelSlice.name===name);if(!slice){slice={name:name,size:size,parent:parent,children:[],rawData:{table:table,row:rowIndex,column:bucket.accessor,value:row[bucketColumn.id]}};dataLevel.push(slice)}parent=slice;dataLevel=slice.children})})}return{hits:table.rows.length,raw:table,names:Object(external_kbnSharedDeps_Lodash_["toArray"])(names),tooltipFormatter:metricFieldFormatter,slices:{children:[...slices]}}};function tableResponseHandler(table,dimensions){const converted={tables:[]};const split=dimensions.splitColumn||dimensions.splitRow;if(split){converted.direction=dimensions.splitRow?"row":"column";const splitColumnIndex=split[0].accessor;const splitColumnFormatter=Object(services["b"])().deserialize(split[0].format);const splitColumn=table.columns[splitColumnIndex];const splitMap={};let splitIndex=0;table.rows.forEach((row,rowIndex)=>{const splitValue=row[splitColumn.id];const formattedValue=splitColumnFormatter.convert(splitValue);if(!splitMap.hasOwnProperty(splitValue)){splitMap[splitValue]=splitIndex++;const tableGroup={$parent:converted,title:`${formattedValue}: ${splitColumn.name}`,name:splitColumn.name,key:splitValue,formattedKey:formattedValue,column:splitColumnIndex,row:rowIndex,table:table,tables:[]};tableGroup.tables.push({$parent:tableGroup,columns:table.columns,rows:[]});converted.tables.push(tableGroup)}const tableIndex=splitMap[splitValue];converted.tables[tableIndex].tables[0].rows.push(row)})}else{converted.tables.push({columns:table.columns,rows:table.rows})}return converted}function convertTableGroup(tableGroup,convertTable){const tables=tableGroup.tables;if(!tables||!tables.length)return;const firstChild=tables[0];if(firstChild.columns){const chart=convertTable(firstChild);if(tableGroup.$parent){chart.label=tableGroup.title}return chart}const out={};let outList;tables.forEach((function(table){if(!outList){const direction=tableGroup.direction==="row"?"rows":"columns";outList=out[direction]=[]}let output;if(output=convertTableGroup(table,convertTable)){outList.push(output)}}));return out}function handlerFunction(convertTable){return function(response,dimensions){const tableGroup=tableResponseHandler(response,dimensions);let converted=convertTableGroup(tableGroup,table=>convertTable(table,dimensions));if(!converted){converted={rows:[]}}converted.hits=response.rows.length;return converted}}const vislibSeriesResponseHandler=handlerFunction(buildPointSeriesData);const vislibSlicesResponseHandler=handlerFunction(buildHierarchicalData);const vislibVisName="vislib_vis";const createVisTypeVislibVisFn=()=>({name:vislibVisName,type:"render",inputTypes:["datatable"],help:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.functions.vislib.help",{defaultMessage:"Vislib visualization"}),args:{type:{types:["string"],default:'""',help:"vislib vis type"},visConfig:{types:["string"],default:'"{}"',help:"vislib vis config"}},fn(context,args,handlers){var _handlers$inspectorAd;const visType=args.type;const visConfig=JSON.parse(args.visConfig);const visData=vislibSeriesResponseHandler(context,visConfig.dimensions);if(handlers!==null&&handlers!==void 0&&(_handlers$inspectorAd=handlers.inspectorAdapters)!==null&&_handlers$inspectorAd!==void 0&&_handlers$inspectorAd.tables){handlers.inspectorAdapters.tables.logDatatable("default",context)}return{type:"render",as:vislibVisName,value:{visData:visData,visConfig:visConfig,visType:visType}}}});var types=__webpack_require__(2);const vislibPieName="vislib_pie_vis";const createPieVisFn=()=>({name:vislibPieName,type:"render",inputTypes:["datatable"],help:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.functions.pie.help",{defaultMessage:"Pie visualization"}),args:{visConfig:{types:["string"],default:'"{}"',help:"vislib pie vis config"}},fn(input,args,handlers){var _handlers$inspectorAd;const visConfig=JSON.parse(args.visConfig);const visData=vislibSlicesResponseHandler(input,visConfig.dimensions);if(handlers!==null&&handlers!==void 0&&(_handlers$inspectorAd=handlers.inspectorAdapters)!==null&&_handlers$inspectorAd!==void 0&&_handlers$inspectorAd.tables){handlers.inspectorAdapters.tables.logDatatable("default",input)}return{type:"render",as:vislibVisName,value:{visData:visData,visConfig:visConfig,visType:types["c"].Pie}}}});var visualizations_public_=__webpack_require__(4);var expressions_public_=__webpack_require__(7);var data_public_=__webpack_require__(3);function getEsaggsFn(vis){return Object(expressions_public_["buildExpressionFunction"])("esaggs",{index:Object(expressions_public_["buildExpression"])([Object(expressions_public_["buildExpressionFunction"])("indexPatternLoad",{id:vis.data.indexPattern.id})]),metricsAtAllLevels:vis.isHierarchical(),partialRows:false,aggs:vis.data.aggs.aggs.map(agg=>Object(expressions_public_["buildExpression"])(agg.toExpressionAst()))})}const toExpressionAst=async(vis,params)=>{var _vis$data$aggs$getRes,_vis$data$aggs;const schemas=Object(visualizations_public_["getVisSchemas"])(vis,params);const dimensions={x:schemas.segment?schemas.segment[0]:null,y:schemas.metric,z:schemas.radius,width:schemas.width,series:schemas.group,splitRow:schemas.split_row,splitColumn:schemas.split_column};const responseAggs=(_vis$data$aggs$getRes=(_vis$data$aggs=vis.data.aggs)===null||_vis$data$aggs===void 0?void 0:_vis$data$aggs.getResponseAggs())!==null&&_vis$data$aggs$getRes!==void 0?_vis$data$aggs$getRes:[];if(dimensions.x){const xAgg=responseAggs[dimensions.x.accessor];if(xAgg.type.name===data_public_["BUCKET_TYPES"].DATE_HISTOGRAM){dimensions.x.params.date=true;const{esUnit:esUnit,esValue:esValue}=xAgg.buckets.getInterval();dimensions.x.params.intervalESUnit=esUnit;dimensions.x.params.intervalESValue=esValue;dimensions.x.params.interval=external_kbnSharedDeps_Moment_default.a.duration(esValue,esUnit).asMilliseconds();dimensions.x.params.format=xAgg.buckets.getScaledDateFormat();dimensions.x.params.bounds=xAgg.buckets.getBounds()}else if(xAgg.type.name===data_public_["BUCKET_TYPES"].HISTOGRAM){const intervalParam=xAgg.type.paramByName("interval");const output={params:{}};await intervalParam.modifyAggConfigOnSearchRequestStart(xAgg,vis.data.searchSource,{abortSignal:params.abortSignal});intervalParam.write(xAgg,output);dimensions.x.params.interval=output.params.interval}}const visConfig={...vis.params};(dimensions.y||[]).forEach(yDimension=>{var _visConfig$gauge;const yAgg=responseAggs.filter(({enabled:enabled})=>enabled)[yDimension.accessor];const seriesParam=(visConfig.seriesParams||[]).find(param=>param.data.id===yAgg.id);if(seriesParam){const usedValueAxis=(visConfig.valueAxes||[]).find(valueAxis=>valueAxis.id===seriesParam.valueAxis);if((usedValueAxis===null||usedValueAxis===void 0?void 0:usedValueAxis.scale.mode)==="percentage"){yDimension.format={id:"percent"}}}if((visConfig===null||visConfig===void 0?void 0:(_visConfig$gauge=visConfig.gauge)===null||_visConfig$gauge===void 0?void 0:_visConfig$gauge.percentageMode)===true){yDimension.format={id:"percent"}}});const visTypeVislib=Object(expressions_public_["buildExpressionFunction"])(vislibVisName,{type:vis.type.name,visConfig:JSON.stringify({...visConfig,dimensions:dimensions})});const ast=Object(expressions_public_["buildExpression"])([getEsaggsFn(vis),visTypeVislib]);return ast.toAst()};const histogramVisTypeDefinition={...public_["xyVisTypes"].histogram(),toExpressionAst:toExpressionAst};const lineVisTypeDefinition={...public_["xyVisTypes"].line(),toExpressionAst:toExpressionAst};const areaVisTypeDefinition={...public_["xyVisTypes"].area(),toExpressionAst:toExpressionAst};var external_kbnSharedDeps_ElasticCharts_=__webpack_require__(11);var charts_public_=__webpack_require__(6);var collections=__webpack_require__(14);var external_kbnSharedDeps_React_=__webpack_require__(5);var external_kbnSharedDeps_React_default=__webpack_require__.n(external_kbnSharedDeps_React_);const GaugeOptionsLazy=Object(external_kbnSharedDeps_React_["lazy"])(()=>__webpack_require__.e(3).then(__webpack_require__.bind(null,172)));const PieOptionsLazy=Object(external_kbnSharedDeps_React_["lazy"])(()=>__webpack_require__.e(5).then(__webpack_require__.bind(null,169)));const HeatmapOptionsLazy=Object(external_kbnSharedDeps_React_["lazy"])(()=>__webpack_require__.e(4).then(__webpack_require__.bind(null,173)));const GaugeOptions=props=>external_kbnSharedDeps_React_default.a.createElement(GaugeOptionsLazy,props);const PieOptions=props=>external_kbnSharedDeps_React_default.a.createElement(PieOptionsLazy,props);const HeatmapOptions=props=>external_kbnSharedDeps_React_default.a.createElement(HeatmapOptionsLazy,props);const heatmapVisTypeDefinition={name:"heatmap",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.heatmap.heatmapTitle",{defaultMessage:"Heat map"}),icon:"heatmap",description:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.heatmap.heatmapDescription",{defaultMessage:"Shade data in cells in a matrix."}),toExpressionAst:toExpressionAst,getSupportedTriggers:()=>[visualizations_public_["VIS_EVENT_TO_TRIGGER"].filter],visConfig:{defaults:{type:types["c"].Heatmap,addTooltip:true,addLegend:true,enableHover:false,legendPosition:external_kbnSharedDeps_ElasticCharts_["Position"].Right,times:[],colorsNumber:4,colorSchema:charts_public_["ColorSchemas"].Greens,setColorRange:false,colorsRange:[],invertColors:false,percentageMode:false,valueAxes:[{show:false,id:"ValueAxis-1",type:public_["AxisType"].Value,scale:{type:public_["ScaleType"].Linear,defaultYExtents:false},labels:{show:false,rotate:0,overwriteColor:false,color:"black"}}]}},editorConfig:{optionsTemplate:HeatmapOptions,schemas:[{group:data_public_["AggGroupNames"].Metrics,name:"metric",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.heatmap.metricTitle",{defaultMessage:"Value"}),min:1,max:1,aggFilter:["count","avg","median","sum","min","max","cardinality","std_dev","top_hits"],defaults:[{schema:"metric",type:"count"}]},{group:data_public_["AggGroupNames"].Buckets,name:"segment",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.heatmap.segmentTitle",{defaultMessage:"X-axis"}),min:0,max:1,aggFilter:["!geohash_grid","!geotile_grid","!filter"]},{group:data_public_["AggGroupNames"].Buckets,name:"group",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.heatmap.groupTitle",{defaultMessage:"Y-axis"}),min:0,max:1,aggFilter:["!geohash_grid","!geotile_grid","!filter"]},{group:data_public_["AggGroupNames"].Buckets,name:"split",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.heatmap.splitTitle",{defaultMessage:"Split chart"}),min:0,max:1,aggFilter:["!geohash_grid","!geotile_grid","!filter"]}]},requiresSearch:true};const horizontalBarVisTypeDefinition={...public_["xyVisTypes"].horizontalBar(),toExpressionAst:toExpressionAst};const gaugeVisTypeDefinition={name:"gauge",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.gauge.gaugeTitle",{defaultMessage:"Gauge"}),icon:"visGauge",description:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.gauge.gaugeDescription",{defaultMessage:"Show the status of a metric."}),getSupportedTriggers:()=>[visualizations_public_["VIS_EVENT_TO_TRIGGER"].filter],toExpressionAst:toExpressionAst,visConfig:{defaults:{type:types["c"].Gauge,addTooltip:true,addLegend:true,isDisplayWarning:false,gauge:{alignment:types["a"].Automatic,extendRange:true,percentageMode:false,gaugeType:types["b"].Arc,gaugeStyle:"Full",backStyle:"Full",orientation:"vertical",colorSchema:charts_public_["ColorSchemas"].GreenToRed,gaugeColorMode:charts_public_["ColorMode"].Labels,colorsRange:[{from:0,to:50},{from:50,to:75},{from:75,to:100}],invertColors:false,labels:{show:true,color:"black"},scale:{show:true,labels:false,color:"rgba(105,112,125,0.2)"},type:"meter",style:{bgWidth:.9,width:.9,mask:false,bgMask:false,maskBars:50,bgFill:"rgba(105,112,125,0.2)",bgColor:true,subText:"",fontSize:60}}}},editorConfig:{optionsTemplate:GaugeOptions,schemas:[{group:data_public_["AggGroupNames"].Metrics,name:"metric",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.gauge.metricTitle",{defaultMessage:"Metric"}),min:1,aggFilter:["!std_dev","!geo_centroid","!percentiles","!percentile_ranks","!derivative","!serial_diff","!moving_avg","!cumulative_sum","!geo_bounds"],defaults:[{schema:"metric",type:"count"}]},{group:data_public_["AggGroupNames"].Buckets,name:"group",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.gauge.groupTitle",{defaultMessage:"Split group"}),min:0,max:1,aggFilter:["!geohash_grid","!geotile_grid","!filter"]}]},requiresSearch:true};const goalVisTypeDefinition={name:"goal",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.goal.goalTitle",{defaultMessage:"Goal"}),icon:"visGoal",description:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.goal.goalDescription",{defaultMessage:"Track how a metric progresses to a goal."}),toExpressionAst:toExpressionAst,visConfig:{defaults:{addTooltip:true,addLegend:false,isDisplayWarning:false,type:"gauge",gauge:{verticalSplit:false,autoExtend:false,percentageMode:true,gaugeType:types["b"].Arc,gaugeStyle:"Full",backStyle:"Full",orientation:"vertical",useRanges:false,colorSchema:charts_public_["ColorSchemas"].GreenToRed,gaugeColorMode:charts_public_["ColorMode"].None,colorsRange:[{from:0,to:1e4}],invertColors:false,labels:{show:true,color:"black"},scale:{show:false,labels:false,color:"rgba(105,112,125,0.2)",width:2},type:"meter",style:{bgFill:"rgba(105,112,125,0.2)",bgColor:false,labelColor:false,subText:"",fontSize:60}}}},editorConfig:{optionsTemplate:GaugeOptions,schemas:[{group:data_public_["AggGroupNames"].Metrics,name:"metric",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.goal.metricTitle",{defaultMessage:"Metric"}),min:1,aggFilter:["!std_dev","!geo_centroid","!percentiles","!percentile_ranks","!derivative","!serial_diff","!moving_avg","!cumulative_sum","!geo_bounds"],defaults:[{schema:"metric",type:"count"}]},{group:data_public_["AggGroupNames"].Buckets,name:"group",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.goal.groupTitle",{defaultMessage:"Split group"}),min:0,max:1,aggFilter:["!geohash_grid","!geotile_grid","!filter"]}]},requiresSearch:true};const to_ast_pie_toExpressionAst=async(vis,params)=>{const schemas=Object(visualizations_public_["getVisSchemas"])(vis,params);const visConfig={...vis.params,dimensions:{metric:schemas.metric[0],buckets:schemas.segment,splitRow:schemas.split_row,splitColumn:schemas.split_column}};const configStr=JSON.stringify(visConfig).replace(/\\/g,`\\\\`).replace(/'/g,`\\'`);const visTypePie=Object(expressions_public_["buildExpressionFunction"])(vislibPieName,{visConfig:configStr});const ast=Object(expressions_public_["buildExpression"])([getEsaggsFn(vis),visTypePie]);return ast.toAst()};const pieVisTypeDefinition={name:"pie",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.pie.pieTitle",{defaultMessage:"Pie"}),icon:"visPie",description:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.pie.pieDescription",{defaultMessage:"Compare data in proportion to a whole."}),getSupportedTriggers:()=>[visualizations_public_["VIS_EVENT_TO_TRIGGER"].filter],toExpressionAst:to_ast_pie_toExpressionAst,visConfig:{defaults:{type:"pie",addTooltip:true,addLegend:true,legendPosition:external_kbnSharedDeps_ElasticCharts_["Position"].Right,isDonut:true,labels:{show:false,values:true,last_level:true,truncate:100}}},editorConfig:{optionsTemplate:PieOptions,schemas:[{group:data_public_["AggGroupNames"].Metrics,name:"metric",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.pie.metricTitle",{defaultMessage:"Slice size"}),min:1,max:1,aggFilter:["sum","count","cardinality","top_hits"],defaults:[{schema:"metric",type:"count"}]},{group:data_public_["AggGroupNames"].Buckets,name:"segment",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.pie.segmentTitle",{defaultMessage:"Split slices"}),min:0,max:Infinity,aggFilter:["!geohash_grid","!geotile_grid","!filter"]},{group:data_public_["AggGroupNames"].Buckets,name:"split",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeVislib.pie.splitTitle",{defaultMessage:"Split chart"}),mustBeFirst:true,min:0,max:1,aggFilter:["!geohash_grid","!geotile_grid","!filter"]}]},hierarchicalData:true,requiresSearch:true};const visLibVisTypeDefinitions=[histogramVisTypeDefinition,lineVisTypeDefinition,areaVisTypeDefinition,heatmapVisTypeDefinition,horizontalBarVisTypeDefinition,gaugeVisTypeDefinition,goalVisTypeDefinition];const convertedTypeDefinitions=[heatmapVisTypeDefinition,gaugeVisTypeDefinition,goalVisTypeDefinition];var external_kbnSharedDeps_ReactDom_=__webpack_require__(13);function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}const VislibWrapper=Object(external_kbnSharedDeps_React_["lazy"])(()=>__webpack_require__.e(2).then(__webpack_require__.bind(null,171)));function shouldShowNoResultsMessage(visData,visType){if(["goal","gauge"].includes(visType)){return false}const rows=visData===null||visData===void 0?void 0:visData.rows;const isZeroHits=(visData===null||visData===void 0?void 0:visData.hits)===0||rows&&!rows.length;return Boolean(isZeroHits)}const getVislibVisRenderer=(core,charts)=>({name:vislibVisName,displayName:"Vislib visualization",reuseDomNode:true,render:async(domNode,config,handlers)=>{const showNoResult=shouldShowNoResultsMessage(config.visData,config.visType);handlers.onDestroy(()=>Object(external_kbnSharedDeps_ReactDom_["unmountComponentAtNode"])(domNode));Object(external_kbnSharedDeps_ReactDom_["render"])(external_kbnSharedDeps_React_default.a.createElement(visualizations_public_["VisualizationContainer"],{handlers:handlers,showNoResult:showNoResult},external_kbnSharedDeps_React_default.a.createElement(VislibWrapper,_extends({},config,{core:core,charts:charts,handlers:handlers}))),domNode)}});class plugin_VisTypeVislibPlugin{constructor(initializerContext){this.initializerContext=initializerContext}setup(core,{expressions:expressions,visualizations:visualizations,charts:charts}){if(!core.uiSettings.get(public_["LEGACY_CHARTS_LIBRARY"],false)){convertedTypeDefinitions.forEach(visualizations.createBaseVisualization);visualizations.createBaseVisualization(pieVisTypeDefinition);expressions.registerRenderer(getVislibVisRenderer(core,charts));[createVisTypeVislibVisFn(),createPieVisFn()].forEach(expressions.registerFunction)}else{visLibVisTypeDefinitions.forEach(visualizations.createBaseVisualization);visualizations.createBaseVisualization(pieVisTypeDefinition);expressions.registerRenderer(getVislibVisRenderer(core,charts));[createVisTypeVislibVisFn(),createPieVisFn()].forEach(expressions.registerFunction)}}start(core,{data:data}){Object(services["d"])(data.fieldFormats);Object(services["c"])(data.actions)}}function public_plugin(initializerContext){return new plugin_VisTypeVislibPlugin(initializerContext)}},function(module,exports){module.exports=__kbnSharedDeps__.Jquery},function(module,exports){module.exports=__kbnSharedDeps__.ElasticEui},function(module,exports){module.exports=__kbnSharedDeps__.KbnI18nReact},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/visDefaultEditor/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.ElasticNumeral},function(module,exports){module.exports=__kbnSharedDeps__.ReactDomServer},function(module,exports){module.exports=__kbnSharedDeps__.ElasticEuiLibServices},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("entry/core/public/utils");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.Theme.euiLightVars}]);