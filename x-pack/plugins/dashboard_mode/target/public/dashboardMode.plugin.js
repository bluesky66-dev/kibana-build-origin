/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=3)})([function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/dashboard/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.Lodash},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("entry/core/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_val_loader_dist_cjs_js_key_dashboardMode_kbn_ui_shared_deps_public_path_module_creator_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4);var _node_modules_val_loader_dist_cjs_js_key_dashboardMode_kbn_ui_shared_deps_public_path_module_creator_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_val_loader_dist_cjs_js_key_dashboardMode_kbn_ui_shared_deps_public_path_module_creator_js__WEBPACK_IMPORTED_MODULE_0__);__kbnBundles__.define("plugin/dashboardMode/public",__webpack_require__,5)},function(module,exports,__webpack_require__){__webpack_require__.p=window.__kbnPublicPath__["dashboardMode"]},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"plugin",(function(){return plugin_plugin}));var external_kbnSharedDeps_Lodash_=__webpack_require__(1);var public_=__webpack_require__(0);var core_public_=__webpack_require__(2);function defaultUrl(defaultAppId){const isDashboardId=defaultAppId.startsWith(dashboardAppIdPrefix());return isDashboardId?`/${defaultAppId}`:public_["DashboardConstants"].LANDING_PAGE_PATH}function dashboardAppIdPrefix(){return Object(external_kbnSharedDeps_Lodash_["trimStart"])(Object(public_["createDashboardEditUrl"])(""),"/")}function migratePath(currentHash,kibanaLegacy,urlForwarding){if(currentHash===""||currentHash==="#"||currentHash==="#/"){return`#${defaultUrl(kibanaLegacy.config.defaultAppId||"")}`}if(!currentHash.startsWith("#/dashboard")){return currentHash}const forwards=urlForwarding.getForwards();if(currentHash.startsWith("#/dashboards")){const{rewritePath:migrateListingPath}=forwards.find(({legacyAppId:legacyAppId})=>legacyAppId==="dashboards");return migrateListingPath(currentHash)}const{rewritePath:migrateDetailPath}=forwards.find(({legacyAppId:legacyAppId})=>legacyAppId==="dashboard");return migrateDetailPath(currentHash)}const plugin_plugin=()=>({setup(core){core.application.register({id:"dashboard_mode",title:"Dashboard mode",navLinkStatus:core_public_["AppNavLinkStatus"].hidden,mount:async()=>{const[coreStart,{kibanaLegacy:kibanaLegacy,urlForwarding:urlForwarding}]=await core.getStartServices();kibanaLegacy.dashboardConfig.turnHideWriteControlsOn();coreStart.chrome.navLinks.showOnly("dashboards");setTimeout(()=>{coreStart.application.navigateToApp("dashboards",{path:migratePath(window.location.hash,kibanaLegacy,urlForwarding)})},0);return()=>{}}})},start(){}})}]);