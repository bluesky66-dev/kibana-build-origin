/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window["ml_bundle_jsonpfunction"]=window["ml_bundle_jsonpfunction"]||[]).push([[0],{284:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return jobsApiProvider}));var _common_constants_app__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4);const jobsApiProvider=httpService=>({jobsSummary(jobIds){const body=JSON.stringify({jobIds:jobIds});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/jobs_summary`,method:"POST",body:body})},jobsWithTimerange(dateFormatTz){const body=JSON.stringify({dateFormatTz:dateFormatTz});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/jobs_with_time_range`,method:"POST",body:body})},jobForCloning(jobId){const body=JSON.stringify({jobId:jobId});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/job_for_cloning`,method:"POST",body:body})},jobs(jobIds){const body=JSON.stringify({jobIds:jobIds});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/jobs`,method:"POST",body:body})},groups(){return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/groups`,method:"GET"})},updateGroups(updatedJobs){const body=JSON.stringify({jobs:updatedJobs});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/update_groups`,method:"POST",body:body})},forceStartDatafeeds(datafeedIds,start,end){const body=JSON.stringify({datafeedIds:datafeedIds,start:start,end:end});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/force_start_datafeeds`,method:"POST",body:body})},stopDatafeeds(datafeedIds){const body=JSON.stringify({datafeedIds:datafeedIds});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/stop_datafeeds`,method:"POST",body:body})},deleteJobs(jobIds){const body=JSON.stringify({jobIds:jobIds});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/delete_jobs`,method:"POST",body:body})},closeJobs(jobIds){const body=JSON.stringify({jobIds:jobIds});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/close_jobs`,method:"POST",body:body})},forceStopAndCloseJob(jobId){const body=JSON.stringify({jobId:jobId});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/force_stop_and_close_job`,method:"POST",body:body})},jobAuditMessages(jobId,from){const jobIdString=jobId!==undefined?`/${jobId}`:"";const query=from!==undefined?{from:from}:{};return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/job_audit_messages/messages${jobIdString}`,method:"GET",query:query})},deletingJobTasks(){return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/deleting_jobs_tasks`,method:"GET"})},jobsExist(jobIds,allSpaces=false){const body=JSON.stringify({jobIds:jobIds,allSpaces:allSpaces});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/jobs_exist`,method:"POST",body:body})},jobsExist$(jobIds,allSpaces=false){const body=JSON.stringify({jobIds:jobIds,allSpaces:allSpaces});return httpService.http$({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/jobs_exist`,method:"POST",body:body})},newJobCaps(indexPatternTitle,isRollup=false){const query=isRollup===true?{rollup:true}:{};return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/new_job_caps/${indexPatternTitle}`,method:"GET",query:query})},newJobLineChart(indexPatternTitle,timeField,start,end,intervalMs,query,aggFieldNamePairs,splitFieldName,splitFieldValue,runtimeMappings){const body=JSON.stringify({indexPatternTitle:indexPatternTitle,timeField:timeField,start:start,end:end,intervalMs:intervalMs,query:query,aggFieldNamePairs:aggFieldNamePairs,splitFieldName:splitFieldName,splitFieldValue:splitFieldValue,runtimeMappings:runtimeMappings});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/new_job_line_chart`,method:"POST",body:body})},newJobPopulationsChart(indexPatternTitle,timeField,start,end,intervalMs,query,aggFieldNamePairs,splitFieldName,runtimeMappings){const body=JSON.stringify({indexPatternTitle:indexPatternTitle,timeField:timeField,start:start,end:end,intervalMs:intervalMs,query:query,aggFieldNamePairs:aggFieldNamePairs,splitFieldName:splitFieldName,runtimeMappings:runtimeMappings});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/new_job_population_chart`,method:"POST",body:body})},getAllJobAndGroupIds(){return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/all_jobs_and_group_ids`,method:"GET"})},getLookBackProgress(jobId,start,end){const body=JSON.stringify({jobId:jobId,start:start,end:end});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/look_back_progress`,method:"POST",body:body})},categorizationFieldExamples(indexPatternTitle,query,size,field,timeField,start,end,analyzer,runtimeMappings){const body=JSON.stringify({indexPatternTitle:indexPatternTitle,query:query,size:size,field:field,timeField:timeField,start:start,end:end,analyzer:analyzer,runtimeMappings:runtimeMappings});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/categorization_field_examples`,method:"POST",body:body})},topCategories(jobId,count){const body=JSON.stringify({jobId:jobId,count:count});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/top_categories`,method:"POST",body:body})},revertModelSnapshot(jobId,snapshotId,replay,end,calendarEvents){const body=JSON.stringify({jobId:jobId,snapshotId:snapshotId,replay:replay,end:end,calendarEvents:calendarEvents});return httpService.http({path:`${_common_constants_app__WEBPACK_IMPORTED_MODULE_0__["b"]}/jobs/revert_model_snapshot`,method:"POST",body:body})}})},59:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"basePath",(function(){return basePath}));__webpack_require__.d(__webpack_exports__,"ml",(function(){return ml}));__webpack_require__.d(__webpack_exports__,"mlApiServicesProvider",(function(){return mlApiServicesProvider}));var http_service=__webpack_require__(99);const annotations={getAnnotations$(obj){const body=JSON.stringify(obj);return Object(http_service["c"])({path:`${basePath()}/annotations`,method:"POST",body:body})},getAnnotations(obj){const body=JSON.stringify(obj);return Object(http_service["b"])({path:`${basePath()}/annotations`,method:"POST",body:body})},indexAnnotation(obj){const body=JSON.stringify(obj);return Object(http_service["b"])({path:`${basePath()}/annotations/index`,method:"PUT",body:body})},deleteAnnotation(id){return Object(http_service["b"])({path:`${basePath()}/annotations/delete/${id}`,method:"DELETE"})}};const dataFrameAnalytics={getDataFrameAnalytics(analyticsId,excludeGenerated){const analyticsIdString=analyticsId!==undefined?`/${analyticsId}`:"";return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics${analyticsIdString}`,method:"GET",...excludeGenerated?{query:{excludeGenerated:excludeGenerated}}:{}})},getDataFrameAnalyticsStats(analyticsId){if(analyticsId!==undefined){return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics/${analyticsId}/_stats`,method:"GET"})}return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics/_stats`,method:"GET"})},createDataFrameAnalytics(analyticsId,analyticsConfig){const body=JSON.stringify(analyticsConfig);return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics/${analyticsId}`,method:"PUT",body:body})},updateDataFrameAnalytics(analyticsId,updateConfig){const body=JSON.stringify(updateConfig);return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics/${analyticsId}/_update`,method:"POST",body:body})},getDataFrameAnalyticsMap(id,treatAsRoot,type){const idString=id!==undefined?`/${id}`:"";return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics/map${idString}`,method:"GET",query:{treatAsRoot:treatAsRoot,type:type}})},jobsExists(analyticsIds,allSpaces=false){const body=JSON.stringify({analyticsIds:analyticsIds,allSpaces:allSpaces});return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics/jobs_exist`,method:"POST",body:body})},evaluateDataFrameAnalytics(evaluateConfig){const body=JSON.stringify(evaluateConfig);return Object(http_service["b"])({path:`${basePath()}/data_frame/_evaluate`,method:"POST",body:body})},explainDataFrameAnalytics(jobConfig){const body=JSON.stringify(jobConfig);return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics/_explain`,method:"POST",body:body})},deleteDataFrameAnalytics(analyticsId){return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics/${analyticsId}`,method:"DELETE"})},deleteDataFrameAnalyticsAndDestIndex(analyticsId,deleteDestIndex,deleteDestIndexPattern){return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics/${analyticsId}`,query:{deleteDestIndex:deleteDestIndex,deleteDestIndexPattern:deleteDestIndexPattern},method:"DELETE"})},startDataFrameAnalytics(analyticsId){return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics/${analyticsId}/_start`,method:"POST"})},stopDataFrameAnalytics(analyticsId,force=false){return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics/${analyticsId}/_stop`,method:"POST",query:{force:force}})},getAnalyticsAuditMessages(analyticsId){return Object(http_service["b"])({path:`${basePath()}/data_frame/analytics/${analyticsId}/messages`,method:"GET"})}};const filters={filters(obj){const filterId=obj&&obj.filterId?`/${obj.filterId}`:"";return Object(http_service["b"])({path:`${basePath()}/filters${filterId}`,method:"GET"})},filtersStats(){return Object(http_service["b"])({path:`${basePath()}/filters/_stats`,method:"GET"})},addFilter(filterId,description,items){const body=JSON.stringify({filterId:filterId,description:description,items:items});return Object(http_service["b"])({path:`${basePath()}/filters`,method:"PUT",body:body})},updateFilter(filterId,description,addItems,removeItems){const body=JSON.stringify({...description!==undefined?{description:description}:{},...addItems!==undefined?{addItems:addItems}:{},...removeItems!==undefined?{removeItems:removeItems}:{}});return Object(http_service["b"])({path:`${basePath()}/filters/${filterId}`,method:"PUT",body:body})},deleteFilter(filterId){return Object(http_service["b"])({path:`${basePath()}/filters/${filterId}`,method:"DELETE"})}};const resultsApiProvider=httpService=>({getAnomaliesTableData(jobIds,criteriaFields,influencers,aggregationInterval,threshold,earliestMs,latestMs,dateFormatTz,maxRecords,maxExamples,influencersFilterQuery,functionDescription){const body=JSON.stringify({jobIds:jobIds,criteriaFields:criteriaFields,influencers:influencers,aggregationInterval:aggregationInterval,threshold:threshold,earliestMs:earliestMs,latestMs:latestMs,dateFormatTz:dateFormatTz,maxRecords:maxRecords,maxExamples:maxExamples,influencersFilterQuery:influencersFilterQuery,functionDescription:functionDescription});return httpService.http$({path:`${basePath()}/results/anomalies_table_data`,method:"POST",body:body})},getMaxAnomalyScore(jobIds,earliestMs,latestMs){const body=JSON.stringify({jobIds:jobIds,earliestMs:earliestMs,latestMs:latestMs});return httpService.http({path:`${basePath()}/results/max_anomaly_score`,method:"POST",body:body})},getCategoryDefinition(jobId,categoryId){const body=JSON.stringify({jobId:jobId,categoryId:categoryId});return httpService.http({path:`${basePath()}/results/category_definition`,method:"POST",body:body})},getCategoryExamples(jobId,categoryIds,maxExamples){const body=JSON.stringify({jobId:jobId,categoryIds:categoryIds,maxExamples:maxExamples});return httpService.http({path:`${basePath()}/results/category_examples`,method:"POST",body:body})},fetchPartitionFieldsValues(jobId,searchTerm,criteriaFields,earliestMs,latestMs,fieldsConfig){const body=JSON.stringify({jobId:jobId,searchTerm:searchTerm,criteriaFields:criteriaFields,earliestMs:earliestMs,latestMs:latestMs,fieldsConfig:fieldsConfig});return httpService.http$({path:`${basePath()}/results/partition_fields_values`,method:"POST",body:body})},anomalySearch(query,jobIds){const body=JSON.stringify({query:query,jobIds:jobIds});return httpService.http({path:`${basePath()}/results/anomaly_search`,method:"POST",body:body})},anomalySearch$(query,jobIds){const body=JSON.stringify({query:query,jobIds:jobIds});return httpService.http$({path:`${basePath()}/results/anomaly_search`,method:"POST",body:body})},getCategoryStoppedPartitions(jobIds,fieldToBucket){const body=JSON.stringify({jobIds:jobIds,fieldToBucket:fieldToBucket});return httpService.http({path:`${basePath()}/results/category_stopped_partitions`,method:"POST",body:body})}});var jobs=__webpack_require__(284);const fileDatavisualizer={analyzeFile(file,params={}){const body=JSON.stringify(file);return Object(http_service["b"])({path:`${basePath()}/file_data_visualizer/analyze_file`,method:"POST",body:body,query:params})},import({id:id,index:index,data:data,settings:settings,mappings:mappings,ingestPipeline:ingestPipeline}){const query=id!==undefined?{id:id}:{};const body=JSON.stringify({index:index,data:data,settings:settings,mappings:mappings,ingestPipeline:ingestPipeline});return Object(http_service["b"])({path:`/api/file_upload/import`,method:"POST",query:query,body:body})}};const savedObjectsApiProvider=httpService=>({jobsSpaces(){return httpService.http({path:`${basePath()}/saved_objects/jobs_spaces`,method:"GET"})},assignJobToSpace(jobType,jobIds,spaces){const body=JSON.stringify({jobType:jobType,jobIds:jobIds,spaces:spaces});return httpService.http({path:`${basePath()}/saved_objects/assign_job_to_space`,method:"POST",body:body})},removeJobFromSpace(jobType,jobIds,spaces){const body=JSON.stringify({jobType:jobType,jobIds:jobIds,spaces:spaces});return httpService.http({path:`${basePath()}/saved_objects/remove_job_from_space`,method:"POST",body:body})},removeJobFromCurrentSpace(jobType,jobIds){const body=JSON.stringify({jobType:jobType,jobIds:jobIds});return httpService.http({path:`${basePath()}/saved_objects/remove_job_from_current_space`,method:"POST",body:body})},syncSavedObjects(simulate=false){return httpService.http({path:`${basePath()}/saved_objects/sync`,method:"GET",query:{simulate:simulate}})},initSavedObjects(simulate=false){return httpService.http({path:`${basePath()}/saved_objects/initialize`,method:"GET",query:{simulate:simulate}})},canDeleteJob(jobType,jobIds){const body=JSON.stringify({jobIds:jobIds});return httpService.http({path:`${basePath()}/saved_objects/can_delete_job/${jobType}`,method:"POST",body:body})}});var dependency_cache=__webpack_require__(18);function basePath(){return"/api/ml"}const proxyHttpStart=new Proxy({},{get(obj,prop){try{return Object(dependency_cache["e"])()[prop]}catch(e){console.error(e)}}});const ml=mlApiServicesProvider(new http_service["a"](proxyHttpStart));function mlApiServicesProvider(httpService){return{getJobs(obj){const jobId=obj&&obj.jobId?`/${obj.jobId}`:"";return httpService.http({path:`${basePath()}/anomaly_detectors${jobId}`})},getJobStats(obj){const jobId=obj&&obj.jobId?`/${obj.jobId}`:"";return httpService.http({path:`${basePath()}/anomaly_detectors${jobId}/_stats`})},addJob({jobId:jobId,job:job}){const body=JSON.stringify(job);return httpService.http({path:`${basePath()}/anomaly_detectors/${jobId}`,method:"PUT",body:body})},openJob({jobId:jobId}){return httpService.http({path:`${basePath()}/anomaly_detectors/${jobId}/_open`,method:"POST"})},closeJob({jobId:jobId}){return httpService.http({path:`${basePath()}/anomaly_detectors/${jobId}/_close`,method:"POST"})},forceCloseJob({jobId:jobId}){return httpService.http({path:`${basePath()}/anomaly_detectors/${jobId}/_close?force=true`,method:"POST"})},deleteJob({jobId:jobId}){return httpService.http({path:`${basePath()}/anomaly_detectors/${jobId}`,method:"DELETE"})},forceDeleteJob({jobId:jobId}){return httpService.http({path:`${basePath()}/anomaly_detectors/${jobId}?force=true`,method:"DELETE"})},updateJob({jobId:jobId,job:job}){const body=JSON.stringify(job);return httpService.http({path:`${basePath()}/anomaly_detectors/${jobId}/_update`,method:"POST",body:body})},estimateBucketSpan(obj){const body=JSON.stringify(obj);return httpService.http({path:`${basePath()}/validate/estimate_bucket_span`,method:"POST",body:body})},validateJob(payload){const body=JSON.stringify(payload);return httpService.http({path:`${basePath()}/validate/job`,method:"POST",body:body})},validateCardinality$(job){const body=JSON.stringify(job);return httpService.http$({path:`${basePath()}/validate/cardinality`,method:"POST",body:body})},getDatafeeds(obj){const datafeedId=obj&&obj.datafeedId?`/${obj.datafeedId}`:"";return httpService.http({path:`${basePath()}/datafeeds${datafeedId}`})},getDatafeedStats(obj){const datafeedId=obj&&obj.datafeedId?`/${obj.datafeedId}`:"";return httpService.http({path:`${basePath()}/datafeeds${datafeedId}/_stats`})},addDatafeed({datafeedId:datafeedId,datafeedConfig:datafeedConfig}){const body=JSON.stringify(datafeedConfig);return httpService.http({path:`${basePath()}/datafeeds/${datafeedId}`,method:"PUT",body:body})},updateDatafeed({datafeedId:datafeedId,datafeedConfig:datafeedConfig}){const body=JSON.stringify(datafeedConfig);return httpService.http({path:`${basePath()}/datafeeds/${datafeedId}/_update`,method:"POST",body:body})},deleteDatafeed({datafeedId:datafeedId}){return httpService.http({path:`${basePath()}/datafeeds/${datafeedId}`,method:"DELETE"})},forceDeleteDatafeed({datafeedId:datafeedId}){return httpService.http({path:`${basePath()}/datafeeds/${datafeedId}?force=true`,method:"DELETE"})},startDatafeed({datafeedId:datafeedId,start:start,end:end}){const body=JSON.stringify({...start!==undefined?{start:start}:{},...end!==undefined?{end:end}:{}});return httpService.http({path:`${basePath()}/datafeeds/${datafeedId}/_start`,method:"POST",body:body})},stopDatafeed({datafeedId:datafeedId}){return httpService.http({path:`${basePath()}/datafeeds/${datafeedId}/_stop`,method:"POST"})},forceStopDatafeed({datafeedId:datafeedId}){return httpService.http({path:`${basePath()}/datafeeds/${datafeedId}/_stop?force=true`,method:"POST"})},datafeedPreview({datafeedId:datafeedId}){return httpService.http({path:`${basePath()}/datafeeds/${datafeedId}/_preview`,method:"GET"})},validateDetector({detector:detector}){const body=JSON.stringify(detector);return httpService.http({path:`${basePath()}/anomaly_detectors/_validate/detector`,method:"POST",body:body})},forecast({jobId:jobId,duration:duration}){const body=JSON.stringify({...duration!==undefined?{duration:duration}:{}});return httpService.http({path:`${basePath()}/anomaly_detectors/${jobId}/_forecast`,method:"POST",body:body})},overallBuckets({jobId:jobId,topN:topN,bucketSpan:bucketSpan,start:start,end:end}){const body=JSON.stringify({topN:topN,bucketSpan:bucketSpan,start:start,end:end});return httpService.http({path:`${basePath()}/anomaly_detectors/${jobId}/results/overall_buckets`,method:"POST",body:body})},hasPrivileges(obj){const body=JSON.stringify(obj);return httpService.http({path:`${basePath()}/_has_privileges`,method:"POST",body:body})},checkMlCapabilities(){return httpService.http({path:`${basePath()}/ml_capabilities`,method:"GET"})},checkManageMLCapabilities(){return httpService.http({path:`${basePath()}/ml_capabilities`,method:"GET"})},getNotificationSettings(){return httpService.http({path:`${basePath()}/notification_settings`,method:"GET"})},checkIndexExists({index:index}){const body=JSON.stringify({index:index});return httpService.http({path:`${basePath()}/index_exists`,method:"POST",body:body})},getFieldCaps({index:index,fields:fields}){const body=JSON.stringify({...index!==undefined?{index:index}:{},...fields!==undefined?{fields:fields}:{}});return httpService.http({path:`${basePath()}/indices/field_caps`,method:"POST",body:body})},recognizeIndex({indexPatternTitle:indexPatternTitle}){return httpService.http({path:`${basePath()}/modules/recognize/${indexPatternTitle}`,method:"GET"})},listDataRecognizerModules(){return httpService.http({path:`${basePath()}/modules/get_module`,method:"GET"})},getDataRecognizerModule({moduleId:moduleId}){return httpService.http({path:`${basePath()}/modules/get_module/${moduleId}`,method:"GET"})},dataRecognizerModuleJobsExist({moduleId:moduleId}){return httpService.http({path:`${basePath()}/modules/jobs_exist/${moduleId}`,method:"GET"})},setupDataRecognizerConfig({moduleId:moduleId,prefix:prefix,groups:groups,indexPatternName:indexPatternName,query:query,useDedicatedIndex:useDedicatedIndex,startDatafeed:startDatafeed,start:start,end:end,jobOverrides:jobOverrides,estimateModelMemory:estimateModelMemory}){const body=JSON.stringify({prefix:prefix,groups:groups,indexPatternName:indexPatternName,query:query,useDedicatedIndex:useDedicatedIndex,startDatafeed:startDatafeed,start:start,end:end,jobOverrides:jobOverrides,estimateModelMemory:estimateModelMemory});return httpService.http({path:`${basePath()}/modules/setup/${moduleId}`,method:"POST",body:body})},getVisualizerFieldStats({indexPatternTitle:indexPatternTitle,query:query,timeFieldName:timeFieldName,earliest:earliest,latest:latest,samplerShardSize:samplerShardSize,interval:interval,fields:fields,maxExamples:maxExamples}){const body=JSON.stringify({query:query,timeFieldName:timeFieldName,earliest:earliest,latest:latest,samplerShardSize:samplerShardSize,interval:interval,fields:fields,maxExamples:maxExamples});return httpService.http({path:`${basePath()}/data_visualizer/get_field_stats/${indexPatternTitle}`,method:"POST",body:body})},getVisualizerFieldHistograms({indexPatternTitle:indexPatternTitle,query:query,fields:fields,samplerShardSize:samplerShardSize}){const body=JSON.stringify({query:query,fields:fields,samplerShardSize:samplerShardSize});return httpService.http({path:`${basePath()}/data_visualizer/get_field_histograms/${indexPatternTitle}`,method:"POST",body:body})},getVisualizerOverallStats({indexPatternTitle:indexPatternTitle,query:query,timeFieldName:timeFieldName,earliest:earliest,latest:latest,samplerShardSize:samplerShardSize,aggregatableFields:aggregatableFields,nonAggregatableFields:nonAggregatableFields}){const body=JSON.stringify({query:query,timeFieldName:timeFieldName,earliest:earliest,latest:latest,samplerShardSize:samplerShardSize,aggregatableFields:aggregatableFields,nonAggregatableFields:nonAggregatableFields});return httpService.http({path:`${basePath()}/data_visualizer/get_overall_stats/${indexPatternTitle}`,method:"POST",body:body})},calendars(obj){const{calendarId:calendarId,calendarIds:calendarIds}=obj||{};let calendarIdsPathComponent="";if(calendarId){calendarIdsPathComponent=`/${calendarId}`}else if(calendarIds){calendarIdsPathComponent=`/${calendarIds.join(",")}`}return httpService.http({path:`${basePath()}/calendars${calendarIdsPathComponent}`,method:"GET"})},addCalendar(obj){const body=JSON.stringify(obj);return httpService.http({path:`${basePath()}/calendars`,method:"PUT",body:body})},updateCalendar(obj){const calendarId=obj&&obj.calendarId?`/${obj.calendarId}`:"";const body=JSON.stringify(obj);return httpService.http({path:`${basePath()}/calendars${calendarId}`,method:"PUT",body:body})},deleteCalendar({calendarId:calendarId}){return httpService.http({path:`${basePath()}/calendars/${calendarId}`,method:"DELETE"})},mlNodeCount(){return httpService.http({path:`${basePath()}/ml_node_count`,method:"GET"})},mlInfo(){return httpService.http({path:`${basePath()}/info`,method:"GET"})},calculateModelMemoryLimit$({datafeedConfig:datafeedConfig,analysisConfig:analysisConfig,indexPattern:indexPattern,query:query,timeFieldName:timeFieldName,earliestMs:earliestMs,latestMs:latestMs}){const body=JSON.stringify({datafeedConfig:datafeedConfig,analysisConfig:analysisConfig,indexPattern:indexPattern,query:query,timeFieldName:timeFieldName,earliestMs:earliestMs,latestMs:latestMs});return httpService.http$({path:`${basePath()}/validate/calculate_model_memory_limit`,method:"POST",body:body})},getCardinalityOfFields({index:index,fieldNames:fieldNames,query:query,timeFieldName:timeFieldName,earliestMs:earliestMs,latestMs:latestMs}){const body=JSON.stringify({index:index,fieldNames:fieldNames,query:query,timeFieldName:timeFieldName,earliestMs:earliestMs,latestMs:latestMs});return httpService.http({path:`${basePath()}/fields_service/field_cardinality`,method:"POST",body:body})},getTimeFieldRange({index:index,timeFieldName:timeFieldName,query:query}){const body=JSON.stringify({index:index,timeFieldName:timeFieldName,query:query});return httpService.http({path:`${basePath()}/fields_service/time_field_range`,method:"POST",body:body})},esSearch(obj){const body=JSON.stringify(obj);return httpService.http({path:`${basePath()}/es_search`,method:"POST",body:body})},esSearch$(obj){const body=JSON.stringify(obj);return httpService.http$({path:`${basePath()}/es_search`,method:"POST",body:body})},getIndices(){const tempBasePath="/api";return httpService.http({path:`${tempBasePath}/index_management/indices`,method:"GET"})},getModelSnapshots(jobId,snapshotId){return httpService.http({path:`${basePath()}/anomaly_detectors/${jobId}/model_snapshots${snapshotId!==undefined?`/${snapshotId}`:""}`})},updateModelSnapshot(jobId,snapshotId,body){return httpService.http({path:`${basePath()}/anomaly_detectors/${jobId}/model_snapshots/${snapshotId}/_update`,method:"POST",body:JSON.stringify(body)})},deleteModelSnapshot(jobId,snapshotId){return httpService.http({path:`${basePath()}/anomaly_detectors/${jobId}/model_snapshots/${snapshotId}`,method:"DELETE"})},annotations:annotations,dataFrameAnalytics:dataFrameAnalytics,filters:filters,results:resultsApiProvider(httpService),jobs:Object(jobs["a"])(httpService),fileDatavisualizer:fileDatavisualizer,savedObjects:savedObjectsApiProvider(httpService)}}}}]);