(window["visTypeTimeseries_bundle_jsonpfunction"]=window["visTypeTimeseries_bundle_jsonpfunction"]||[]).push([[10],{128:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return visWithSplits}));var external_kbnSharedDeps_React_=__webpack_require__(1);var external_kbnSharedDeps_React_default=__webpack_require__.n(external_kbnSharedDeps_React_);var external_kbnSharedDeps_KbnI18n_=__webpack_require__(3);function getDisplayName(Component){return Component.displayName||Component.name||"Component"}var label_date_formatter=__webpack_require__(54);var external_kbnSharedDeps_Lodash_=__webpack_require__(31);function visWithSplits(WrappedComponent){function SplitVisComponent(props){const{model:model,visData:visData}=props;if(!model||!visData||!visData[model.id])return external_kbnSharedDeps_React_default.a.createElement(WrappedComponent,props);if(visData[model.id].series.every(s=>s.id.split(":").length===1)){return external_kbnSharedDeps_React_default.a.createElement(WrappedComponent,props)}const splitsVisData=visData[model.id].series.reduce((acc,series)=>{const[seriesId,splitId]=series.id.split(":");const seriesModel=model.series.find(s=>s.id===seriesId);if(!seriesModel)return acc;const label=series.splitByLabel;if(!acc[splitId]){acc[splitId]={series:[],label:series.label.toString(),labelFormatted:series.labelFormatted}}const labelHasKeyPlaceholder=/{{\s*key\s*}}/.test(seriesModel.label);acc[splitId].series.push({...series,id:seriesId,color:series.color||seriesModel.color,label:seriesModel.label&&!labelHasKeyPlaceholder?seriesModel.label:label});return acc},{});const nonSplitSeries=Object(external_kbnSharedDeps_Lodash_["first"])(visData[model.id].series.filter(series=>{const seriesModel=model.series.find(s=>s.id===series.id);if(!seriesModel)return false;return["everything","filter"].includes(seriesModel.split_mode)}));const indexOfNonSplit=nonSplitSeries?Object(external_kbnSharedDeps_Lodash_["findIndex"])(model.series,s=>s.id===nonSplitSeries.id):null;const rows=Object.keys(splitsVisData).map(key=>{const splitData=splitsVisData[key];const{series:series,label:label,labelFormatted:labelFormatted}=splitData;let additionalLabel=label;if(labelFormatted){additionalLabel=Object(label_date_formatter["a"])(labelFormatted)}const newSeries=indexOfNonSplit!=null&&indexOfNonSplit>0?[...series,nonSplitSeries]:[nonSplitSeries,...series];const newVisData={[model.id]:{id:model.id,series:newSeries||series}};return external_kbnSharedDeps_React_default.a.createElement("div",{key:key,className:"tvbSplitVis__split"},external_kbnSharedDeps_React_default.a.createElement(WrappedComponent,{model:model,visData:newVisData,onBrush:props.onBrush,additionalLabel:additionalLabel||external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeTimeseries.emptyTextValue",{defaultMessage:"(empty)"}),backgroundColor:props.backgroundColor,getConfig:props.getConfig}))});return external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbSplitVis"},rows)}SplitVisComponent.displayName=`SplitVisComponent(${getDisplayName(WrappedComponent)})`;return SplitVisComponent}},351:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",(function(){return vis_metric}));var external_kbnSharedDeps_React_=__webpack_require__(1);var external_kbnSharedDeps_React_default=__webpack_require__.n(external_kbnSharedDeps_React_);var vis_with_splits=__webpack_require__(128);var tick_formatter=__webpack_require__(46);var external_kbnSharedDeps_Lodash_=__webpack_require__(31);var external_kbnSharedDeps_Lodash_default=__webpack_require__.n(external_kbnSharedDeps_Lodash_);var lib=__webpack_require__(88);var lib_default=__webpack_require__.n(lib);var get_last_value=__webpack_require__(48);var calculate_coordinates=__webpack_require__(92);class metric_Metric extends external_kbnSharedDeps_React_["Component"]{constructor(props){super(props);this.state={scale:1,left:0,top:0,translateX:1,translateY:1};this.handleResize=this.handleResize.bind(this)}UNSAFE_componentWillMount(){const check=()=>{this.timeout=setTimeout(()=>{const newState=Object(calculate_coordinates["a"])(this.inner,this.resize,this.state);if(newState&&this.state&&!external_kbnSharedDeps_Lodash_default.a.isEqual(newState,this.state)){this.handleResize()}check()},500)};check()}componentWillUnmount(){clearTimeout(this.timeout)}componentDidMount(){this.handleResize()}handleResize(){const newState=Object(calculate_coordinates["a"])(this.inner,this.resize,this.state);this.setState(newState)}render(){const{metric:metric,secondary:secondary}=this.props;const{scale:scale,translateX:translateX,translateY:translateY}=this.state;const primaryFormatter=metric&&(metric.tickFormatter||metric.formatter)||(n=>n);const primaryValue=primaryFormatter(Object(get_last_value["a"])(metric&&metric.data));const styles=lib_default()({default:{container:{},inner:{top:this.state.top||0,left:this.state.left||0,transform:`matrix(${scale}, 0, 0, ${scale}, ${translateX}, ${translateY})`},primary_value:{},secondary_value:{}},reversed:{primary_value:{},secondary_value:{}}},this.props);if(this.props.backgroundColor)styles.container.backgroundColor=this.props.backgroundColor;if(metric&&metric.color)styles.primary_value.color=metric.color;let primaryLabel;if(metric&&metric.label){primaryLabel=external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVisMetric__label--primary"},metric.label)}let secondarySnippet;if(secondary){const secondaryFormatter=secondary.formatter||(n=>n);const secondaryValue=secondaryFormatter(Object(get_last_value["a"])(secondary.data));if(secondary.color)styles.secondary_value.color=secondary.color;let secondaryLabel;if(secondary.label){secondaryLabel=external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVisMetric__label--secondary"},secondary.label)}secondarySnippet=external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVisMetric__secondary"},secondaryLabel,external_kbnSharedDeps_React_default.a.createElement("div",{style:styles.secondary_value,className:"tvbVisMetric__value--secondary"},secondaryValue))}let additionalLabel;if(this.props.additionalLabel){additionalLabel=external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVisMetric__label--additional"},this.props.additionalLabel)}let className="tvbVisMetric";if(!styles.container.backgroundColor){className+=" tvbVisMetric--noBackground"}if(this.props.reversed){className+=" tvbVisMetric--reversed"}return external_kbnSharedDeps_React_default.a.createElement("div",{className:className,style:styles.container},external_kbnSharedDeps_React_default.a.createElement("div",{ref:el=>this.resize=el,className:"tvbVisMetric__resize"},external_kbnSharedDeps_React_default.a.createElement("div",{ref:el=>this.inner=el,className:"tvbVisMetric__inner",style:styles.inner},external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVisMetric__primary"},primaryLabel,external_kbnSharedDeps_React_default.a.createElement("div",{style:styles.primary_value,"data-test-subj":"tsvbMetricValue",className:"tvbVisMetric__value--primary"},primaryValue)),secondarySnippet,additionalLabel)))}}var set_is_reversed=__webpack_require__(75);function getColors(props){const{model:model,visData:visData}=props;const series=Object(external_kbnSharedDeps_Lodash_["get"])(visData,`${model.id}.series`,[]).filter(s=>!Object(external_kbnSharedDeps_Lodash_["isUndefined"])(s));let color;let background;if(model.background_color_rules){model.background_color_rules.forEach(rule=>{if(rule.operator&&rule.value!=null){const value=series[0]&&Object(get_last_value["a"])(series[0].data)||0;if(external_kbnSharedDeps_Lodash_default.a[rule.operator](value,rule.value)){background=rule.background_color;color=rule.color}}})}return{color:color,background:background}}function MetricVisualization(props){const{backgroundColor:backgroundColor,model:model,visData:visData}=props;const colors=getColors(props);const series=Object(external_kbnSharedDeps_Lodash_["get"])(visData,`${model.id}.series`,[]).filter(row=>row).map((row,i)=>{const seriesDef=model.series.find(s=>Object(external_kbnSharedDeps_Lodash_["includes"])(row.id,s.id));const newProps={};if(seriesDef){newProps.formatter=Object(tick_formatter["a"])(seriesDef.formatter,seriesDef.value_template,props.getConfig)}if(i===0&&colors.color)newProps.color=colors.color;return Object(external_kbnSharedDeps_Lodash_["assign"])({},Object(external_kbnSharedDeps_Lodash_["pick"])(row,["label","data"]),newProps)});const panelBackgroundColor=colors.background||backgroundColor;const style={backgroundColor:panelBackgroundColor};const params={metric:series[0],additionalLabel:props.additionalLabel,reversed:Object(set_is_reversed["b"])(panelBackgroundColor)};if(series[1]){params.secondary=series[1]}return external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVis",style:style},external_kbnSharedDeps_React_default.a.createElement(metric_Metric,params))}const vis_metric=Object(vis_with_splits["a"])(MetricVisualization)},92:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return calculateCoordinates}));var external_kbnSharedDeps_ReactDom_=__webpack_require__(4);function calcDimensions(el,scale){const newWidth=Math.floor(el.clientWidth*scale);const newHeight=Math.floor(el.clientHeight*scale);return[newWidth,newHeight]}function calculateCoordinates(innerRef,resizeRef,state){const inner=Object(external_kbnSharedDeps_ReactDom_["findDOMNode"])(innerRef);const resize=Object(external_kbnSharedDeps_ReactDom_["findDOMNode"])(resizeRef);let scale=state.scale;if(resize.clientWidth-resize.clientHeight<0){scale=resize.clientWidth/inner.clientWidth}else{scale=resize.clientHeight/inner.clientHeight}let[newWidth,newHeight]=calcDimensions(inner,scale);if(newWidth>resize.clientWidth){scale=resize.clientWidth/inner.clientWidth}if(newHeight>resize.clientHeight){scale=resize.clientHeight/inner.clientHeight}[newWidth,newHeight]=calcDimensions(inner,scale);const translateX=(newWidth-inner.clientWidth)/2;const translateY=(newHeight-inner.clientHeight)/2;const top=Math.floor((resize.clientHeight-newHeight)/2);const left=Math.floor((resize.clientWidth-newWidth)/2);return{scale:scale,top:top,left:left,translateY:translateY,translateX:translateX}}}}]);