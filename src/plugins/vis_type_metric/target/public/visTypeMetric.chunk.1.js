(window["visTypeMetric_bundle_jsonpfunction"]=window["visTypeMetric_bundle_jsonpfunction"]||[]).push([[1],[,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";var isOldIE=function isOldIE(){var memo;return function memorize(){if(typeof memo==="undefined"){memo=Boolean(window&&document&&document.all&&!window.atob)}return memo}}();var getTarget=function getTarget(){var memo={};return function memorize(target){if(typeof memo[target]==="undefined"){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement){try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}}memo[target]=styleTarget}return memo[target]}}();var stylesInDom=[];function getIndexByIdentifier(identifier){var result=-1;for(var i=0;i<stylesInDom.length;i++){if(stylesInDom[i].identifier===identifier){result=i;break}}return result}function modulesToDom(list,options){var idCountMap={};var identifiers=[];for(var i=0;i<list.length;i++){var item=list[i];var id=options.base?item[0]+options.base:item[0];var count=idCountMap[id]||0;var identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var index=getIndexByIdentifier(identifier);var obj={css:item[1],media:item[2],sourceMap:item[3]};if(index!==-1){stylesInDom[index].references++;stylesInDom[index].updater(obj)}else{stylesInDom.push({identifier:identifier,updater:addStyle(obj,options),references:1})}identifiers.push(identifier)}return identifiers}function insertStyleElement(options){var style=document.createElement("style");var attributes=options.attributes||{};if(typeof attributes.nonce==="undefined"){var nonce=true?__webpack_require__.nc:undefined;if(nonce){attributes.nonce=nonce}}Object.keys(attributes).forEach((function(key){style.setAttribute(key,attributes[key])}));if(typeof options.insert==="function"){options.insert(style)}else{var target=getTarget(options.insert||"head");if(!target){throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.")}target.appendChild(style)}return style}function removeStyleElement(style){if(style.parentNode===null){return false}style.parentNode.removeChild(style)}var replaceText=function replaceText(){var textStore=[];return function replace(index,replacement){textStore[index]=replacement;return textStore.filter(Boolean).join("\n")}}();function applyToSingletonTag(style,index,remove,obj){var css=remove?"":obj.media?"@media ".concat(obj.media," {").concat(obj.css,"}"):obj.css;if(style.styleSheet){style.styleSheet.cssText=replaceText(index,css)}else{var cssNode=document.createTextNode(css);var childNodes=style.childNodes;if(childNodes[index]){style.removeChild(childNodes[index])}if(childNodes.length){style.insertBefore(cssNode,childNodes[index])}else{style.appendChild(cssNode)}}}function applyToTag(style,options,obj){var css=obj.css;var media=obj.media;var sourceMap=obj.sourceMap;if(media){style.setAttribute("media",media)}else{style.removeAttribute("media")}if(sourceMap&&btoa){css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")}if(style.styleSheet){style.styleSheet.cssText=css}else{while(style.firstChild){style.removeChild(style.firstChild)}style.appendChild(document.createTextNode(css))}}var singleton=null;var singletonCounter=0;function addStyle(obj,options){var style;var update;var remove;if(options.singleton){var styleIndex=singletonCounter++;style=singleton||(singleton=insertStyleElement(options));update=applyToSingletonTag.bind(null,style,styleIndex,false);remove=applyToSingletonTag.bind(null,style,styleIndex,true)}else{style=insertStyleElement(options);update=applyToTag.bind(null,style,options);remove=function remove(){removeStyleElement(style)}}update(obj);return function updateStyle(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap){return}update(obj=newObj)}else{remove()}}}module.exports=function(list,options){options=options||{};if(!options.singleton&&typeof options.singleton!=="boolean"){options.singleton=isOldIE()}list=list||[];var lastIdentifiers=modulesToDom(list,options);return function update(newList){newList=newList||[];if(Object.prototype.toString.call(newList)!=="[object Array]"){return}for(var i=0;i<lastIdentifiers.length;i++){var identifier=lastIdentifiers[i];var index=getIndexByIdentifier(identifier);stylesInDom[index].references--}var newLastIdentifiers=modulesToDom(newList,options);for(var _i=0;_i<lastIdentifiers.length;_i++){var _identifier=lastIdentifiers[_i];var _index=getIndexByIdentifier(_identifier);if(stylesInDom[_index].references===0){stylesInDom[_index].updater();stylesInDom.splice(_index,1)}}lastIdentifiers=newLastIdentifiers}}},function(module,exports,__webpack_require__){"use strict";module.exports=function(useSourceMap){var list=[];list.toString=function toString(){return this.map((function(item){var content=cssWithMappingToString(item,useSourceMap);if(item[2]){return"@media ".concat(item[2]," {").concat(content,"}")}return content})).join("")};list.i=function(modules,mediaQuery,dedupe){if(typeof modules==="string"){modules=[[null,modules,""]]}var alreadyImportedModules={};if(dedupe){for(var i=0;i<this.length;i++){var id=this[i][0];if(id!=null){alreadyImportedModules[id]=true}}}for(var _i=0;_i<modules.length;_i++){var item=[].concat(modules[_i]);if(dedupe&&alreadyImportedModules[item[0]]){continue}if(mediaQuery){if(!item[2]){item[2]=mediaQuery}else{item[2]="".concat(mediaQuery," and ").concat(item[2])}}list.push(item)}};return list};function cssWithMappingToString(item,useSourceMap){var content=item[1]||"";var cssMapping=item[3];if(!cssMapping){return content}if(useSourceMap&&typeof btoa==="function"){var sourceMapping=toComment(cssMapping);var sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}function toComment(sourceMap){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));var data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);return"/*# ".concat(data," */")}},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/(function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){var classes=[];for(var i=0;i<arguments.length;i++){var arg=arguments[i];if(!arg)continue;var argType=typeof arg;if(argType==="string"||argType==="number"){classes.push(arg)}else if(Array.isArray(arg)&&arg.length){var inner=classNames.apply(null,arg);if(inner){classes.push(inner)}}else if(argType==="object"){for(var key in arg){if(hasOwn.call(arg,key)&&arg[key]){classes.push(key)}}}}return classes.join(" ")}if(true&&module.exports){classNames.default=classNames;module.exports=classNames}else if(true){!(__WEBPACK_AMD_DEFINE_ARRAY__=[],__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),__WEBPACK_AMD_DEFINE_RESULT__!==undefined&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))}else{}})()},function(module,exports,__webpack_require__){switch(window.__kbnThemeTag__){case"v7dark":return __webpack_require__(20);case"v7light":return __webpack_require__(22);case"v8dark":return __webpack_require__(24);case"v8light":return __webpack_require__(26)}},function(module,exports,__webpack_require__){var api=__webpack_require__(16);var content=__webpack_require__(21);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},function(module,exports,__webpack_require__){var ___CSS_LOADER_API_IMPORT___=__webpack_require__(17);exports=___CSS_LOADER_API_IMPORT___(false);exports.push([module.i,".mtrVis {\n  scrollbar-width: thin;\n  width: 100%;\n  display: flex;\n  flex: 1 0 0;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap; }\n  .mtrVis::-webkit-scrollbar {\n    width: 16px;\n    height: 16px; }\n  .mtrVis::-webkit-scrollbar-thumb {\n    background-color: rgba(152, 162, 179, 0.5);\n    border: 6px solid transparent;\n    background-clip: content-box; }\n  .mtrVis::-webkit-scrollbar-corner, .mtrVis::-webkit-scrollbar-track {\n    background-color: transparent; }\n\n.mtrVis__value {\n  max-width: 100%;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n  white-space: nowrap !important;\n  word-wrap: normal !important;\n  font-weight: 700; }\n\n.mtrVis__container {\n  text-align: center;\n  padding: 16px; }\n\n.mtrVis__container--light {\n  color: #1D1E24; }\n\n.mtrVis__container-isFilterable {\n  cursor: pointer;\n  transition: transform 250ms cubic-bezier(0.694, 0.0482, 0.335, 1);\n  transform: translate(0, 0); }\n  .mtrVis__container-isFilterable:hover, .mtrVis__container-isFilterable:focus {\n    box-shadow: none;\n    transform: translate(0, -2px); }\n",""]);module.exports=exports},function(module,exports,__webpack_require__){var api=__webpack_require__(16);var content=__webpack_require__(23);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},function(module,exports,__webpack_require__){var ___CSS_LOADER_API_IMPORT___=__webpack_require__(17);exports=___CSS_LOADER_API_IMPORT___(false);exports.push([module.i,".mtrVis {\n  scrollbar-width: thin;\n  width: 100%;\n  display: flex;\n  flex: 1 0 0;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap; }\n  .mtrVis::-webkit-scrollbar {\n    width: 16px;\n    height: 16px; }\n  .mtrVis::-webkit-scrollbar-thumb {\n    background-color: rgba(105, 112, 125, 0.5);\n    border: 6px solid transparent;\n    background-clip: content-box; }\n  .mtrVis::-webkit-scrollbar-corner, .mtrVis::-webkit-scrollbar-track {\n    background-color: transparent; }\n\n.mtrVis__value {\n  max-width: 100%;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n  white-space: nowrap !important;\n  word-wrap: normal !important;\n  font-weight: 700; }\n\n.mtrVis__container {\n  text-align: center;\n  padding: 16px; }\n\n.mtrVis__container--light {\n  color: #FFF; }\n\n.mtrVis__container-isFilterable {\n  cursor: pointer;\n  transition: transform 250ms cubic-bezier(0.694, 0.0482, 0.335, 1);\n  transform: translate(0, 0); }\n  .mtrVis__container-isFilterable:hover, .mtrVis__container-isFilterable:focus {\n    box-shadow: none;\n    transform: translate(0, -2px); }\n",""]);module.exports=exports},function(module,exports,__webpack_require__){var api=__webpack_require__(16);var content=__webpack_require__(25);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},function(module,exports,__webpack_require__){var ___CSS_LOADER_API_IMPORT___=__webpack_require__(17);exports=___CSS_LOADER_API_IMPORT___(false);exports.push([module.i,".mtrVis {\n  scrollbar-width: thin;\n  width: 100%;\n  display: flex;\n  flex: 1 0 0;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap; }\n  .mtrVis::-webkit-scrollbar {\n    width: 16px;\n    height: 16px; }\n  .mtrVis::-webkit-scrollbar-thumb {\n    background-color: rgba(152, 162, 179, 0.5);\n    border: 6px solid transparent;\n    background-clip: content-box; }\n  .mtrVis::-webkit-scrollbar-corner, .mtrVis::-webkit-scrollbar-track {\n    background-color: transparent; }\n\n.mtrVis__value {\n  max-width: 100%;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n  white-space: nowrap !important;\n  word-wrap: normal !important;\n  font-weight: 700; }\n\n.mtrVis__container {\n  text-align: center;\n  padding: 16px; }\n\n.mtrVis__container--light {\n  color: #1D1E24; }\n\n.mtrVis__container-isFilterable {\n  cursor: pointer;\n  transition: transform 250ms cubic-bezier(0.694, 0.0482, 0.335, 1);\n  transform: translate(0, 0); }\n  .mtrVis__container-isFilterable:hover, .mtrVis__container-isFilterable:focus {\n    box-shadow: none;\n    transform: translate(0, -2px); }\n",""]);module.exports=exports},function(module,exports,__webpack_require__){var api=__webpack_require__(16);var content=__webpack_require__(27);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},function(module,exports,__webpack_require__){var ___CSS_LOADER_API_IMPORT___=__webpack_require__(17);exports=___CSS_LOADER_API_IMPORT___(false);exports.push([module.i,".mtrVis {\n  scrollbar-width: thin;\n  width: 100%;\n  display: flex;\n  flex: 1 0 0;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap; }\n  .mtrVis::-webkit-scrollbar {\n    width: 16px;\n    height: 16px; }\n  .mtrVis::-webkit-scrollbar-thumb {\n    background-color: rgba(105, 112, 125, 0.5);\n    border: 6px solid transparent;\n    background-clip: content-box; }\n  .mtrVis::-webkit-scrollbar-corner, .mtrVis::-webkit-scrollbar-track {\n    background-color: transparent; }\n\n.mtrVis__value {\n  max-width: 100%;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n  white-space: nowrap !important;\n  word-wrap: normal !important;\n  font-weight: 700; }\n\n.mtrVis__container {\n  text-align: center;\n  padding: 16px; }\n\n.mtrVis__container--light {\n  color: #FFF; }\n\n.mtrVis__container-isFilterable {\n  cursor: pointer;\n  transition: transform 250ms cubic-bezier(0.694, 0.0482, 0.335, 1);\n  transform: translate(0, 0); }\n  .mtrVis__container-isFilterable:hover, .mtrVis__container-isFilterable:focus {\n    box-shadow: none;\n    transform: translate(0, -2px); }\n",""]);module.exports=exports},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",(function(){return metric_vis_component_MetricVisComponent}));var external_kbnSharedDeps_Lodash_=__webpack_require__(10);var external_kbnSharedDeps_React_=__webpack_require__(0);var external_kbnSharedDeps_React_default=__webpack_require__.n(external_kbnSharedDeps_React_);var external_kbnSharedDeps_ElasticEui_=__webpack_require__(3);var classnames=__webpack_require__(18);var classnames_default=__webpack_require__.n(classnames);function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class metric_vis_value_MetricVisValue extends external_kbnSharedDeps_React_["Component"]{constructor(...args){super(...args);_defineProperty(this,"onClick",()=>{if(this.props.onFilter){this.props.onFilter(this.props.metric)}});_defineProperty(this,"onKeyPress",event=>{if(event.key===external_kbnSharedDeps_ElasticEui_["keys"].ENTER){this.onClick()}})}render(){const{fontSize:fontSize,metric:metric,onFilter:onFilter,showLabel:showLabel}=this.props;const hasFilter=Boolean(onFilter);const metricValueStyle={fontSize:`${fontSize}pt`,color:metric.color};const containerClassName=classnames_default()("mtrVis__container",{"mtrVis__container--light":metric.lightText,"mtrVis__container-isfilterable":hasFilter});const metricComponent=external_kbnSharedDeps_React_default.a.createElement("div",{className:containerClassName,style:{backgroundColor:metric.bgColor},onClick:hasFilter?this.onClick:undefined,onKeyPress:hasFilter?this.onKeyPress:undefined,tabIndex:hasFilter?0:undefined,role:hasFilter?"button":undefined},external_kbnSharedDeps_React_default.a.createElement("div",{className:"mtrVis__value",style:metricValueStyle,dangerouslySetInnerHTML:{__html:metric.value}}),showLabel&&external_kbnSharedDeps_React_default.a.createElement("div",null,metric.label));if(hasFilter){return external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_["EuiKeyboardAccessible"],null,metricComponent)}return metricComponent}}var public_=__webpack_require__(2);var services=__webpack_require__(11);var metric_vis=__webpack_require__(19);function metric_vis_component_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class metric_vis_component_MetricVisComponent extends external_kbnSharedDeps_React_["Component"]{constructor(...args){super(...args);metric_vis_component_defineProperty(this,"getFormattedValue",(fieldFormatter,value,format="text")=>{if(Object(external_kbnSharedDeps_Lodash_["isNaN"])(value))return"-";return fieldFormatter.convert(value,format)});metric_vis_component_defineProperty(this,"filterBucket",metric=>{const dimensions=this.props.visParams.dimensions;if(!dimensions.bucket){return}const table=this.props.visData;this.props.fireEvent({name:"filterBucket",data:{data:[{table:table,column:dimensions.bucket.accessor,row:metric.rowIndex}]}})});metric_vis_component_defineProperty(this,"renderMetric",(metric,index)=>external_kbnSharedDeps_React_default.a.createElement(metric_vis_value_MetricVisValue,{key:index,metric:metric,fontSize:this.props.visParams.metric.style.fontSize,onFilter:this.props.visParams.dimensions.bucket?this.filterBucket:undefined,showLabel:this.props.visParams.metric.labels.show}))}getLabels(){const config=this.props.visParams.metric;const isPercentageMode=config.percentageMode;const colorsRange=config.colorsRange;const max=Object(external_kbnSharedDeps_Lodash_["last"])(colorsRange).to;const labels=[];colorsRange.forEach(range=>{const from=isPercentageMode?Math.round(100*range.from/max):range.from;const to=isPercentageMode?Math.round(100*range.to/max):range.to;labels.push(`${from} - ${to}`)});return labels}getColors(){const config=this.props.visParams.metric;const invertColors=config.invertColors;const colorSchema=config.colorSchema;const colorsRange=config.colorsRange;const labels=this.getLabels();const colors={};for(let i=0;i<labels.length;i+=1){const divider=Math.max(colorsRange.length-1,1);const val=invertColors?1-i/divider:i/divider;colors[labels[i]]=Object(public_["getHeatmapColors"])(val,colorSchema)}return colors}getBucket(val){const config=this.props.visParams.metric;let bucket=Object(external_kbnSharedDeps_Lodash_["findIndex"])(config.colorsRange,range=>range.from<=val&&range.to>val);if(bucket===-1){if(val<config.colorsRange[0].from)bucket=0;else bucket=config.colorsRange.length-1}return bucket}getColor(val,labels,colors){const bucket=this.getBucket(val);const label=labels[bucket];return colors[label]}needsLightText(bgColor){const colors=/rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/.exec(bgColor);if(!colors){return false}const[red,green,blue]=colors.slice(1).map(c=>parseInt(c,10));return Object(external_kbnSharedDeps_ElasticEui_["isColorDark"])(red,green,blue)}processTableGroups(table){const config=this.props.visParams.metric;const dimensions=this.props.visParams.dimensions;const isPercentageMode=config.percentageMode;const min=config.colorsRange[0].from;const max=Object(external_kbnSharedDeps_Lodash_["last"])(config.colorsRange).to;const colors=this.getColors();const labels=this.getLabels();const metrics=[];let bucketColumnId;let bucketFormatter;if(dimensions.bucket){bucketColumnId=table.columns[dimensions.bucket.accessor].id;bucketFormatter=Object(services["a"])().deserialize(dimensions.bucket.format)}dimensions.metrics.forEach(metric=>{const columnIndex=metric.accessor;const column=table===null||table===void 0?void 0:table.columns[columnIndex];const formatter=Object(services["a"])().deserialize(metric.format);table.rows.forEach((row,rowIndex)=>{let title=column.name;let value=row[column.id];const color=this.getColor(value,labels,colors);if(isPercentageMode){value=(value-min)/(max-min)}value=this.getFormattedValue(formatter,value,"html");if(bucketColumnId){const bucketValue=this.getFormattedValue(bucketFormatter,row[bucketColumnId]);title=`${bucketValue} - ${title}`}const shouldColor=config.colorsRange.length>1;metrics.push({label:title,value:value,color:shouldColor&&config.style.labelColor?color:undefined,bgColor:shouldColor&&config.style.bgColor?color:undefined,lightText:shouldColor&&config.style.bgColor&&this.needsLightText(color),rowIndex:rowIndex})})});return metrics}componentDidMount(){this.props.renderComplete()}componentDidUpdate(){this.props.renderComplete()}render(){let metricsHtml;if(this.props.visData){const metrics=this.processTableGroups(this.props.visData);metricsHtml=metrics.map(this.renderMetric)}return metricsHtml}}}]]);