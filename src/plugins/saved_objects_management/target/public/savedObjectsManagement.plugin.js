(function(modules){function webpackJsonpCallback(data){var chunkIds=data[0];var moreModules=data[1];var moduleId,chunkId,i=0,resolves=[];for(;i<chunkIds.length;i++){chunkId=chunkIds[i];if(Object.prototype.hasOwnProperty.call(installedChunks,chunkId)&&installedChunks[chunkId]){resolves.push(installedChunks[chunkId][0])}installedChunks[chunkId]=0}for(moduleId in moreModules){if(Object.prototype.hasOwnProperty.call(moreModules,moduleId)){modules[moduleId]=moreModules[moduleId]}}if(parentJsonpFunction)parentJsonpFunction(data);while(resolves.length){resolves.shift()()}}var installedModules={};var installedChunks={0:0};function jsonpScriptSrc(chunkId){return __webpack_require__.p+"savedObjectsManagement.chunk."+chunkId+".js"}function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.e=function requireEnsure(chunkId){var promises=[];var installedChunkData=installedChunks[chunkId];if(installedChunkData!==0){if(installedChunkData){promises.push(installedChunkData[2])}else{var promise=new Promise((function(resolve,reject){installedChunkData=installedChunks[chunkId]=[resolve,reject]}));promises.push(installedChunkData[2]=promise);var script=document.createElement("script");var onScriptComplete;script.charset="utf-8";script.timeout=120;if(__webpack_require__.nc){script.setAttribute("nonce",__webpack_require__.nc)}script.src=jsonpScriptSrc(chunkId);var error=new Error;onScriptComplete=function(event){script.onerror=script.onload=null;clearTimeout(timeout);var chunk=installedChunks[chunkId];if(chunk!==0){if(chunk){var errorType=event&&(event.type==="load"?"missing":event.type);var realSrc=event&&event.target&&event.target.src;error.message="Loading chunk "+chunkId+" failed.\n("+errorType+": "+realSrc+")";error.name="ChunkLoadError";error.type=errorType;error.request=realSrc;chunk[1](error)}installedChunks[chunkId]=undefined}};var timeout=setTimeout((function(){onScriptComplete({type:"timeout",target:script})}),12e4);script.onerror=script.onload=onScriptComplete;document.head.appendChild(script)}}return Promise.all(promises)};__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";__webpack_require__.oe=function(err){console.error(err);throw err};var jsonpArray=window["savedObjectsManagement_bundle_jsonpfunction"]=window["savedObjectsManagement_bundle_jsonpfunction"]||[];var oldJsonpFunction=jsonpArray.push.bind(jsonpArray);jsonpArray.push=webpackJsonpCallback;jsonpArray=jsonpArray.slice();for(var i=0;i<jsonpArray.length;i++)webpackJsonpCallback(jsonpArray[i]);var parentJsonpFunction=oldJsonpFunction;return __webpack_require__(__webpack_require__.s=9)})([function(module,exports){module.exports=__kbnSharedDeps__.Lodash},function(module,exports){module.exports=__kbnSharedDeps__.KbnI18n},function(module,exports){},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return resolveIndexPatternConflicts}));__webpack_require__.d(__webpack_exports__,"e",(function(){return saveObjects}));__webpack_require__.d(__webpack_exports__,"d",(function(){return saveObject}));__webpack_require__.d(__webpack_exports__,"c",(function(){return resolveSavedSearches}));__webpack_require__.d(__webpack_exports__,"b",(function(){return resolveSavedObjects}));var _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1);var _kbn_i18n__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__);var lodash__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0);var lodash__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);var _data_public__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(4);var _data_public__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_data_public__WEBPACK_IMPORTED_MODULE_2__);async function getSavedObject(doc,services){const service=services.find(s=>s.type===doc._type);if(!service){return}const obj=await service.get();obj.id=doc._id;obj.migrationVersion=doc._migrationVersion;return obj}function addJsonFieldToIndexPattern(target,sourceString,fieldName,indexName){if(sourceString){try{target[fieldName]=JSON.parse(sourceString)}catch(error){throw new Error(_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__["i18n"].translate("savedObjectsManagement.parsingFieldErrorMessage",{defaultMessage:"Error encountered parsing {fieldName} for index pattern {indexName}: {errorMessage}",values:{fieldName:fieldName,indexName:indexName,errorMessage:error.message}}))}}}async function importIndexPattern(doc,indexPatterns,overwriteAll=false,openConfirm){const{title:title,timeFieldName:timeFieldName,fields:fields,fieldFormatMap:fieldFormatMap,sourceFilters:sourceFilters,type:type,typeMeta:typeMeta}=doc._source;const indexPatternSpec={id:doc._id,title:title,timeFieldName:timeFieldName};let emptyPattern;if(type){indexPatternSpec.type=type}addJsonFieldToIndexPattern(indexPatternSpec,fields,"fields",title);addJsonFieldToIndexPattern(indexPatternSpec,fieldFormatMap,"fieldFormatMap",title);addJsonFieldToIndexPattern(indexPatternSpec,sourceFilters,"sourceFilters",title);addJsonFieldToIndexPattern(indexPatternSpec,typeMeta,"typeMeta",title);try{emptyPattern=await indexPatterns.createAndSave(indexPatternSpec,overwriteAll,true)}catch(err){if(err instanceof _data_public__WEBPACK_IMPORTED_MODULE_2__["DuplicateIndexPatternError"]){const isConfirmed=await openConfirm(_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__["i18n"].translate("savedObjectsManagement.indexPattern.confirmOverwriteLabel",{values:{title:title},defaultMessage:"Are you sure you want to overwrite '{title}'?"}),{title:_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__["i18n"].translate("savedObjectsManagement.indexPattern.confirmOverwriteTitle",{defaultMessage:"Overwrite {type}?",values:{type:type}}),confirmButtonText:_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__["i18n"].translate("savedObjectsManagement.indexPattern.confirmOverwriteButton",{defaultMessage:"Overwrite"})});if(isConfirmed){emptyPattern=await indexPatterns.createAndSave(indexPatternSpec,true,true)}else{return}}}indexPatterns.clearCache(emptyPattern.id);return emptyPattern.id}async function importDocument(obj,doc,overwriteAll){await obj.applyESResp({references:doc._references||[],...Object(lodash__WEBPACK_IMPORTED_MODULE_1__["cloneDeep"])(doc)});return await obj.save({confirmOverwrite:!overwriteAll})}function groupByType(docs){const defaultDocTypes={searches:[],indexPatterns:[],other:[]};return docs.reduce((types,doc)=>{switch(doc._type){case"search":types.searches.push(doc);break;case"index-pattern":types.indexPatterns.push(doc);break;default:types.other.push(doc)}return types},defaultDocTypes)}async function resolveIndexPatternConflicts(resolutions,conflictedIndexPatterns,overwriteAll,dependencies){let importCount=0;for(const{obj:obj,doc:doc}of conflictedIndexPatterns){var _doc$_source$kibanaSa;const serializedSearchSource=JSON.parse(((_doc$_source$kibanaSa=doc._source.kibanaSavedObjectMeta)===null||_doc$_source$kibanaSa===void 0?void 0:_doc$_source$kibanaSa.searchSourceJSON)||"{}");const oldIndexId=serializedSearchSource.index;let allResolved=true;const inlineResolution=resolutions.find(({oldId:oldId})=>oldId===oldIndexId);if(inlineResolution){serializedSearchSource.index=inlineResolution.newId}else{allResolved=false}const filter=(serializedSearchSource.filter||[]).map(f=>{if(!(f.meta&&f.meta.index)){return f}const resolution=resolutions.find(({oldId:oldId})=>oldId===f.meta.index);return resolution?{...f,...{meta:{...f.meta,index:resolution.newId}}}:f});if(filter.length>0){serializedSearchSource.filter=filter}const replacedReferences=(doc._references||[]).map(reference=>{const resolution=resolutions.find(({oldId:oldId})=>oldId===reference.id);if(resolution){return{...reference,id:resolution.newId}}else{allResolved=false}return reference});const serializedSearchSourceWithInjectedReferences=Object(_data_public__WEBPACK_IMPORTED_MODULE_2__["injectSearchSourceReferences"])(serializedSearchSource,replacedReferences);if(!allResolved){continue}obj.searchSource=await dependencies.search.searchSource.create(serializedSearchSourceWithInjectedReferences);if(await saveObject(obj,overwriteAll)){importCount++}}return importCount}async function saveObjects(objs,overwriteAll){let importCount=0;for(const obj of objs){if(await saveObject(obj,overwriteAll)){importCount++}}return importCount}async function saveObject(obj,overwriteAll){return await obj.save({confirmOverwrite:!overwriteAll})}async function resolveSavedSearches(savedSearches,services,indexPatterns,overwriteAll){let importCount=0;for(const searchDoc of savedSearches){const obj=await getSavedObject(searchDoc,services);if(!obj){continue}if(await importDocument(obj,searchDoc,overwriteAll)){importCount++}}return importCount}async function resolveSavedObjects(savedObjects,overwriteAll,services,indexPatterns,confirmModalPromise){const docTypes=groupByType(savedObjects);let importedObjectCount=0;const failedImports=[];for(const indexPatternDoc of docTypes.indexPatterns){try{const importedIndexPatternId=await importIndexPattern(indexPatternDoc,indexPatterns,overwriteAll,confirmModalPromise);if(importedIndexPatternId){importedObjectCount++}}catch(error){failedImports.push({obj:indexPatternDoc,error:error})}}const conflictedSearchDocs=[];const conflictedIndexPatterns=[];const conflictedSavedObjectsLinkedToSavedSearches=[];for(const searchDoc of docTypes.searches){const obj=await getSavedObject(searchDoc,services);try{if(await importDocument(obj,searchDoc,overwriteAll)){importedObjectCount++}}catch(error){if(error.constructor.name==="SavedObjectNotFound"){if(error.savedObjectType==="index-pattern"){conflictedIndexPatterns.push({obj:obj,doc:searchDoc})}else{conflictedSearchDocs.push(searchDoc)}}else{failedImports.push({obj:obj,error:error})}}}for(const otherDoc of docTypes.other){const obj=await getSavedObject(otherDoc,services);try{if(await importDocument(obj,otherDoc,overwriteAll)){importedObjectCount++}}catch(error){const isIndexPatternNotFound=error.constructor.name==="SavedObjectNotFound"&&error.savedObjectType==="index-pattern";if(isIndexPatternNotFound&&obj.savedSearchId){conflictedSavedObjectsLinkedToSavedSearches.push(obj)}else if(isIndexPatternNotFound){conflictedIndexPatterns.push({obj:obj,doc:otherDoc})}else{failedImports.push({obj:obj,error:error})}}}return{conflictedIndexPatterns:conflictedIndexPatterns,conflictedSavedObjectsLinkedToSavedSearches:conflictedSavedObjectsLinkedToSavedSearches,conflictedSearchDocs:conflictedSearchDocs,importedObjectCount:importedObjectCount,failedImports:failedImports}}},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/data/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"fetchExportByTypeAndSearch",(function(){return fetchExportByTypeAndSearch}));__webpack_require__.d(__webpack_exports__,"fetchExportObjects",(function(){return fetchExportObjects}));__webpack_require__.d(__webpack_exports__,"canViewInApp",(function(){return canViewInApp}));__webpack_require__.d(__webpack_exports__,"getRelationships",(function(){return getRelationships}));__webpack_require__.d(__webpack_exports__,"getSavedObjectCounts",(function(){return getSavedObjectCounts}));__webpack_require__.d(__webpack_exports__,"getSavedObjectLabel",(function(){return getSavedObjectLabel}));__webpack_require__.d(__webpack_exports__,"importFile",(function(){return importFile}));__webpack_require__.d(__webpack_exports__,"importLegacyFile",(function(){return importLegacyFile}));__webpack_require__.d(__webpack_exports__,"parseQuery",(function(){return parseQuery}));__webpack_require__.d(__webpack_exports__,"resolveImportErrors",(function(){return resolveImportErrors}));__webpack_require__.d(__webpack_exports__,"resolveIndexPatternConflicts",(function(){return resolve_saved_objects["a"]}));__webpack_require__.d(__webpack_exports__,"resolveSavedObjects",(function(){return resolve_saved_objects["b"]}));__webpack_require__.d(__webpack_exports__,"resolveSavedSearches",(function(){return resolve_saved_objects["c"]}));__webpack_require__.d(__webpack_exports__,"saveObject",(function(){return resolve_saved_objects["d"]}));__webpack_require__.d(__webpack_exports__,"saveObjects",(function(){return resolve_saved_objects["e"]}));__webpack_require__.d(__webpack_exports__,"logLegacyImport",(function(){return logLegacyImport}));__webpack_require__.d(__webpack_exports__,"processImportResponse",(function(){return processImportResponse}));__webpack_require__.d(__webpack_exports__,"ProcessedImportResponse",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"FailedImport",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"getDefaultTitle",(function(){return getDefaultTitle}));__webpack_require__.d(__webpack_exports__,"findObjects",(function(){return findObjects}));__webpack_require__.d(__webpack_exports__,"findObject",(function(){return findObject}));__webpack_require__.d(__webpack_exports__,"extractExportDetails",(function(){return extractExportDetails}));__webpack_require__.d(__webpack_exports__,"SavedObjectsExportResultDetails",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"createFieldList",(function(){return createFieldList}));__webpack_require__.d(__webpack_exports__,"getAllowedTypes",(function(){return getAllowedTypes}));__webpack_require__.d(__webpack_exports__,"getTagFindReferences",(function(){return getTagFindReferences}));async function fetchExportByTypeAndSearch({http:http,search:search,types:types,references:references,includeReferencesDeep:includeReferencesDeep=false}){return http.post("/api/saved_objects/_export",{body:JSON.stringify({type:types,search:search,hasReference:references,includeReferencesDeep:includeReferencesDeep})})}async function fetchExportObjects(http,objects,includeReferencesDeep=false){return http.post("/api/saved_objects/_export",{body:JSON.stringify({objects:objects,includeReferencesDeep:includeReferencesDeep})})}function canViewInApp(uiCapabilities,type){switch(type){case"search":case"searches":return uiCapabilities.discover.show;case"visualization":case"visualizations":return uiCapabilities.visualize.show;case"index-pattern":case"index-patterns":case"indexPatterns":return uiCapabilities.management.kibana.indexPatterns;case"dashboard":case"dashboards":return uiCapabilities.dashboard.show;default:return uiCapabilities[type].show}}var external_kbnSharedDeps_Lodash_=__webpack_require__(0);async function getRelationships(http,type,id,savedObjectTypes){const url=`/api/kibana/management/saved_objects/relationships/${encodeURIComponent(type)}/${encodeURIComponent(id)}`;try{return await http.get(url,{query:{savedObjectTypes:savedObjectTypes}})}catch(respError){const respBody=Object(external_kbnSharedDeps_Lodash_["get"])(respError,"data",{});const err=new Error(respBody.message||respBody.error||`${respError.status} Response`);err.statusCode=respBody.statusCode||respError.status;err.body=respBody;throw err}}async function getSavedObjectCounts({http:http,searchString:searchString,typesToInclude:typesToInclude,references:references}){return await http.post(`/api/kibana/management/saved_objects/scroll/counts`,{body:JSON.stringify({typesToInclude:typesToInclude,searchString:searchString,references:references})})}function getSavedObjectLabel(type){switch(type){case"index-pattern":case"index-patterns":case"indexPatterns":return"index patterns";default:return type}}async function importFile(http,file,{createNewCopies:createNewCopies,overwrite:overwrite}){const formData=new FormData;formData.append("file",file);const query=createNewCopies?{createNewCopies:createNewCopies}:{overwrite:overwrite};return await http.post("/api/saved_objects/_import",{body:formData,headers:{"Content-Type":undefined},query:query})}async function importLegacyFile(file){return new Promise((resolve,reject)=>{const fr=new FileReader;fr.onload=event=>{const result=event.target.result;try{resolve(JSON.parse(result))}catch(e){reject(e)}};fr.readAsText(file)})}function parseQuery(query){let queryText;let visibleTypes;let selectedTags;if(query){if(query.ast.getTermClauses().length){queryText=query.ast.getTermClauses().map(clause=>clause.value).join(" ")}if(query.ast.getFieldClauses("type")){visibleTypes=query.ast.getFieldClauses("type")[0].value}if(query.ast.getFieldClauses("tag")){selectedTags=query.ast.getFieldClauses("tag")[0].value}}return{queryText:queryText,visibleTypes:visibleTypes,selectedTags:selectedTags}}const RESOLVABLE_ERRORS=["conflict","ambiguous_conflict","missing_references"];const isConflict=failure=>failure.error.type==="conflict";const isAmbiguousConflict=failure=>failure.error.type==="ambiguous_conflict";const isAnyConflict=failure=>isConflict(failure)||isAmbiguousConflict(failure);const filterFailedImports=failures=>{const missingReferences=failures.filter(({error:{type:type}})=>type==="missing_references").reduce((acc,{obj:{type:type,id:id}})=>acc.add(`${type}:${id}`),new Set);return failures.filter(failure=>!isAnyConflict(failure)||isAnyConflict(failure)&&!missingReferences.has(`${failure.obj.type}:${failure.obj.id}`))};async function callResolveImportErrorsApi(http,file,retries,createNewCopies){const formData=new FormData;formData.append("file",file);formData.append("retries",JSON.stringify(retries));const query=createNewCopies?{createNewCopies:createNewCopies}:{};return http.post("/api/saved_objects/_resolve_import_errors",{headers:{"Content-Type":undefined},body:formData,query:query})}function mapImportFailureToRetryObject({failure:failure,retryDecisionCache:retryDecisionCache,replaceReferencesCache:replaceReferencesCache,state:state}){const{unmatchedReferences:unmatchedReferences=[]}=state;const retryDecision=retryDecisionCache.get(`${failure.obj.type}:${failure.obj.id}`);if(!(retryDecision!==null&&retryDecision!==void 0&&retryDecision.retry)&&(failure.error.type==="conflict"||failure.error.type==="ambiguous_conflict")){return}if(failure.error.type==="missing_references"){const objReplaceReferences=replaceReferencesCache.get(`${failure.obj.type}:${failure.obj.id}`)||[];const indexPatternRefs=failure.error.references.filter(obj=>obj.type==="index-pattern");for(const reference of indexPatternRefs){for(const{existingIndexPatternId:from,newIndexPatternId:to}of unmatchedReferences){const matchesIndexPatternId=from===reference.id;if(!to||!matchesIndexPatternId){continue}const type="index-pattern";if(!objReplaceReferences.some(ref=>ref.type===type&&ref.from===from&&ref.to===to)){objReplaceReferences.push({type:type,from:from,to:to})}}}replaceReferencesCache.set(`${failure.obj.type}:${failure.obj.id}`,objReplaceReferences);if(objReplaceReferences.length===0){return}}return{id:failure.obj.id,type:failure.obj.type,...(retryDecision===null||retryDecision===void 0?void 0:retryDecision.retry)&&retryDecision.options,replaceReferences:replaceReferencesCache.get(`${failure.obj.type}:${failure.obj.id}`)}}async function resolveImportErrors({http:http,getConflictResolutions:getConflictResolutions,state:state}){const retryDecisionCache=new Map;const replaceReferencesCache=new Map;let{importCount:importCount,failedImports:failedImports=[],successfulImports:successfulImports=[]}=state;const{file:file,importMode:{createNewCopies:createNewCopies,overwrite:isOverwriteAllChecked}}=state;const doesntHaveRetryDecision=({obj:obj})=>!retryDecisionCache.has(`${obj.type}:${obj.id}`);const getRetryDecision=({obj:obj})=>retryDecisionCache.get(`${obj.type}:${obj.id}`);const callMapImportFailure=failure=>mapImportFailureToRetryObject({failure:failure,retryDecisionCache:retryDecisionCache,replaceReferencesCache:replaceReferencesCache,state:state});const isNotSkipped=failure=>{var _getRetryDecision;const{type:type}=failure.error;return!RESOLVABLE_ERRORS.includes(type)||((_getRetryDecision=getRetryDecision(failure))===null||_getRetryDecision===void 0?void 0:_getRetryDecision.retry)};while(failedImports.some(failure=>RESOLVABLE_ERRORS.includes(failure.error.type))){const filteredFailures=filterFailedImports(failedImports);if(isOverwriteAllChecked){filteredFailures.filter(isConflict).forEach(({obj:{type:type,id:id},error:{destinationId:destinationId}})=>retryDecisionCache.set(`${type}:${id}`,{retry:true,options:{overwrite:true,...destinationId&&{destinationId:destinationId}}}))}const result=await getConflictResolutions(isOverwriteAllChecked?filteredFailures.filter(isAmbiguousConflict).filter(doesntHaveRetryDecision):filteredFailures.filter(isAnyConflict).filter(doesntHaveRetryDecision));for(const key of Object.keys(result)){retryDecisionCache.set(key,result[key])}const failRetries=filteredFailures.map(callMapImportFailure).filter(obj=>!!obj);const successRetries=successfulImports.map(({type:type,id:id,overwrite:overwrite,destinationId:destinationId,createNewCopy:createNewCopy})=>{const replaceReferences=replaceReferencesCache.get(`${type}:${id}`);return{type:type,id:id,...overwrite&&{overwrite:overwrite},...replaceReferences&&{replaceReferences:replaceReferences},destinationId:destinationId,createNewCopy:createNewCopy}});const retries=[...failRetries,...successRetries];if(retries.length===0){failedImports=filteredFailures.filter(isNotSkipped);break}const response=await callResolveImportErrorsApi(http,file,retries,createNewCopies);importCount=response.successCount;failedImports=[];for(const{error:error,...obj}of response.errors||[]){failedImports.push({error:error,obj:obj})}successfulImports=response.successResults||[]}return{status:"success",importCount:importCount,failedImports:failedImports,successfulImports:successfulImports}}var resolve_saved_objects=__webpack_require__(3);async function logLegacyImport(http){return http.post("/api/saved_objects/_log_legacy_import")}const process_import_response_isAnyConflict=({type:type})=>type==="conflict"||type==="ambiguous_conflict";function processImportResponse(response){var _response$successResu;const failedImports=[];const unmatchedReferences=new Map;for(const{error:error,...obj}of response.errors||[]){failedImports.push({obj:obj,error:error});if(error.type!=="missing_references"){continue}const indexPatternRefs=error.references.filter(ref=>ref.type==="index-pattern");for(const missingReference of indexPatternRefs){const conflict=unmatchedReferences.get(`${missingReference.type}:${missingReference.id}`)||{existingIndexPatternId:missingReference.id,list:[],newIndexPatternId:undefined};if(!conflict.list.some(({type:type,id:id})=>type===obj.type&&id===obj.id)){conflict.list.push(obj);unmatchedReferences.set(`${missingReference.type}:${missingReference.id}`,conflict)}}}return{failedImports:failedImports,successfulImports:(_response$successResu=response.successResults)!==null&&_response$successResu!==void 0?_response$successResu:[],unmatchedReferences:Array.from(unmatchedReferences.values()),status:unmatchedReferences.size===0&&!failedImports.some(issue=>process_import_response_isAnyConflict(issue.error))?"success":"idle",importCount:response.successCount,conflictedSavedObjectsLinkedToSavedSearches:undefined,conflictedSearchDocs:undefined,importWarnings:response.warnings}}function getDefaultTitle(object){return`${object.type} [id=${object.id}]`}function keysToCamelCaseShallow(object){return Object(external_kbnSharedDeps_Lodash_["mapKeys"])(object,(value,key)=>Object(external_kbnSharedDeps_Lodash_["camelCase"])(key))}async function findObjects(http,findOptions){const response=await http.get("/api/kibana/management/saved_objects/_find",{query:{...findOptions,hasReference:findOptions.hasReference?JSON.stringify(findOptions.hasReference):undefined}});return keysToCamelCaseShallow(response)}async function findObject(http,type,id){return await http.get(`/api/kibana/management/saved_objects/${encodeURIComponent(type)}/${encodeURIComponent(id)}`)}async function extractExportDetails(blob){const reader=new FileReader;const content=await new Promise((resolve,reject)=>{reader.addEventListener("loadend",e=>{resolve(e.target.result)});reader.addEventListener("error",e=>{reject(e)});reader.readAsText(blob,"utf-8")});const lines=content.split("\n").filter(l=>l.length>0);const maybeDetails=JSON.parse(lines[lines.length-1]);if(isExportDetails(maybeDetails)){return maybeDetails}}function isExportDetails(object){return"exportedCount"in object&&"missingRefCount"in object&&"missingReferences"in object}var public_=__webpack_require__(4);const maxRecursiveIterations=20;function createFieldList(object,service){let fields=Object.entries(object.attributes).reduce((objFields,[key,value])=>[...objFields,...createFields(key,value)],[]);fields=[...fields,...createFields("references",object.references)];if(service&&service.Class){addFieldsFromClass(service.Class,fields)}return fields}const createFields=(key,value,parents=[])=>{const path=[...parents,key];if(path.length>maxRecursiveIterations){return[]}const field={type:"text",name:path.join("."),value:value};if(Object(external_kbnSharedDeps_Lodash_["isString"])(field.value)){try{field.value=JSON.stringify(JSON.parse(field.value),undefined,2);field.type="json"}catch(err){field.type="text"}}else if(Object(external_kbnSharedDeps_Lodash_["isNumber"])(field.value)){field.type="number"}else if(Array.isArray(field.value)){field.type="array";field.value=JSON.stringify(field.value,undefined,2)}else if(Object(external_kbnSharedDeps_Lodash_["isBoolean"])(field.value)){field.type="boolean"}else if(Object(external_kbnSharedDeps_Lodash_["isPlainObject"])(field.value)){let fields=[];Object(external_kbnSharedDeps_Lodash_["forOwn"])(field.value,(childValue,childKey)=>{fields=[...fields,...createFields(childKey,childValue,path)]});return fields}return[field]};const addFieldsFromClass=function(Class,fields){const fieldMap=Object(external_kbnSharedDeps_Lodash_["keyBy"])(fields,"name");Object(external_kbnSharedDeps_Lodash_["forOwn"])(Class.mapping,(esType,name)=>{if(!name||fieldMap[name]){return}const getFieldTypeFromEsType=()=>{switch(Object(public_["castEsToKbnFieldTypeName"])(esType)){case"string":return"text";case"number":return"number";case"boolean":return"boolean";default:return"json"}};fields.push({name:name,type:getFieldTypeFromEsType(),value:undefined})});if(Class.searchSource&&!fieldMap["kibanaSavedObjectMeta.searchSourceJSON"]){fields.push({name:"kibanaSavedObjectMeta.searchSourceJSON",type:"json",value:"{}"})}if(!fieldMap.references){fields.push({name:"references",type:"array",value:"[]"})}};async function getAllowedTypes(http){const response=await http.get("/api/kibana/management/saved_objects/_allowed_types");return response.types}const getTagFindReferences=({selectedTags:selectedTags,taggingApi:taggingApi})=>{if(taggingApi&&selectedTags){const references=[];selectedTags.forEach(tagName=>{const ref=taggingApi.ui.convertNameToReference(tagName);if(ref){references.push(ref)}});return references}return undefined}},function(module,exports){},function(module,exports){},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/home/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_val_loader_dist_cjs_js_key_savedObjectsManagement_kbn_ui_shared_deps_public_path_module_creator_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(10);var _node_modules_val_loader_dist_cjs_js_key_savedObjectsManagement_kbn_ui_shared_deps_public_path_module_creator_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_val_loader_dist_cjs_js_key_savedObjectsManagement_kbn_ui_shared_deps_public_path_module_creator_js__WEBPACK_IMPORTED_MODULE_0__);__kbnBundles__.define("plugin/savedObjectsManagement/public",__webpack_require__,11);__kbnBundles__.define("plugin/savedObjectsManagement/public/lib",__webpack_require__,5)},function(module,exports,__webpack_require__){__webpack_require__.p=window.__kbnPublicPath__["savedObjectsManagement"]},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"SavedObjectsManagementPluginSetup",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"SavedObjectsManagementPluginStart",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"SavedObjectsManagementActionServiceSetup",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"SavedObjectsManagementActionServiceStart",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"SavedObjectsManagementAction",(function(){return SavedObjectsManagementAction}));__webpack_require__.d(__webpack_exports__,"SavedObjectsManagementColumnServiceSetup",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"SavedObjectsManagementColumnServiceStart",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"SavedObjectsManagementColumn",(function(){return column["SavedObjectsManagementColumn"]}));__webpack_require__.d(__webpack_exports__,"SavedObjectsManagementRecord",(function(){return record["SavedObjectsManagementRecord"]}));__webpack_require__.d(__webpack_exports__,"ISavedObjectsManagementServiceRegistry",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"SavedObjectsManagementServiceRegistryEntry",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"ProcessedImportResponse",(function(){return lib["ProcessedImportResponse"]}));__webpack_require__.d(__webpack_exports__,"processImportResponse",(function(){return lib["processImportResponse"]}));__webpack_require__.d(__webpack_exports__,"FailedImport",(function(){return lib["FailedImport"]}));__webpack_require__.d(__webpack_exports__,"SavedObjectRelation",(function(){return types["SavedObjectRelation"]}));__webpack_require__.d(__webpack_exports__,"SavedObjectWithMetadata",(function(){return types["SavedObjectWithMetadata"]}));__webpack_require__.d(__webpack_exports__,"SavedObjectMetadata",(function(){return types["SavedObjectMetadata"]}));__webpack_require__.d(__webpack_exports__,"plugin",(function(){return public_plugin}));var external_kbnSharedDeps_KbnI18n_=__webpack_require__(1);var public_=__webpack_require__(8);function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class SavedObjectsManagementActionService{constructor(){_defineProperty(this,"actions",new Map)}setup(){return{register:action=>{if(this.actions.has(action.id)){throw new Error(`Saved Objects Management Action with id '${action.id}' already exists`)}this.actions.set(action.id,action)}}}start(){return{has:actionId=>this.actions.has(actionId),getAll:()=>[...this.actions.values()]}}}function column_service_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class SavedObjectsManagementColumnService{constructor(){column_service_defineProperty(this,"columns",new Map)}setup(){return{register:column=>{if(this.columns.has(column.id)){throw new Error(`Saved Objects Management Column with id '${column.id}' already exists`)}this.columns.set(column.id,column)}}}start(){return{getAll:()=>[...this.columns.values()]}}}function service_registry_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class SavedObjectsManagementServiceRegistry{constructor(){service_registry_defineProperty(this,"registry",new Map)}register(entry){if(this.registry.has(entry.id)){throw new Error("")}this.registry.set(entry.id,entry)}all(){return[...this.registry.values()]}get(id){return this.registry.get(id)}}function action_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class SavedObjectsManagementAction{constructor(){action_defineProperty(this,"render",void 0);action_defineProperty(this,"id",void 0);action_defineProperty(this,"euiAction",void 0);action_defineProperty(this,"refreshOnFinish",void 0);action_defineProperty(this,"callbacks",[]);action_defineProperty(this,"actionContext",null);action_defineProperty(this,"record",null)}setActionContext(actionContext){this.actionContext=actionContext}registerOnFinishCallback(callback){this.callbacks.push(callback)}start(record){this.record=record}finish(){this.record=null;this.callbacks.forEach(callback=>callback())}}var column=__webpack_require__(6);var record=__webpack_require__(7);const registerServices=async(registry,getStartServices)=>{const[,{dashboard:dashboard,visualizations:visualizations,discover:discover}]=await getStartServices();if(dashboard){registry.register({id:"savedDashboards",title:"dashboards",service:dashboard.getSavedDashboardLoader()})}if(visualizations){registry.register({id:"savedVisualizations",title:"visualizations",service:visualizations.savedVisualizationsLoader})}if(discover){registry.register({id:"savedSearches",title:"searches",service:discover.savedSearchLoader})}};function plugin_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class plugin_SavedObjectsManagementPlugin{constructor(){plugin_defineProperty(this,"actionService",new SavedObjectsManagementActionService);plugin_defineProperty(this,"columnService",new SavedObjectsManagementColumnService);plugin_defineProperty(this,"serviceRegistry",new SavedObjectsManagementServiceRegistry)}setup(core,{home:home,management:management}){const actionSetup=this.actionService.setup();const columnSetup=this.columnService.setup();if(home){home.featureCatalogue.register({id:"saved_objects",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("savedObjectsManagement.objects.savedObjectsTitle",{defaultMessage:"Saved Objects"}),description:external_kbnSharedDeps_KbnI18n_["i18n"].translate("savedObjectsManagement.objects.savedObjectsDescription",{defaultMessage:"Import, export, and manage your saved searches, visualizations, and dashboards."}),icon:"savedObjectsApp",path:"/app/management/kibana/objects",showOnHomePage:false,category:public_["FeatureCatalogueCategory"].ADMIN})}const kibanaSection=management.sections.section.kibana;kibanaSection.registerApp({id:"objects",title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("savedObjectsManagement.managementSectionLabel",{defaultMessage:"Saved Objects"}),order:1,mount:async mountParams=>{const{mountManagementSection:mountManagementSection}=await __webpack_require__.e(3).then(__webpack_require__.bind(null,98));return mountManagementSection({core:core,serviceRegistry:this.serviceRegistry,mountParams:mountParams})}});registerServices(this.serviceRegistry,core.getStartServices);return{actions:actionSetup,columns:columnSetup,serviceRegistry:this.serviceRegistry}}start(core,{data:data}){const actionStart=this.actionService.start();const columnStart=this.columnService.start();return{actions:actionStart,columns:columnStart}}}var lib=__webpack_require__(5);var types=__webpack_require__(2);function public_plugin(initializerContext){return new plugin_SavedObjectsManagementPlugin}},function(module,exports){module.exports=__kbnSharedDeps__.React},function(module,exports){module.exports=__kbnSharedDeps__.ElasticEui},function(module,exports){module.exports=__kbnSharedDeps__.KbnI18nReact},function(module,exports){module.exports=__kbnSharedDeps__.ReactRouterDom},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/kibanaReact/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.ReactDom},function(module,exports){module.exports=__kbnSharedDeps__.Moment}]);