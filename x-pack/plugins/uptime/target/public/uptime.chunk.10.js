/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window["uptime_bundle_jsonpfunction"]=window["uptime_bundle_jsonpfunction"]||[]).push([[10],{303:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"validateMonitorStatusParams",(function(){return validateMonitorStatusParams}));var io_ts_lib_PathReporter__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(126);var io_ts_lib_PathReporter__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(io_ts_lib_PathReporter__WEBPACK_IMPORTED_MODULE_0__);var fp_ts_lib_Either__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(61);var fp_ts_lib_Either__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(fp_ts_lib_Either__WEBPACK_IMPORTED_MODULE_1__);var _common_runtime_types_alerts__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(118);function validateMonitorStatusParams(alertParams){var _alertParams$shouldCh,_alertParams$shouldCh2;const errors={};const decoded=_common_runtime_types_alerts__WEBPACK_IMPORTED_MODULE_2__["a"].decode(alertParams);const oldDecoded=_common_runtime_types_alerts__WEBPACK_IMPORTED_MODULE_2__["d"].decode(alertParams);const availabilityDecoded=_common_runtime_types_alerts__WEBPACK_IMPORTED_MODULE_2__["c"].decode(alertParams);if(!Object(fp_ts_lib_Either__WEBPACK_IMPORTED_MODULE_1__["isRight"])(decoded)&&!Object(fp_ts_lib_Either__WEBPACK_IMPORTED_MODULE_1__["isRight"])(oldDecoded)&&!Object(fp_ts_lib_Either__WEBPACK_IMPORTED_MODULE_1__["isRight"])(availabilityDecoded)){return{errors:{typeCheckFailure:"Provided parameters do not conform to the expected type.",typeCheckParsingMessage:io_ts_lib_PathReporter__WEBPACK_IMPORTED_MODULE_0__["PathReporter"].report(decoded)}}}if(!((_alertParams$shouldCh=alertParams.shouldCheckAvailability)!==null&&_alertParams$shouldCh!==void 0?_alertParams$shouldCh:false)&&!((_alertParams$shouldCh2=alertParams.shouldCheckStatus)!==null&&_alertParams$shouldCh2!==void 0?_alertParams$shouldCh2:false)){return{errors:{noAlertSelected:"Alert must check for monitor status or monitor availability."}}}if(Object(fp_ts_lib_Either__WEBPACK_IMPORTED_MODULE_1__["isRight"])(decoded)&&decoded.right.shouldCheckStatus){const{numTimes:numTimes,timerangeCount:timerangeCount}=decoded.right;if(numTimes<1){errors.invalidNumTimes="Number of alert check down times must be an integer greater than 0"}if(isNaN(timerangeCount)){errors.timeRangeStartValueNaN="Specified time range value must be a number"}if(timerangeCount<=0){errors.invalidTimeRangeValue="Time range value must be greater than 0"}}return{errors:errors}}}}]);