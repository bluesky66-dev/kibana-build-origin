(window["visTypeTimeseries_bundle_jsonpfunction"]=window["visTypeTimeseries_bundle_jsonpfunction"]||[]).push([[8],{128:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return visWithSplits}));var external_kbnSharedDeps_React_=__webpack_require__(1);var external_kbnSharedDeps_React_default=__webpack_require__.n(external_kbnSharedDeps_React_);var external_kbnSharedDeps_KbnI18n_=__webpack_require__(3);function getDisplayName(Component){return Component.displayName||Component.name||"Component"}var label_date_formatter=__webpack_require__(54);var external_kbnSharedDeps_Lodash_=__webpack_require__(31);function visWithSplits(WrappedComponent){function SplitVisComponent(props){const{model:model,visData:visData}=props;if(!model||!visData||!visData[model.id])return external_kbnSharedDeps_React_default.a.createElement(WrappedComponent,props);if(visData[model.id].series.every(s=>s.id.split(":").length===1)){return external_kbnSharedDeps_React_default.a.createElement(WrappedComponent,props)}const splitsVisData=visData[model.id].series.reduce((acc,series)=>{const[seriesId,splitId]=series.id.split(":");const seriesModel=model.series.find(s=>s.id===seriesId);if(!seriesModel)return acc;const label=series.splitByLabel;if(!acc[splitId]){acc[splitId]={series:[],label:series.label.toString(),labelFormatted:series.labelFormatted}}const labelHasKeyPlaceholder=/{{\s*key\s*}}/.test(seriesModel.label);acc[splitId].series.push({...series,id:seriesId,color:series.color||seriesModel.color,label:seriesModel.label&&!labelHasKeyPlaceholder?seriesModel.label:label});return acc},{});const nonSplitSeries=Object(external_kbnSharedDeps_Lodash_["first"])(visData[model.id].series.filter(series=>{const seriesModel=model.series.find(s=>s.id===series.id);if(!seriesModel)return false;return["everything","filter"].includes(seriesModel.split_mode)}));const indexOfNonSplit=nonSplitSeries?Object(external_kbnSharedDeps_Lodash_["findIndex"])(model.series,s=>s.id===nonSplitSeries.id):null;const rows=Object.keys(splitsVisData).map(key=>{const splitData=splitsVisData[key];const{series:series,label:label,labelFormatted:labelFormatted}=splitData;let additionalLabel=label;if(labelFormatted){additionalLabel=Object(label_date_formatter["a"])(labelFormatted)}const newSeries=indexOfNonSplit!=null&&indexOfNonSplit>0?[...series,nonSplitSeries]:[nonSplitSeries,...series];const newVisData={[model.id]:{id:model.id,series:newSeries||series}};return external_kbnSharedDeps_React_default.a.createElement("div",{key:key,className:"tvbSplitVis__split"},external_kbnSharedDeps_React_default.a.createElement(WrappedComponent,{model:model,visData:newVisData,onBrush:props.onBrush,additionalLabel:additionalLabel||external_kbnSharedDeps_KbnI18n_["i18n"].translate("visTypeTimeseries.emptyTextValue",{defaultMessage:"(empty)"}),backgroundColor:props.backgroundColor,getConfig:props.getConfig}))});return external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbSplitVis"},rows)}SplitVisComponent.displayName=`SplitVisComponent(${getDisplayName(WrappedComponent)})`;return SplitVisComponent}},349:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",(function(){return vis_gauge}));var external_kbnSharedDeps_React_=__webpack_require__(1);var external_kbnSharedDeps_React_default=__webpack_require__.n(external_kbnSharedDeps_React_);var vis_with_splits=__webpack_require__(128);var tick_formatter=__webpack_require__(46);var external_kbnSharedDeps_Lodash_=__webpack_require__(31);var external_kbnSharedDeps_Lodash_default=__webpack_require__.n(external_kbnSharedDeps_Lodash_);var classnames=__webpack_require__(73);var classnames_default=__webpack_require__.n(classnames);var set_is_reversed=__webpack_require__(75);var get_last_value=__webpack_require__(48);const getValueBy=(fn,data)=>{if(external_kbnSharedDeps_Lodash_default.a.isNumber(data))return data;if(!Array.isArray(data))return 0;const values=data.map(v=>v[1]);return external_kbnSharedDeps_Lodash_default.a[fn](values)};var lib=__webpack_require__(88);var lib_default=__webpack_require__.n(lib);var calculate_coordinates=__webpack_require__(92);var chart=__webpack_require__(44);function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}class gauge_vis_GaugeVis extends external_kbnSharedDeps_React_["Component"]{constructor(props){super(props);this.state={scale:1,top:0,left:0,translateX:1,translateY:1};this.handleResize=this.handleResize.bind(this)}UNSAFE_componentWillMount(){const check=()=>{this.timeout=setTimeout(()=>{const newState=Object(calculate_coordinates["a"])(this.inner,this.resize,this.state);if(newState&&this.state&&!external_kbnSharedDeps_Lodash_default.a.isEqual(newState,this.state)){this.handleResize()}check()},500)};check()}componentWillUnmount(){clearTimeout(this.timeout)}componentDidMount(){this.handleResize()}handleResize(){const newState=Object(calculate_coordinates["a"])(this.inner,this.resize,this.state);this.setState(newState)}render(){const{type:type,value:value,max:max,color:color}=this.props;const{scale:scale,translateX:translateX,translateY:translateY}=this.state;const size=2*Math.PI*50;const sliceSize=type==="half"?.6:1;const percent=value<max?value/max:1;const styles=lib_default()({default:{resize:{position:"relative",display:"flex",rowDirection:"column",flex:"1 0 auto",overflow:"hidden"},svg:{position:"absolute",top:this.state.top,left:this.state.left,transform:`matrix(${scale}, 0, 0, ${scale}, ${translateX}, ${translateY})`},innerLine:{strokeWidth:this.props.innerLine},gaugeLine:{strokeWidth:this.props.gaugeLine}},half:{svg:{transform:`matrix(${scale}, 0, 0, ${scale}, ${translateX}, ${translateY})`}}},{half:type==="half"});const props={circle:{r:50,cx:60,cy:60,fill:"rgba(0,0,0,0)",stroke:color,strokeWidth:this.props.gaugeLine,strokeDasharray:`${percent*sliceSize*size} ${size}`,transform:"rotate(-90 60 60)"},circleBackground:{r:50,cx:60,cy:60,fill:"rgba(0,0,0,0)",stroke:chart["a"].LINE_COLOR,strokeDasharray:`${sliceSize*size} ${size}`,strokeWidth:this.props.innerLine}};if(type==="half"){props.circle.transform="rotate(-197.8 60 60)";props.circleBackground.transform="rotate(162 60 60)"}if(this.props.innerColor){props.circleBackground.stroke=this.props.innerColor}let svg;if(type==="half"){svg=external_kbnSharedDeps_React_default.a.createElement("svg",{width:120.72,height:78.72},external_kbnSharedDeps_React_default.a.createElement("circle",_extends({},props.circleBackground,{style:styles.innerLine})),external_kbnSharedDeps_React_default.a.createElement("circle",_extends({},props.circle,{style:styles.gaugeLine})))}else{svg=external_kbnSharedDeps_React_default.a.createElement("svg",{width:120.72,height:120.72},external_kbnSharedDeps_React_default.a.createElement("circle",props.circleBackground),external_kbnSharedDeps_React_default.a.createElement("circle",props.circle))}return external_kbnSharedDeps_React_default.a.createElement("div",{ref:el=>this.resize=el,style:styles.resize},external_kbnSharedDeps_React_default.a.createElement("div",{style:styles.svg,ref:el=>this.inner=el},svg))}}gauge_vis_GaugeVis.defaultProps={innerLine:2,gaugeLine:10};class gauge_Gauge extends external_kbnSharedDeps_React_["Component"]{constructor(props){super(props);this.state={scale:1,top:0,left:0,translateX:1,translateY:1};this.handleResize=this.handleResize.bind(this)}UNSAFE_componentWillMount(){const check=()=>{this.timeout=setTimeout(()=>{const newState=Object(calculate_coordinates["a"])(this.inner,this.resize,this.state);if(newState&&this.state&&!external_kbnSharedDeps_Lodash_default.a.isEqual(newState,this.state)){this.handleResize()}check()},500)};check()}componentWillUnmount(){clearTimeout(this.timeout)}componentDidMount(){this.handleResize()}handleResize(){const newState=Object(calculate_coordinates["a"])(this.inner,this.resize,this.state);this.setState(newState)}render(){const{metric:metric,type:type}=this.props;const{scale:scale,translateX:translateX,translateY:translateY}=this.state;const value=metric&&Object(get_last_value["a"])(metric.data);const max=metric&&getValueBy("max",metric.data)||1;const formatter=metric&&(metric.tickFormatter||metric.formatter)||this.props.tickFormatter||(v=>v);const title=metric&&metric.label||"";const styles=lib_default()({default:{inner:{top:this.state.top||0,left:this.state.left||0,transform:`matrix(${scale}, 0, 0, ${scale}, ${translateX}, ${translateY})`}},valueColor:{value:{color:this.props.valueColor}}},this.props);const gaugeProps={value:value,reversed:Object(set_is_reversed["a"])(this.props.backgroundColor),gaugeLine:this.props.gaugeLine,innerLine:this.props.innerLine,innerColor:this.props.innerColor,max:this.props.max||max,color:metric&&metric.color||"#8ac336",type:type};let metrics;let additionalLabel;if(this.props.additionalLabel){additionalLabel=external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVisGauge__additionalLabel"},this.props.additionalLabel)}if(type==="half"){metrics=external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVisHalfGauge__metrics",ref:el=>this.inner=el,style:styles.inner},external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVisGauge__label",ref:"title"},title),external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVisGauge__value",style:styles.value,ref:"label"},formatter(value)),additionalLabel)}else{metrics=external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVisCircleGauge__metrics",ref:el=>this.inner=el,style:styles.inner},external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVisGauge__value",style:styles.value,ref:"label"},formatter(value)),external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVisGauge__label",ref:"title"},title),additionalLabel)}const classes=classnames_default()({tvbVisHalfGauge:type==="half",tvbVisCircleGauge:type==="circle","tvbVisGauge--reversed":Object(set_is_reversed["b"])(this.props.backgroundColor)});return external_kbnSharedDeps_React_default.a.createElement("div",{className:classes},external_kbnSharedDeps_React_default.a.createElement("div",{ref:el=>this.resize=el,className:`tvbVisGauge__resize`,"data-test-subj":"tvbVisGaugeContainer"},metrics,external_kbnSharedDeps_React_default.a.createElement(gauge_vis_GaugeVis,gaugeProps)))}}gauge_Gauge.defaultProps={type:"half",innerLine:2,gaugeLine:10};function getColors(props){const{model:model,visData:visData}=props;const series=Object(external_kbnSharedDeps_Lodash_["get"])(visData,`${model.id}.series`,[]).filter(s=>!Object(external_kbnSharedDeps_Lodash_["isUndefined"])(s));let text;let gauge;if(model.gauge_color_rules){model.gauge_color_rules.forEach(rule=>{if(rule.operator&&rule.value!=null){const value=series[0]&&Object(get_last_value["a"])(series[0].data)||0;if(external_kbnSharedDeps_Lodash_default.a[rule.operator](value,rule.value)){gauge=rule.gauge;text=rule.text}}})}return{text:text,gauge:gauge}}function GaugeVisualization(props){const{backgroundColor:backgroundColor,model:model,visData:visData}=props;const colors=getColors(props);const series=Object(external_kbnSharedDeps_Lodash_["get"])(visData,`${model.id}.series`,[]).filter(row=>row).map((row,i)=>{const seriesDef=model.series.find(s=>Object(external_kbnSharedDeps_Lodash_["includes"])(row.id,s.id));const newProps={};if(seriesDef){newProps.formatter=Object(tick_formatter["a"])(seriesDef.formatter,seriesDef.value_template,props.getConfig)}if(i===0&&colors.gauge)newProps.color=colors.gauge;return Object(external_kbnSharedDeps_Lodash_["assign"])({},row,newProps)});const panelBackgroundColor=model.background_color||backgroundColor;const style={backgroundColor:panelBackgroundColor};const params={metric:series[0],type:model.gauge_style||"half",additionalLabel:props.additionalLabel,backgroundColor:panelBackgroundColor};if(colors.text){params.valueColor=colors.text}if(model.gauge_width)params.gaugeLine=model.gauge_width;if(model.gauge_inner_color)params.innerColor=model.gauge_inner_color;if(model.gauge_inner_width)params.innerLine=model.gauge_inner_width;if(model.gauge_max!=null)params.max=model.gauge_max;return external_kbnSharedDeps_React_default.a.createElement("div",{className:"tvbVis",style:style},external_kbnSharedDeps_React_default.a.createElement(gauge_Gauge,params))}const vis_gauge=Object(vis_with_splits["a"])(GaugeVisualization)},44:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return COLORS}));__webpack_require__.d(__webpack_exports__,"b",(function(){return GRID_LINE_CONFIG}));__webpack_require__.d(__webpack_exports__,"e",(function(){return X_ACCESSOR_INDEX}));__webpack_require__.d(__webpack_exports__,"d",(function(){return STACK_ACCESSORS}));__webpack_require__.d(__webpack_exports__,"g",(function(){return Y_ACCESSOR_INDEXES}));__webpack_require__.d(__webpack_exports__,"f",(function(){return Y0_ACCESSOR_INDEXES}));__webpack_require__.d(__webpack_exports__,"c",(function(){return STACKED_OPTIONS}));const COLORS={LINE_COLOR:"rgba(105,112,125,0.2)",TEXT_COLOR:"rgba(0,0,0,0.4)",TEXT_COLOR_REVERSED:"rgba(255,255,255,0.5)",VALUE_COLOR:"rgba(0,0,0,0.7)",VALUE_COLOR_REVERSED:"rgba(255,255,255,0.8)"};const GRID_LINE_CONFIG={stroke:"rgba(125,125,125,0.1)"};const X_ACCESSOR_INDEX=0;const STACK_ACCESSORS=[0];const Y_ACCESSOR_INDEXES=[1];const Y0_ACCESSOR_INDEXES=[2];const STACKED_OPTIONS={NONE:"none",PERCENT:"percent",STACKED:"stacked",STACKED_WITHIN_SERIES:"stacked_within_series"}},73:function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/(function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){var classes=[];for(var i=0;i<arguments.length;i++){var arg=arguments[i];if(!arg)continue;var argType=typeof arg;if(argType==="string"||argType==="number"){classes.push(arg)}else if(Array.isArray(arg)&&arg.length){var inner=classNames.apply(null,arg);if(inner){classes.push(inner)}}else if(argType==="object"){for(var key in arg){if(hasOwn.call(arg,key)&&arg[key]){classes.push(key)}}}}return classes.join(" ")}if(true&&module.exports){classNames.default=classNames;module.exports=classNames}else if(true){!(__WEBPACK_AMD_DEFINE_ARRAY__=[],__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),__WEBPACK_AMD_DEFINE_RESULT__!==undefined&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))}else{}})()},92:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return calculateCoordinates}));var external_kbnSharedDeps_ReactDom_=__webpack_require__(4);function calcDimensions(el,scale){const newWidth=Math.floor(el.clientWidth*scale);const newHeight=Math.floor(el.clientHeight*scale);return[newWidth,newHeight]}function calculateCoordinates(innerRef,resizeRef,state){const inner=Object(external_kbnSharedDeps_ReactDom_["findDOMNode"])(innerRef);const resize=Object(external_kbnSharedDeps_ReactDom_["findDOMNode"])(resizeRef);let scale=state.scale;if(resize.clientWidth-resize.clientHeight<0){scale=resize.clientWidth/inner.clientWidth}else{scale=resize.clientHeight/inner.clientHeight}let[newWidth,newHeight]=calcDimensions(inner,scale);if(newWidth>resize.clientWidth){scale=resize.clientWidth/inner.clientWidth}if(newHeight>resize.clientHeight){scale=resize.clientHeight/inner.clientHeight}[newWidth,newHeight]=calcDimensions(inner,scale);const translateX=(newWidth-inner.clientWidth)/2;const translateY=(newHeight-inner.clientHeight)/2;const top=Math.floor((resize.clientHeight-newHeight)/2);const left=Math.floor((resize.clientWidth-newWidth)/2);return{scale:scale,top:top,left:left,translateY:translateY,translateX:translateX}}}}]);