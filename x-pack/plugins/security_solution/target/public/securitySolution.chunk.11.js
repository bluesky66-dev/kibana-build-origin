/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window["securitySolution_bundle_jsonpfunction"]=window["securitySolution_bundle_jsonpfunction"]||[]).push([[11],{1182:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"resolverPluginSetup",(function(){return resolverPluginSetup}));var lib=__webpack_require__(105);var store=__webpack_require__(752);var resolver_without_providers=__webpack_require__(746);function mockEndpointEvent({entityID:entityID,processName:processName="process name",parentEntityID:parentEntityID,timestamp:timestamp=0,eventType:eventType="start",eventCategory:eventCategory="process",pid:pid=0,eventID:eventID="event id"}){return{"@timestamp":timestamp,event:{type:eventType,category:eventCategory,id:String(eventID)},agent:{id:"agent.id",version:"agent.version",type:"agent.type"},ecs:{version:"ecs.version"},user:{name:"user.name",domain:"user.domain"},process:{entity_id:entityID,executable:"executable",args:["args0","args1","args2"],name:processName,pid:pid,hash:{md5:"hash.md5"},parent:{pid:0,entity_id:parentEntityID}}}}var models_event=__webpack_require__(200);var node=__webpack_require__(190);function mockResolverNode({id:id,name:name="node",timestamp:timestamp,parentID:parentID,stats:stats={total:0,byCategory:{}}}){const resolverNode={id:id,name:name,stats:stats,parent:parentID,data:{"@timestamp":timestamp,"process.entity_id":id,"process.name":name,"process.parent.entity_id":parentID}};return resolverNode}function mockTreeWithOneNodeAndTwoPagesOfRelatedEvents({originID:originID}){const timestamp=1600863932318;const nodeName="c";const eventsToGenerate=30;const events=[];for(let i=0;i<eventsToGenerate;i++){const newEvent=mockEndpointEvent({entityID:originID,eventID:`test-${i}`,eventType:"access",eventCategory:"registry",timestamp:timestamp});events.push(newEvent)}const originNode=mockResolverNode({id:originID,name:nodeName,timestamp:timestamp,stats:{total:eventsToGenerate,byCategory:{registry:eventsToGenerate}}});const treeResponse=[originNode];return{nodes:treeResponse,events:events}}function mockTreeWith2AncestorsAndNoChildren({originID:originID,firstAncestorID:firstAncestorID,secondAncestorID:secondAncestorID}){const secondAncestorNode=mockResolverNode({id:secondAncestorID,name:"a",timestamp:1600863932317});const firstAncestorNode=mockResolverNode({id:firstAncestorID,name:"b",parentID:secondAncestorID,timestamp:1600863932317});const originNode=mockResolverNode({id:originID,name:"c",parentID:firstAncestorID,timestamp:1600863932318,stats:{total:2,byCategory:{}}});return{originID:originID,nodes:[secondAncestorNode,firstAncestorNode,originNode]}}function withRelatedEventsOnOrigin(tree,events,nodeDataResponse,originID){const byCategory={};const stats={total:0,byCategory:byCategory};for(const event of events){stats.total++;for(const category of models_event["c"](event)){stats.byCategory[category]=stats.byCategory[category]?stats.byCategory[category]+1:1}}const originNode=tree.nodes.find(node=>node.id===originID);if(originNode){originNode.stats=stats}return{tree:tree,relatedEvents:{entityID:originID,events:events,nextEvent:null},nodeDataResponse:nodeDataResponse}}function mockTreeWithNoAncestorsAnd2Children({originID:originID,firstChildID:firstChildID,secondChildID:secondChildID}){const originProcessEvent=mockEndpointEvent({pid:0,entityID:originID,processName:"c.ext",parentEntityID:"none",timestamp:1600863932316});const firstChildProcessEvent=mockEndpointEvent({pid:1,entityID:firstChildID,processName:"d",parentEntityID:originID,timestamp:1600863932317});const secondChildProcessEvent=mockEndpointEvent({pid:2,entityID:secondChildID,processName:"really_really_really_really_really_really_really_really_really_really_really_really_really_really_long_node_name",parentEntityID:originID,timestamp:1600863932318});const originNode=mockResolverNode({id:originID,name:"c.ext",stats:{total:2,byCategory:{}},timestamp:1600863932316});const firstChildNode=mockResolverNode({id:firstChildID,name:"d",parentID:originID,timestamp:1600863932317});const secondChildNode=mockResolverNode({id:secondChildID,name:"really_really_really_really_really_really_really_really_really_really_really_really_really_really_long_node_name",parentID:originID,timestamp:1600863932318});const treeResponse=[originNode,firstChildNode,secondChildNode];return{treeResponse:treeResponse,resolverTree:{originID:originID,nodes:treeResponse},relatedEvents:{entityID:originID,events:[],nextEvent:null},nodeDataResponse:[originProcessEvent,firstChildProcessEvent,secondChildProcessEvent]}}function mockTreeWith1AncestorAnd2ChildrenAndAllNodesHave2GraphableEvents({ancestorID:ancestorID,originID:originID,firstChildID:firstChildID,secondChildID:secondChildID}){const ancestor=mockResolverNode({id:ancestorID,name:ancestorID,timestamp:1600863932317,parentID:undefined});const ancestorClone=mockResolverNode({id:ancestorID,name:ancestorID,timestamp:1600863932317,parentID:undefined});const origin=mockResolverNode({id:originID,name:originID,parentID:ancestorID,timestamp:1600863932316});const originClone=mockResolverNode({id:originID,name:originID,parentID:ancestorID,timestamp:1600863932316});const firstChild=mockResolverNode({id:firstChildID,name:firstChildID,parentID:originID,timestamp:1600863932317});const firstChildClone=mockResolverNode({id:firstChildID,name:firstChildID,parentID:originID,timestamp:1600863932317});const secondChild=mockResolverNode({id:secondChildID,name:secondChildID,parentID:originID,timestamp:1600863932318});const secondChildClone=mockResolverNode({id:secondChildID,name:secondChildID,parentID:originID,timestamp:1600863932318});const treeResponse=[ancestor,ancestorClone,origin,originClone,firstChild,firstChildClone,secondChild,secondChildClone];return{originID:originID,nodes:treeResponse}}function mockTreeWithNoProcessEvents(){return{originID:"entityID",nodes:[]}}const firstRelatedEventID="id of first related event";const secondRelatedEventID="id of second related event";function mockTreeWithNoAncestorsAndTwoChildrenAndRelatedEventsOnOrigin({originID:originID,firstChildID:firstChildID,secondChildID:secondChildID}){const{resolverTree:resolverTree,nodeDataResponse:nodeDataResponse}=mockTreeWithNoAncestorsAnd2Children({originID:originID,firstChildID:firstChildID,secondChildID:secondChildID});const parentEntityID=node["d"](resolverTree.nodes.find(node=>node.id===originID));const relatedEvents=[mockEndpointEvent({entityID:originID,parentEntityID:parentEntityID,eventID:firstRelatedEventID,eventType:"access",eventCategory:"registry"}),mockEndpointEvent({entityID:originID,parentEntityID:parentEntityID,eventID:secondRelatedEventID,eventType:"access",eventCategory:"registry"})];const categories=["authentication","database","driver","file","host","iam","intrusion_detection","malware","network","package","process","web"];for(const category of categories){relatedEvents.push(mockEndpointEvent({entityID:originID,parentEntityID:parentEntityID,eventID:`${relatedEvents.length}`,eventType:"access",eventCategory:category}))}return withRelatedEventsOnOrigin(resolverTree,relatedEvents,nodeDataResponse,originID)}function noAncestorsTwoChildrenWithRelatedEventsOnOrigin(){const metadata={databaseDocumentID:"_id",entityIDs:{origin:"origin",firstChild:"firstChild",secondChild:"secondChild"}};const{tree:tree,relatedEvents:relatedEvents,nodeDataResponse:nodeDataResponse}=mockTreeWithNoAncestorsAndTwoChildrenAndRelatedEventsOnOrigin({originID:metadata.entityIDs.origin,firstChildID:metadata.entityIDs.firstChild,secondChildID:metadata.entityIDs.secondChild});return{metadata:metadata,dataAccessLayer:{async relatedEvents({entityID:entityID,timeRange:timeRange,indexPatterns:indexPatterns}){const events=entityID===metadata.entityIDs.origin?relatedEvents.events:[];return{entityID:entityID,events:events,nextEvent:null}},async eventsWithEntityIDAndCategory({entityID:entityID,category:category,after:after,timeRange:timeRange,indexPatterns:indexPatterns}){const events=entityID===metadata.entityIDs.origin?relatedEvents.events.filter(event=>models_event["c"](event).includes(category)):[];return{events:events,nextEvent:null}},async event({nodeID:nodeID,eventID:eventID,eventCategory:eventCategory,eventTimestamp:eventTimestamp,winlogRecordID:winlogRecordID,timeRange:timeRange,indexPatterns:indexPatterns}){var _relatedEvents$events;return(_relatedEvents$events=relatedEvents.events.find(event=>models_event["d"](event)===eventID))!==null&&_relatedEvents$events!==void 0?_relatedEvents$events:null},async nodeData({ids:ids,timeRange:timeRange,indexPatterns:indexPatterns,limit:limit}){return nodeDataResponse},async resolverTree({dataId:dataId,schema:schema,timeRange:timeRange,indices:indices,ancestors:ancestors,descendants:descendants}){return tree.nodes},async entities(){return[{name:"endpoint",schema:{id:"process.entity_id",parent:"process.parent.entity_id",ancestry:"process.Ext.ancestry",name:"process.name"},id:metadata.entityIDs.origin}]}}}}function resolverPluginSetup(){return{Provider:lib["Provider"],storeFactory:store["a"],ResolverWithoutProviders:resolver_without_providers["a"],mocks:{dataAccessLayer:{noAncestorsTwoChildrenWithRelatedEventsOnOrigin:noAncestorsTwoChildrenWithRelatedEventsOnOrigin}}}}},178:function(module,exports,__webpack_require__){(function(root,factory){if(true){module.exports=factory()}else{}})(typeof self!=="undefined"?self:this,(function(){var rison={};rison.uri_ok={"~":true,"!":true,"*":true,"(":true,")":true,"-":true,_:true,".":true,",":true,":":true,"@":true,$:true,"'":true,"/":true};(function(){var l=[];for(var hi=0;hi<16;hi++){for(var lo=0;lo<16;lo++){if(hi+lo===0)continue;var c=String.fromCharCode(hi*16+lo);if(!/\w|[-_./~]/.test(c))l.push("\\u00"+hi.toString(16)+lo.toString(16))}}rison.not_idchar=l.join("")})();rison.not_idchar=" '!:(),*@$";rison.not_idstart="-0123456789";(function(){var idrx="[^"+rison.not_idstart+rison.not_idchar+"][^"+rison.not_idchar+"]*";rison.id_ok=new RegExp("^"+idrx+"$");rison.next_id=new RegExp(idrx,"g")})();rison.quote=function(x){if(/^[-A-Za-z0-9~!*()_.',:@$/]*$/.test(x))return x;return encodeURIComponent(x).replace(/%2C/g,",").replace(/%3A/g,":").replace(/%40/g,"@").replace(/%24/g,"$").replace(/%2F/g,"/").replace(/%20/g,"+")};(function(){var sq={"'":true,"!":true},enc=function(v){if(v&&typeof v.toJSON==="function")v=v.toJSON();var fn=s[typeof v];if(fn)return fn(v)},s={array:function(x){var a=["!("],b,i,l=x.length,v;for(i=0;i<l;i+=1){v=enc(x[i]);if(typeof v=="string"){if(b){a[a.length]=","}a[a.length]=v;b=true}}a[a.length]=")";return a.join("")},boolean:function(x){if(x)return"!t";return"!f"},null:function(){return"!n"},number:function(x){if(!isFinite(x))return"!n";return String(x).replace(/\+/,"")},object:function(x){if(x){if(x instanceof Array){return s.array(x)}if(typeof x.__prototype__==="object"&&typeof x.__prototype__.encode_rison!=="undefined")return x.encode_rison();var a=["("],b,i,v,ki,ks=[];for(i in x)ks[ks.length]=i;ks.sort();for(ki=0;ki<ks.length;ki++){i=ks[ki];v=enc(x[i]);if(typeof v=="string"){if(b){a[a.length]=","}a.push(s.string(i),":",v);b=true}}a[a.length]=")";return a.join("")}return"!n"},string:function(x){if(x==="")return"''";if(rison.id_ok.test(x))return x;x=x.replace(/(['!])/g,(function(a,b){if(sq[b])return"!"+b;return b}));return"'"+x+"'"},undefined:function(){return}};rison.encode=function(v){return enc(v)};rison.encode_object=function(v){if(typeof v!="object"||v===null||v instanceof Array)throw new Error("rison.encode_object expects an object argument");var r=s[typeof v](v);return r.substring(1,r.length-1)};rison.encode_array=function(v){if(!(v instanceof Array))throw new Error("rison.encode_array expects an array argument");var r=s[typeof v](v);return r.substring(2,r.length-1)};rison.encode_uri=function(v){return rison.quote(s[typeof v](v))}})();rison.decode=function(r){var errcb=function(e){throw Error("rison decoder error: "+e)};if(typeof r!=="string")return errcb("decode input must be a string");var p=new rison.parser(errcb);return p.parse(r)};rison.decode_object=function(r){return rison.decode("("+r+")")};rison.decode_array=function(r){return rison.decode("!("+r+")")};rison.parser=function(errcb){this.errorHandler=errcb};rison.parser.WHITESPACE="";rison.parser.prototype.setOptions=function(options){if(options["errorHandler"])this.errorHandler=options.errorHandler};rison.parser.prototype.parse=function(str){this.string=str;this.index=0;this.message=null;var value=this.readValue();if(!this.message&&this.next())value=this.error("unable to parse string as rison: '"+rison.encode(str)+"'");if(this.message&&this.errorHandler)this.errorHandler(this.message,this.index);return value};rison.parser.prototype.error=function(message){if(typeof console!=="undefined")console.log("rison parser error: ",message);this.message=message;return undefined};rison.parser.prototype.readValue=function(){var c=this.next();var fn=c&&this.table[c];if(fn)return fn.apply(this);var s=this.string;var i=this.index-1;rison.next_id.lastIndex=i;var m=rison.next_id.exec(s);if(m.length>0){var id=m[0];this.index=i+id.length;return id}if(c)return this.error("invalid character: '"+c+"'");return this.error("empty expression")};rison.parser.parse_array=function(parser){var ar=[];var c;while((c=parser.next())!==")"){if(!c)return parser.error("unmatched '!('");if(ar.length){if(c!==",")parser.error("missing ','")}else if(c===","){return parser.error("extra ','")}else--parser.index;var n=parser.readValue();if(typeof n=="undefined")return undefined;ar.push(n)}return ar};rison.parser.bangs={t:true,f:false,n:null,"(":rison.parser.parse_array};rison.parser.prototype.table={"!":function(){var s=this.string;var c=s.charAt(this.index++);if(!c)return this.error('"!" at end of input');var x=rison.parser.bangs[c];if(typeof x=="function"){return x.call(null,this)}else if(typeof x=="undefined"){return this.error('unknown literal: "!'+c+'"')}return x},"(":function(){var o={};var c;var count=0;while((c=this.next())!==")"){if(count){if(c!==",")this.error("missing ','")}else if(c===","){return this.error("extra ','")}else--this.index;var k=this.readValue();if(typeof k==="undefined")return undefined;if(this.next()!==":")return this.error("missing ':'");var v=this.readValue();if(typeof v==="undefined")return undefined;o[k]=v;count++}return o},"'":function(){var s=this.string;var i=this.index;var start=i;var segments=[];var c;while((c=s.charAt(i++))!=="'"){if(!c)return this.error('unmatched "\'"');if(c==="!"){if(start<i-1)segments.push(s.slice(start,i-1));c=s.charAt(i++);if("!'".indexOf(c)>=0){segments.push(c)}else{return this.error('invalid string escape: "!'+c+'"')}start=i}}if(start<i-1)segments.push(s.slice(start,i-1));this.index=i;return segments.length===1?segments[0]:segments.join("")},"-":function(){var s=this.string;var i=this.index;var start=i-1;var state="int";var permittedSigns="-";var transitions={"int+.":"frac","int+e":"exp","frac+e":"exp"};do{var c=s.charAt(i++);if(!c)break;if("0"<=c&&c<="9")continue;if(permittedSigns.indexOf(c)>=0){permittedSigns="";continue}state=transitions[state+"+"+c.toLowerCase()];if(state==="exp")permittedSigns="-"}while(state);this.index=--i;s=s.slice(start,i);if(s==="-")return this.error("invalid number");return Number(s)}};(function(table){for(var i=0;i<=9;i++)table[String(i)]=table["-"]})(rison.parser.prototype.table);rison.parser.prototype.next=function(){var c;var s=this.string;var i=this.index;do{if(i===s.length)return undefined;c=s.charAt(i++)}while(rison.parser.WHITESPACE.indexOf(c)>=0);this.index=i;return c};return rison}))},326:function(module,exports){var g;g=function(){return this}();try{g=g||new Function("return this")()}catch(e){if(typeof window==="object")g=window}module.exports=g}}]);