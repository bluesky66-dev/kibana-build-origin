(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=11)})([function(module,exports){module.exports=__kbnSharedDeps__.React},function(module,exports){module.exports=__kbnSharedDeps__.ElasticEui},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"CONFIG_TELEMETRY",(function(){return CONFIG_TELEMETRY}));__webpack_require__.d(__webpack_exports__,"getConfigTelemetryDesc",(function(){return getConfigTelemetryDesc}));__webpack_require__.d(__webpack_exports__,"REPORT_INTERVAL_MS",(function(){return REPORT_INTERVAL_MS}));__webpack_require__.d(__webpack_exports__,"LOCALSTORAGE_KEY",(function(){return LOCALSTORAGE_KEY}));__webpack_require__.d(__webpack_exports__,"PATH_TO_ADVANCED_SETTINGS",(function(){return PATH_TO_ADVANCED_SETTINGS}));__webpack_require__.d(__webpack_exports__,"PRIVACY_STATEMENT_URL",(function(){return PRIVACY_STATEMENT_URL}));__webpack_require__.d(__webpack_exports__,"ENDPOINT_VERSION",(function(){return ENDPOINT_VERSION}));var _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4);var _kbn_i18n__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__);const CONFIG_TELEMETRY="telemetry:optIn";const getConfigTelemetryDesc=()=>_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__["i18n"].translate("telemetry.telemetryConfigDescription",{defaultMessage:"Help us improve the Elastic Stack by providing usage statistics for basic features. We will not share this data outside of Elastic."});const REPORT_INTERVAL_MS=864e5;const LOCALSTORAGE_KEY="telemetry.data";const PATH_TO_ADVANCED_SETTINGS="/app/management/kibana/settings";const PRIVACY_STATEMENT_URL=`https://www.elastic.co/legal/privacy-statement`;const ENDPOINT_VERSION="v2"},function(module,exports){module.exports=__kbnSharedDeps__.KbnI18nReact},function(module,exports){module.exports=__kbnSharedDeps__.KbnI18n},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/kibanaReact/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){const SEMVER_SPEC_VERSION="2.0.0";const MAX_LENGTH=256;const MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||9007199254740991;const MAX_SAFE_COMPONENT_LENGTH=16;module.exports={SEMVER_SPEC_VERSION:SEMVER_SPEC_VERSION,MAX_LENGTH:MAX_LENGTH,MAX_SAFE_INTEGER:MAX_SAFE_INTEGER,MAX_SAFE_COMPONENT_LENGTH:MAX_SAFE_COMPONENT_LENGTH}},function(module,exports,__webpack_require__){const{MAX_SAFE_COMPONENT_LENGTH:MAX_SAFE_COMPONENT_LENGTH}=__webpack_require__(6);const debug=__webpack_require__(8);exports=module.exports={};const re=exports.re=[];const src=exports.src=[];const t=exports.t={};let R=0;const createToken=(name,value,isGlobal)=>{const index=R++;debug(index,value);t[name]=index;src[index]=value;re[index]=new RegExp(value,isGlobal?"g":undefined)};createToken("NUMERICIDENTIFIER","0|[1-9]\\d*");createToken("NUMERICIDENTIFIERLOOSE","[0-9]+");createToken("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*");createToken("MAINVERSION",`(${src[t.NUMERICIDENTIFIER]})\\.`+`(${src[t.NUMERICIDENTIFIER]})\\.`+`(${src[t.NUMERICIDENTIFIER]})`);createToken("MAINVERSIONLOOSE",`(${src[t.NUMERICIDENTIFIERLOOSE]})\\.`+`(${src[t.NUMERICIDENTIFIERLOOSE]})\\.`+`(${src[t.NUMERICIDENTIFIERLOOSE]})`);createToken("PRERELEASEIDENTIFIER",`(?:${src[t.NUMERICIDENTIFIER]}|${src[t.NONNUMERICIDENTIFIER]})`);createToken("PRERELEASEIDENTIFIERLOOSE",`(?:${src[t.NUMERICIDENTIFIERLOOSE]}|${src[t.NONNUMERICIDENTIFIER]})`);createToken("PRERELEASE",`(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`);createToken("PRERELEASELOOSE",`(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);createToken("BUILDIDENTIFIER","[0-9A-Za-z-]+");createToken("BUILD",`(?:\\+(${src[t.BUILDIDENTIFIER]}(?:\\.${src[t.BUILDIDENTIFIER]})*))`);createToken("FULLPLAIN",`v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);createToken("FULL",`^${src[t.FULLPLAIN]}$`);createToken("LOOSEPLAIN",`[v=\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);createToken("LOOSE",`^${src[t.LOOSEPLAIN]}$`);createToken("GTLT","((?:<|>)?=?)");createToken("XRANGEIDENTIFIERLOOSE",`${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`);createToken("XRANGEIDENTIFIER",`${src[t.NUMERICIDENTIFIER]}|x|X|\\*`);createToken("XRANGEPLAIN",`[v=\\s]*(${src[t.XRANGEIDENTIFIER]})`+`(?:\\.(${src[t.XRANGEIDENTIFIER]})`+`(?:\\.(${src[t.XRANGEIDENTIFIER]})`+`(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?`+`)?)?`);createToken("XRANGEPLAINLOOSE",`[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})`+`(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})`+`(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})`+`(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?`+`)?)?`);createToken("XRANGE",`^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}$`);createToken("XRANGELOOSE",`^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}$`);createToken("COERCE",`${"(^|[^\\d])"+"(\\d{1,"}${MAX_SAFE_COMPONENT_LENGTH}})`+`(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`+`(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`+`(?:$|[^\\d])`);createToken("COERCERTL",src[t.COERCE],true);createToken("LONETILDE","(?:~>?)");createToken("TILDETRIM",`(\\s*)${src[t.LONETILDE]}\\s+`,true);exports.tildeTrimReplace="$1~";createToken("TILDE",`^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`);createToken("TILDELOOSE",`^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`);createToken("LONECARET","(?:\\^)");createToken("CARETTRIM",`(\\s*)${src[t.LONECARET]}\\s+`,true);exports.caretTrimReplace="$1^";createToken("CARET",`^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`);createToken("CARETLOOSE",`^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`);createToken("COMPARATORLOOSE",`^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})$|^$`);createToken("COMPARATOR",`^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})$|^$`);createToken("COMPARATORTRIM",`(\\s*)${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`,true);exports.comparatorTrimReplace="$1$2$3";createToken("HYPHENRANGE",`^\\s*(${src[t.XRANGEPLAIN]})`+`\\s+-\\s+`+`(${src[t.XRANGEPLAIN]})`+`\\s*$`);createToken("HYPHENRANGELOOSE",`^\\s*(${src[t.XRANGEPLAINLOOSE]})`+`\\s+-\\s+`+`(${src[t.XRANGEPLAINLOOSE]})`+`\\s*$`);createToken("STAR","(<|>)?=?\\s*\\*");createToken("GTE0","^\\s*>=\\s*0.0.0\\s*$");createToken("GTE0PRE","^\\s*>=\\s*0.0.0-0\\s*$")},function(module,exports,__webpack_require__){(function(process){const debug=typeof process==="object"&&Object({IS_KIBANA_DISTRIBUTABLE:"true"})&&Object({IS_KIBANA_DISTRIBUTABLE:"true"}).NODE_DEBUG&&/\bsemver\b/i.test(Object({IS_KIBANA_DISTRIBUTABLE:"true"}).NODE_DEBUG)?(...args)=>console.error("SEMVER",...args):()=>{};module.exports=debug}).call(this,__webpack_require__(13))},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/kibanaUtils/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports,__webpack_require__){const{MAX_LENGTH:MAX_LENGTH}=__webpack_require__(6);const{re:re,t:t}=__webpack_require__(7);const SemVer=__webpack_require__(14);const parse=(version,options)=>{if(!options||typeof options!=="object"){options={loose:!!options,includePrerelease:false}}if(version instanceof SemVer){return version}if(typeof version!=="string"){return null}if(version.length>MAX_LENGTH){return null}const r=options.loose?re[t.LOOSE]:re[t.FULL];if(!r.test(version)){return null}try{return new SemVer(version,options)}catch(er){return null}};module.exports=parse},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_val_loader_dist_cjs_js_key_telemetry_kbn_ui_shared_deps_public_path_module_creator_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(12);var _node_modules_val_loader_dist_cjs_js_key_telemetry_kbn_ui_shared_deps_public_path_module_creator_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_val_loader_dist_cjs_js_key_telemetry_kbn_ui_shared_deps_public_path_module_creator_js__WEBPACK_IMPORTED_MODULE_0__);__kbnBundles__.define("plugin/telemetry/public",__webpack_require__,16);__kbnBundles__.define("plugin/telemetry/common/constants",__webpack_require__,2)},function(module,exports,__webpack_require__){__webpack_require__.p=window.__kbnPublicPath__["telemetry"]},function(module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}(function(){try{if(typeof setTimeout==="function"){cachedSetTimeout=setTimeout}else{cachedSetTimeout=defaultSetTimout}}catch(e){cachedSetTimeout=defaultSetTimout}try{if(typeof clearTimeout==="function"){cachedClearTimeout=clearTimeout}else{cachedClearTimeout=defaultClearTimeout}}catch(e){cachedClearTimeout=defaultClearTimeout}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue)}else{queueIndex=-1}if(queue.length){drainQueue()}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run()}}queueIndex=-1;len=queue.length}currentQueue=null;draining=false;runClearTimeout(timeout)}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i]}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue)}};function Item(fun,array){this.fun=fun;this.array=array}Item.prototype.run=function(){this.fun.apply(null,this.array)};process.title="browser";process.browser=true;process.env={};process.argv=[];process.version="";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error("process.binding is not supported")};process.cwd=function(){return"/"};process.chdir=function(dir){throw new Error("process.chdir is not supported")};process.umask=function(){return 0}},function(module,exports,__webpack_require__){const debug=__webpack_require__(8);const{MAX_LENGTH:MAX_LENGTH,MAX_SAFE_INTEGER:MAX_SAFE_INTEGER}=__webpack_require__(6);const{re:re,t:t}=__webpack_require__(7);const{compareIdentifiers:compareIdentifiers}=__webpack_require__(15);class SemVer{constructor(version,options){if(!options||typeof options!=="object"){options={loose:!!options,includePrerelease:false}}if(version instanceof SemVer){if(version.loose===!!options.loose&&version.includePrerelease===!!options.includePrerelease){return version}else{version=version.version}}else if(typeof version!=="string"){throw new TypeError(`Invalid Version: ${version}`)}if(version.length>MAX_LENGTH){throw new TypeError(`version is longer than ${MAX_LENGTH} characters`)}debug("SemVer",version,options);this.options=options;this.loose=!!options.loose;this.includePrerelease=!!options.includePrerelease;const m=version.trim().match(options.loose?re[t.LOOSE]:re[t.FULL]);if(!m){throw new TypeError(`Invalid Version: ${version}`)}this.raw=version;this.major=+m[1];this.minor=+m[2];this.patch=+m[3];if(this.major>MAX_SAFE_INTEGER||this.major<0){throw new TypeError("Invalid major version")}if(this.minor>MAX_SAFE_INTEGER||this.minor<0){throw new TypeError("Invalid minor version")}if(this.patch>MAX_SAFE_INTEGER||this.patch<0){throw new TypeError("Invalid patch version")}if(!m[4]){this.prerelease=[]}else{this.prerelease=m[4].split(".").map(id=>{if(/^[0-9]+$/.test(id)){const num=+id;if(num>=0&&num<MAX_SAFE_INTEGER){return num}}return id})}this.build=m[5]?m[5].split("."):[];this.format()}format(){this.version=`${this.major}.${this.minor}.${this.patch}`;if(this.prerelease.length){this.version+=`-${this.prerelease.join(".")}`}return this.version}toString(){return this.version}compare(other){debug("SemVer.compare",this.version,this.options,other);if(!(other instanceof SemVer)){if(typeof other==="string"&&other===this.version){return 0}other=new SemVer(other,this.options)}if(other.version===this.version){return 0}return this.compareMain(other)||this.comparePre(other)}compareMain(other){if(!(other instanceof SemVer)){other=new SemVer(other,this.options)}return compareIdentifiers(this.major,other.major)||compareIdentifiers(this.minor,other.minor)||compareIdentifiers(this.patch,other.patch)}comparePre(other){if(!(other instanceof SemVer)){other=new SemVer(other,this.options)}if(this.prerelease.length&&!other.prerelease.length){return-1}else if(!this.prerelease.length&&other.prerelease.length){return 1}else if(!this.prerelease.length&&!other.prerelease.length){return 0}let i=0;do{const a=this.prerelease[i];const b=other.prerelease[i];debug("prerelease compare",i,a,b);if(a===undefined&&b===undefined){return 0}else if(b===undefined){return 1}else if(a===undefined){return-1}else if(a===b){continue}else{return compareIdentifiers(a,b)}}while(++i)}compareBuild(other){if(!(other instanceof SemVer)){other=new SemVer(other,this.options)}let i=0;do{const a=this.build[i];const b=other.build[i];debug("prerelease compare",i,a,b);if(a===undefined&&b===undefined){return 0}else if(b===undefined){return 1}else if(a===undefined){return-1}else if(a===b){continue}else{return compareIdentifiers(a,b)}}while(++i)}inc(release,identifier){switch(release){case"premajor":this.prerelease.length=0;this.patch=0;this.minor=0;this.major++;this.inc("pre",identifier);break;case"preminor":this.prerelease.length=0;this.patch=0;this.minor++;this.inc("pre",identifier);break;case"prepatch":this.prerelease.length=0;this.inc("patch",identifier);this.inc("pre",identifier);break;case"prerelease":if(this.prerelease.length===0){this.inc("patch",identifier)}this.inc("pre",identifier);break;case"major":if(this.minor!==0||this.patch!==0||this.prerelease.length===0){this.major++}this.minor=0;this.patch=0;this.prerelease=[];break;case"minor":if(this.patch!==0||this.prerelease.length===0){this.minor++}this.patch=0;this.prerelease=[];break;case"patch":if(this.prerelease.length===0){this.patch++}this.prerelease=[];break;case"pre":if(this.prerelease.length===0){this.prerelease=[0]}else{let i=this.prerelease.length;while(--i>=0){if(typeof this.prerelease[i]==="number"){this.prerelease[i]++;i=-2}}if(i===-1){this.prerelease.push(0)}}if(identifier){if(this.prerelease[0]===identifier){if(isNaN(this.prerelease[1])){this.prerelease=[identifier,0]}}else{this.prerelease=[identifier,0]}}break;default:throw new Error(`invalid increment argument: ${release}`)}this.format();this.raw=this.version;return this}}module.exports=SemVer},function(module,exports){const numeric=/^[0-9]+$/;const compareIdentifiers=(a,b)=>{const anum=numeric.test(a);const bnum=numeric.test(b);if(anum&&bnum){a=+a;b=+b}return a===b?0:anum&&!bnum?-1:bnum&&!anum?1:a<b?-1:1};const rcompareIdentifiers=(a,b)=>compareIdentifiers(b,a);module.exports={compareIdentifiers:compareIdentifiers,rcompareIdentifiers:rcompareIdentifiers}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"TelemetryPluginStart",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"TelemetryPluginSetup",(function(){return undefined}));__webpack_require__.d(__webpack_exports__,"plugin",(function(){return public_plugin}));var constants=__webpack_require__(2);var public_=__webpack_require__(9);function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class telemetry_sender_TelemetrySender{constructor(telemetryService){_defineProperty(this,"telemetryService",void 0);_defineProperty(this,"isSending",false);_defineProperty(this,"lastReported",void 0);_defineProperty(this,"storage",void 0);_defineProperty(this,"intervalId",void 0);_defineProperty(this,"saveToBrowser",()=>{this.storage.set(constants["LOCALSTORAGE_KEY"],{lastReport:this.lastReported})});_defineProperty(this,"shouldSendReport",()=>{if(this.telemetryService.getIsOptedIn()){if(!this.lastReported){return true}const lastReported=parseInt(this.lastReported,10);if(isNaN(lastReported)||Date.now()-lastReported>constants["REPORT_INTERVAL_MS"]){return true}}return false});_defineProperty(this,"sendIfDue",async()=>{if(this.isSending||!this.shouldSendReport()){return}this.isSending=true;try{const telemetryUrl=this.telemetryService.getTelemetryUrl();const telemetryData=await this.telemetryService.fetchTelemetry();const clusters=[].concat(telemetryData);await Promise.all(clusters.map(async cluster=>await fetch(telemetryUrl,{method:"POST",headers:{"Content-Type":"application/json","X-Elastic-Stack-Version":this.telemetryService.currentKibanaVersion},body:cluster})));this.lastReported=`${Date.now()}`;this.saveToBrowser()}catch(err){}finally{this.isSending=false}});_defineProperty(this,"startChecking",()=>{if(typeof this.intervalId==="undefined"){this.intervalId=window.setInterval(this.sendIfDue,6e4)}});this.telemetryService=telemetryService;this.storage=new public_["Storage"](window.localStorage);const attributes=this.storage.get(constants["LOCALSTORAGE_KEY"]);if(attributes){this.lastReported=attributes.lastReport}}}var external_kbnSharedDeps_KbnI18n_=__webpack_require__(4);function telemetry_service_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class telemetry_service_TelemetryService{constructor({config:config,http:http,notifications:notifications,currentKibanaVersion:currentKibanaVersion,reportOptInStatusChange:reportOptInStatusChange=true}){telemetry_service_defineProperty(this,"http",void 0);telemetry_service_defineProperty(this,"reportOptInStatusChange",void 0);telemetry_service_defineProperty(this,"notifications",void 0);telemetry_service_defineProperty(this,"defaultConfig",void 0);telemetry_service_defineProperty(this,"updatedConfig",void 0);telemetry_service_defineProperty(this,"currentKibanaVersion",void 0);telemetry_service_defineProperty(this,"getCanChangeOptInStatus",()=>{const allowChangingOptInStatus=this.config.allowChangingOptInStatus;return allowChangingOptInStatus});telemetry_service_defineProperty(this,"getOptInStatusUrl",()=>{const telemetryOptInStatusUrl=this.config.optInStatusUrl;return telemetryOptInStatusUrl});telemetry_service_defineProperty(this,"getTelemetryUrl",()=>{const telemetryUrl=this.config.url;return telemetryUrl});telemetry_service_defineProperty(this,"getIsOptedIn",()=>this.isOptedIn);telemetry_service_defineProperty(this,"fetchExample",async()=>await this.fetchTelemetry({unencrypted:true}));telemetry_service_defineProperty(this,"fetchTelemetry",async({unencrypted:unencrypted=false}={})=>this.http.post("/api/telemetry/v2/clusters/_stats",{body:JSON.stringify({unencrypted:unencrypted})}));telemetry_service_defineProperty(this,"setOptIn",async optedIn=>{const canChangeOptInStatus=this.getCanChangeOptInStatus();if(!canChangeOptInStatus){return false}try{const optInPayload=await this.http.post("/api/telemetry/v2/optIn",{body:JSON.stringify({enabled:optedIn})});if(this.reportOptInStatusChange){await this.reportOptInStatus(optInPayload)}this.isOptedIn=optedIn}catch(err){this.notifications.toasts.addError(err,{title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("telemetry.optInErrorToastTitle",{defaultMessage:"Error"}),toastMessage:external_kbnSharedDeps_KbnI18n_["i18n"].translate("telemetry.optInErrorToastText",{defaultMessage:"An error occurred while trying to set the usage statistics preference."})});return false}return true});telemetry_service_defineProperty(this,"setUserHasSeenNotice",async()=>{try{await this.http.put("/api/telemetry/v2/userHasSeenNotice");this.userHasSeenOptedInNotice=true}catch(error){this.notifications.toasts.addError(error,{title:external_kbnSharedDeps_KbnI18n_["i18n"].translate("telemetry.optInNoticeSeenErrorTitle",{defaultMessage:"Error"}),toastMessage:external_kbnSharedDeps_KbnI18n_["i18n"].translate("telemetry.optInNoticeSeenErrorToastText",{defaultMessage:"An error occurred dismissing the notice"})});this.userHasSeenOptedInNotice=false}});telemetry_service_defineProperty(this,"reportOptInStatus",async optInPayload=>{const telemetryOptInStatusUrl=this.getOptInStatusUrl();try{await fetch(telemetryOptInStatusUrl,{method:"POST",headers:{"Content-Type":"application/json","X-Elastic-Stack-Version":this.currentKibanaVersion},body:JSON.stringify(optInPayload)})}catch(err){}});this.defaultConfig=config;this.reportOptInStatusChange=reportOptInStatusChange;this.notifications=notifications;this.currentKibanaVersion=currentKibanaVersion;this.http=http}set config(updatedConfig){this.updatedConfig=updatedConfig}get config(){return{...this.defaultConfig,...this.updatedConfig}}get isOptedIn(){return this.config.optIn}set isOptedIn(optIn){this.config={...this.config,optIn:optIn}}get userHasSeenOptedInNotice(){return this.config.telemetryNotifyUserAboutOptInDefault}set userHasSeenOptedInNotice(telemetryNotifyUserAboutOptInDefault){this.config={...this.config,telemetryNotifyUserAboutOptInDefault:telemetryNotifyUserAboutOptInDefault}}getUserShouldSeeOptInNotice(){var _ref;return(_ref=this.config.telemetryNotifyUserAboutOptInDefault&&this.config.userCanChangeSettings)!==null&&_ref!==void 0?_ref:false}get userCanChangeSettings(){var _this$config$userCanC;return(_this$config$userCanC=this.config.userCanChangeSettings)!==null&&_this$config$userCanC!==void 0?_this$config$userCanC:false}set userCanChangeSettings(userCanChangeSettings){this.config={...this.config,userCanChangeSettings:userCanChangeSettings}}}var external_kbnSharedDeps_React_=__webpack_require__(0);var external_kbnSharedDeps_React_default=__webpack_require__.n(external_kbnSharedDeps_React_);var external_kbnSharedDeps_ElasticEui_=__webpack_require__(1);var external_kbnSharedDeps_KbnI18nReact_=__webpack_require__(3);class opted_in_notice_banner_OptedInNoticeBanner extends external_kbnSharedDeps_React_["PureComponent"]{render(){const{onSeenBanner:onSeenBanner,http:http}=this.props;const basePath=http.basePath.get();const bannerTitle=external_kbnSharedDeps_KbnI18n_["i18n"].translate("telemetry.telemetryOptedInNoticeTitle",{defaultMessage:"Help us improve the Elastic Stack"});return external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiCallOut"],{title:bannerTitle},external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_KbnI18nReact_["FormattedMessage"],{id:"telemetry.telemetryOptedInNoticeDescription",defaultMessage:"To learn about how usage data helps us manage and improve our products and services, see our {privacyStatementLink}. To stop collection, {disableLink}.",values:{privacyStatementLink:external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiLink"],{onClick:onSeenBanner,href:constants["PRIVACY_STATEMENT_URL"],target:"_blank",rel:"noopener"},external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_KbnI18nReact_["FormattedMessage"],{id:"telemetry.telemetryOptedInPrivacyStatement",defaultMessage:"Privacy Statement"})),disableLink:external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiLink"],{href:`${basePath}${constants["PATH_TO_ADVANCED_SETTINGS"]}`,onClick:onSeenBanner},external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_KbnI18nReact_["FormattedMessage"],{id:"telemetry.telemetryOptedInDisableUsage",defaultMessage:"disable usage data here"}))}}),external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiSpacer"],{size:"s"}),external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiButton"],{size:"s",onClick:onSeenBanner},external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_KbnI18nReact_["FormattedMessage"],{id:"telemetry.telemetryOptedInDismissMessage",defaultMessage:"Dismiss"})))}}var kibanaReact_public_=__webpack_require__(5);function renderOptedInNoticeBanner({onSeen:onSeen,overlays:overlays,http:http}){const mount=Object(kibanaReact_public_["toMountPoint"])(external_kbnSharedDeps_React_default.a.createElement(opted_in_notice_banner_OptedInNoticeBanner,{onSeenBanner:onSeen,http:http}));const bannerId=overlays.banners.add(mount,1e4);return bannerId}class opt_in_message_OptInMessage extends external_kbnSharedDeps_React_["PureComponent"]{render(){return external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_React_["Fragment"],null,external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_KbnI18nReact_["FormattedMessage"],{id:"telemetry.telemetryBannerDescription",defaultMessage:"Want to help us improve the Elastic Stack? Data usage collection is currently disabled. Enabling data usage collection helps us manage and improve our products and services. See our {privacyStatementLink} for more details.",values:{privacyStatementLink:external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiLink"],{href:constants["PRIVACY_STATEMENT_URL"],target:"_blank",rel:"noopener"},external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_KbnI18nReact_["FormattedMessage"],{id:"telemetry.welcomeBanner.telemetryConfigDetailsDescription.telemetryPrivacyStatementLinkText",defaultMessage:"Privacy Statement"}))}}))}}class opt_in_banner_OptInBanner extends external_kbnSharedDeps_React_["PureComponent"]{render(){const{onChangeOptInClick:onChangeOptInClick}=this.props;const title=external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_KbnI18nReact_["FormattedMessage"],{id:"telemetry.welcomeBanner.title",defaultMessage:"Help us improve the Elastic Stack"});return external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiCallOut"],{iconType:"questionInCircle",title:title},external_kbnSharedDeps_React_["createElement"](opt_in_message_OptInMessage,null),external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiSpacer"],{size:"s"}),external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiFlexGroup"],{gutterSize:"s",alignItems:"center"},external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiFlexItem"],{grow:false},external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiButton"],{size:"s","data-test-subj":"enable",onClick:()=>onChangeOptInClick(true)},external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_KbnI18nReact_["FormattedMessage"],{id:"telemetry.welcomeBanner.enableButtonLabel",defaultMessage:"Enable"}))),external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiFlexItem"],{grow:false},external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_ElasticEui_["EuiButton"],{size:"s","data-test-subj":"disable",onClick:()=>onChangeOptInClick(false)},external_kbnSharedDeps_React_["createElement"](external_kbnSharedDeps_KbnI18nReact_["FormattedMessage"],{id:"telemetry.welcomeBanner.disableButtonLabel",defaultMessage:"Disable"})))))}}function renderOptInBanner({setOptIn:setOptIn,overlays:overlays}){const mount=Object(kibanaReact_public_["toMountPoint"])(external_kbnSharedDeps_React_default.a.createElement(opt_in_banner_OptInBanner,{onChangeOptInClick:setOptIn}));const bannerId=overlays.banners.add(mount,1e4);return bannerId}function telemetry_notifications_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class telemetry_notifications_TelemetryNotifications{constructor({http:http,overlays:overlays,telemetryService:telemetryService}){telemetry_notifications_defineProperty(this,"http",void 0);telemetry_notifications_defineProperty(this,"overlays",void 0);telemetry_notifications_defineProperty(this,"telemetryService",void 0);telemetry_notifications_defineProperty(this,"optedInNoticeBannerId",void 0);telemetry_notifications_defineProperty(this,"optInBannerId",void 0);telemetry_notifications_defineProperty(this,"shouldShowOptedInNoticeBanner",()=>{const userShouldSeeOptInNotice=this.telemetryService.getUserShouldSeeOptInNotice();const bannerOnScreen=typeof this.optedInNoticeBannerId!=="undefined";return!bannerOnScreen&&userShouldSeeOptInNotice});telemetry_notifications_defineProperty(this,"renderOptedInNoticeBanner",()=>{const bannerId=renderOptedInNoticeBanner({http:this.http,onSeen:this.setOptedInNoticeSeen,overlays:this.overlays});this.optedInNoticeBannerId=bannerId});telemetry_notifications_defineProperty(this,"shouldShowOptInBanner",()=>{const isOptedIn=this.telemetryService.getIsOptedIn();const bannerOnScreen=typeof this.optInBannerId!=="undefined";return!bannerOnScreen&&isOptedIn===null});telemetry_notifications_defineProperty(this,"renderOptInBanner",()=>{const bannerId=renderOptInBanner({setOptIn:this.onSetOptInClick,overlays:this.overlays});this.optInBannerId=bannerId});telemetry_notifications_defineProperty(this,"onSetOptInClick",async isOptIn=>{if(this.optInBannerId){this.overlays.banners.remove(this.optInBannerId);this.optInBannerId=undefined}await this.telemetryService.setOptIn(isOptIn)});telemetry_notifications_defineProperty(this,"setOptedInNoticeSeen",async()=>{if(this.optedInNoticeBannerId){this.overlays.banners.remove(this.optedInNoticeBannerId);this.optedInNoticeBannerId=undefined}await this.telemetryService.setUserHasSeenNotice()});this.telemetryService=telemetryService;this.http=http;this.overlays=overlays}}var parse=__webpack_require__(10);var parse_default=__webpack_require__.n(parse);const getTelemetryOptIn=({telemetrySavedObject:telemetrySavedObject,currentKibanaVersion:currentKibanaVersion,allowChangingOptInStatus:allowChangingOptInStatus,configTelemetryOptIn:configTelemetryOptIn})=>{if(typeof configTelemetryOptIn==="boolean"&&!allowChangingOptInStatus){return configTelemetryOptIn}if(telemetrySavedObject===false){return false}if(telemetrySavedObject===null||typeof telemetrySavedObject.enabled!=="boolean"){return configTelemetryOptIn}const savedOptIn=telemetrySavedObject.enabled;if(savedOptIn===true)return savedOptIn;const lastKibanaVersion=telemetrySavedObject.lastVersionChecked;if(typeof lastKibanaVersion!=="string")return null;if(lastKibanaVersion===currentKibanaVersion)return savedOptIn;const lastSemver=parseSemver(lastKibanaVersion);const currentSemver=parseSemver(currentKibanaVersion);if(lastSemver==null||currentSemver==null)return null;if(currentSemver.major>lastSemver.major)return null;if(currentSemver.major===lastSemver.major){if(currentSemver.minor>lastSemver.minor)return null}return savedOptIn};function parseSemver(version){try{return parse_default()(version)}catch(err){return null}}function getTelemetrySendUsageFrom({telemetrySavedObject:telemetrySavedObject,configTelemetrySendUsageFrom:configTelemetrySendUsageFrom}){if(!telemetrySavedObject){return configTelemetrySendUsageFrom}if(typeof telemetrySavedObject.sendUsageFrom==="undefined"){return configTelemetrySendUsageFrom}return telemetrySavedObject.sendUsageFrom}function getTelemetryAllowChangingOptInStatus({telemetrySavedObject:telemetrySavedObject,configTelemetryAllowChangingOptInStatus:configTelemetryAllowChangingOptInStatus}){if(!telemetrySavedObject){return configTelemetryAllowChangingOptInStatus}if(typeof telemetrySavedObject.allowChangingOptInStatus==="undefined"){return configTelemetryAllowChangingOptInStatus}return telemetrySavedObject.allowChangingOptInStatus}function getTelemetryFailureDetails({telemetrySavedObject:telemetrySavedObject}){if(!telemetrySavedObject){return{failureVersion:undefined,failureCount:0}}const{reportFailureCount:reportFailureCount,reportFailureVersion:reportFailureVersion}=telemetrySavedObject;return{failureCount:typeof reportFailureCount==="number"?reportFailureCount:0,failureVersion:typeof reportFailureVersion==="string"?reportFailureVersion:undefined}}function getNotifyUserAboutOptInDefault({allowChangingOptInStatus:allowChangingOptInStatus,telemetrySavedObject:telemetrySavedObject,telemetryOptedIn:telemetryOptedIn,configTelemetryOptIn:configTelemetryOptIn}){if(allowChangingOptInStatus===false){return false}if(telemetrySavedObject&&telemetrySavedObject.userHasSeenNotice===true){return false}return telemetryOptedIn===true&&configTelemetryOptIn===true}function plugin_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class plugin_TelemetryPlugin{constructor(initializerContext){plugin_defineProperty(this,"currentKibanaVersion",void 0);plugin_defineProperty(this,"config",void 0);plugin_defineProperty(this,"telemetrySender",void 0);plugin_defineProperty(this,"telemetryNotifications",void 0);plugin_defineProperty(this,"telemetryService",void 0);plugin_defineProperty(this,"canUserChangeSettings",true);this.currentKibanaVersion=initializerContext.env.packageInfo.version;this.config=initializerContext.config.get()}setup({http:http,notifications:notifications}){const config=this.config;const currentKibanaVersion=this.currentKibanaVersion;this.telemetryService=new telemetry_service_TelemetryService({config:config,http:http,notifications:notifications,currentKibanaVersion:currentKibanaVersion});this.telemetrySender=new telemetry_sender_TelemetrySender(this.telemetryService);return{telemetryService:this.telemetryService}}start({http:http,overlays:overlays,application:application,savedObjects:savedObjects}){if(!this.telemetryService){throw Error("Telemetry plugin failed to initialize properly.")}this.canUserChangeSettings=this.getCanUserChangeSettings(application);this.telemetryService.userCanChangeSettings=this.canUserChangeSettings;this.telemetryNotifications=new telemetry_notifications_TelemetryNotifications({http:http,overlays:overlays,telemetryService:this.telemetryService});application.currentAppId$.subscribe(async()=>{const isUnauthenticated=this.getIsUnauthenticated(http);if(isUnauthenticated){return}const telemetrySavedObject=await this.getTelemetrySavedObject(savedObjects.client);const updatedConfig=await this.updateConfigsBasedOnSavedObjects(telemetrySavedObject);this.telemetryService.config=updatedConfig;const telemetryBanner=updatedConfig.banner;this.maybeStartTelemetryPoller();if(telemetryBanner){this.maybeShowOptedInNotificationBanner();this.maybeShowOptInBanner()}});return{telemetryService:this.telemetryService,telemetryNotifications:this.telemetryNotifications,telemetryConstants:{getPrivacyStatementUrl:()=>constants["PRIVACY_STATEMENT_URL"]}}}getCanUserChangeSettings(application){var _ref,_application$capabili,_application$capabili2;return(_ref=(_application$capabili=application.capabilities)===null||_application$capabili===void 0?void 0:(_application$capabili2=_application$capabili.savedObjectsManagement)===null||_application$capabili2===void 0?void 0:_application$capabili2.edit)!==null&&_ref!==void 0?_ref:true}getIsUnauthenticated(http){const{anonymousPaths:anonymousPaths}=http;return anonymousPaths.isAnonymous(window.location.pathname)}maybeStartTelemetryPoller(){if(!this.telemetrySender){return}this.telemetrySender.startChecking()}maybeShowOptedInNotificationBanner(){if(!this.telemetryNotifications){return}const shouldShowBanner=this.telemetryNotifications.shouldShowOptedInNoticeBanner();if(shouldShowBanner){this.telemetryNotifications.renderOptedInNoticeBanner()}}maybeShowOptInBanner(){if(!this.telemetryNotifications){return}const shouldShowBanner=this.telemetryNotifications.shouldShowOptInBanner();if(shouldShowBanner){this.telemetryNotifications.renderOptInBanner()}}async updateConfigsBasedOnSavedObjects(telemetrySavedObject){const configTelemetrySendUsageFrom=this.config.sendUsageFrom;const configTelemetryOptIn=this.config.optIn;const configTelemetryAllowChangingOptInStatus=this.config.allowChangingOptInStatus;const currentKibanaVersion=this.currentKibanaVersion;const allowChangingOptInStatus=getTelemetryAllowChangingOptInStatus({configTelemetryAllowChangingOptInStatus:configTelemetryAllowChangingOptInStatus,telemetrySavedObject:telemetrySavedObject});const optIn=getTelemetryOptIn({configTelemetryOptIn:configTelemetryOptIn,allowChangingOptInStatus:allowChangingOptInStatus,telemetrySavedObject:telemetrySavedObject,currentKibanaVersion:currentKibanaVersion});const sendUsageFrom=getTelemetrySendUsageFrom({configTelemetrySendUsageFrom:configTelemetrySendUsageFrom,telemetrySavedObject:telemetrySavedObject});const telemetryNotifyUserAboutOptInDefault=getNotifyUserAboutOptInDefault({telemetrySavedObject:telemetrySavedObject,allowChangingOptInStatus:allowChangingOptInStatus,configTelemetryOptIn:configTelemetryOptIn,telemetryOptedIn:optIn});return{...this.config,optIn:optIn,sendUsageFrom:sendUsageFrom,telemetryNotifyUserAboutOptInDefault:telemetryNotifyUserAboutOptInDefault,userCanChangeSettings:this.canUserChangeSettings}}async getTelemetrySavedObject(savedObjectsClient){try{const{savedObjects:[{attributes:attributes}]}=await savedObjectsClient.bulkGet([{id:"telemetry",type:"telemetry"}]);return attributes}catch(error){const errorCode=error[Symbol("SavedObjectsClientErrorCode")];if(errorCode==="SavedObjectsClient/notFound"){return null}if(errorCode==="SavedObjectsClient/forbidden"){return false}throw error}}}function public_plugin(initializerContext){return new plugin_TelemetryPlugin(initializerContext)}}]);